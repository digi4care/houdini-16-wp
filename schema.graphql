schema {
  query: RootQuery
  mutation: RootMutation
}

"""A Field Group registered by ACF"""
interface AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""acf/staff block"""
type AcfStaffBlock implements Block {
  """"""
  acfBlockStaff: AcfStaffBlock_Acfblockstaff

  """"""
  attributes: AcfStaffBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type AcfStaffBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  data: BlockAttributesObject

  """"""
  id: String

  """"""
  lock: BlockAttributesObject

  """"""
  mode: String

  """"""
  name: String
}

"""Field Group"""
type AcfStaffBlock_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""acf/swiperjs block"""
type AcfSwiperjsBlock implements Block {
  """"""
  acfBlockSliderSwiperJS: AcfSwiperjsBlock_Acfblocksliderswiperjs

  """"""
  attributes: AcfSwiperjsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type AcfSwiperjsBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  data: BlockAttributesObject

  """"""
  id: String

  """"""
  lock: BlockAttributesObject

  """"""
  mode: String

  """"""
  name: String
}

"""Field Group"""
type AcfSwiperjsBlock_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [AcfSwiperjsBlock_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type AcfSwiperjsBlock_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Input for the addCartItems mutation"""
input AddCartItemsInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Cart items to be added"""
  items: [CartItemInput]
}

"""The payload for the addCartItems mutation"""
type AddCartItemsPayload {
  """"""
  added: [CartItem]

  """"""
  cart: Cart

  """"""
  cartErrors: [CartItemError]

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the addFee mutation"""
input AddFeeInput {
  """Fee amount"""
  amount: Float

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Unique name for the fee."""
  name: String!

  """The tax class for the fee if taxable."""
  taxClass: TaxClassEnum

  """Is the fee taxable?"""
  taxable: Boolean
}

"""The payload for the addFee mutation"""
type AddFeePayload {
  """"""
  cart: Cart

  """"""
  cartFee: CartFee

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the addToCart mutation"""
input AddToCartInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """JSON string representation of extra cart item data"""
  extraData: String

  """Cart item product database ID or global ID"""
  productId: Int!

  """Cart item quantity"""
  quantity: Int

  """Cart item product variation attributes"""
  variation: [ProductAttributeInput]

  """Cart item product variation database ID or global ID"""
  variationId: Int
}

"""The payload for the addToCart mutation"""
type AddToCartPayload {
  """"""
  cart: Cart

  """"""
  cartItem: CartItem

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the addToWishlist mutation"""
input AddToWishlistInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Product id"""
  productId: Int
}

"""The payload for the addToWishlist mutation"""
type AddToWishlistPayload {
  """True if the product is removed, false otherwise"""
  added: Boolean

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Description of the error"""
  error: String

  """The Product id that was added"""
  productId: Int

  """The Product ids in the wishlist"""
  wishlistProductIds: [Int]
}

"""Coupon applied to the shopping cart."""
type AppliedCoupon {
  """Coupon code"""
  code: String!

  """Description of applied coupon"""
  description: String

  """Discount applied with this coupon"""
  discountAmount(
    """Exclude Taxes (Default "true")"""
    excludeTax: Boolean
  ): String!

  """Taxes on discount applied with this coupon"""
  discountTax: String!
}

"""Input for the applyCoupon mutation"""
input ApplyCouponInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Code of coupon being applied"""
  code: String!
}

"""The payload for the applyCoupon mutation"""
type ApplyCouponPayload {
  """"""
  applied: AppliedCoupon

  """"""
  cart: Cart

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Attribute object"""
interface Attribute {
  """Name of attribute"""
  name: String

  """Selected value of attribute"""
  value: String
}

"""
Avatars are profile images for users. WordPress by default uses the Gravatar service to host and fetch avatars from.
"""
type Avatar {
  """
  URL for the default image or a default type. Accepts &#039;404&#039; (return a 404 instead of a default image), &#039;retro&#039; (8bit), &#039;monsterid&#039; (monster), &#039;wavatar&#039; (cartoon face), &#039;indenticon&#039; (the &#039;quilt&#039;), &#039;mystery&#039;, &#039;mm&#039;, or &#039;mysteryman&#039; (The Oyster Man), &#039;blank&#039; (transparent GIF), or &#039;gravatar_default&#039; (the Gravatar logo).
  """
  default: String

  """HTML attributes to insert in the IMG element. Is not sanitized."""
  extraAttr: String

  """Whether to always show the default image, never the Gravatar."""
  forceDefault: Boolean

  """Whether the avatar was successfully found."""
  foundAvatar: Boolean

  """Height of the avatar image."""
  height: Int

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """
  What rating to display avatars up to. Accepts &#039;G&#039;, &#039;PG&#039;, &#039;R&#039;, &#039;X&#039;, and are judged in that order.
  """
  rating: String

  """Type of url scheme to use. Typically HTTP vs. HTTPS."""
  scheme: String

  """
  The size of the avatar in pixels. A value of 96 will match a 96px x 96px gravatar image.
  """
  size: Int

  """URL for the gravatar image source."""
  url: String

  """Width of the avatar image."""
  width: Int
}

"""
What rating to display avatars up to. Accepts 'G', 'PG', 'R', 'X', and are judged in that order. Default is the value of the 'avatar_rating' option
"""
enum AvatarRatingEnum {
  """Indicates a G level avatar rating level."""
  G

  """Indicates a PG level avatar rating level."""
  PG

  """Indicates an R level avatar rating level."""
  R

  """Indicates an X level avatar rating level."""
  X
}

"""Product backorder enumeration"""
enum BackordersEnum {
  NO
  NOTIFY
  YES
}

"""Gutenberg block interface"""
interface Block {
  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

scalar BlockAttributesArray

scalar BlockAttributesObject

"""Gutenberg post interface"""
interface BlockEditorContentNode {
  """Gutenberg blocks"""
  blocks: [Block!]

  """Gutenberg blocks as json string"""
  blocksJSON: String

  """"""
  id: ID!

  """Previewed gutenberg blocks"""
  previewBlocks: [Block!]

  """Previewed Gutenberg blocks as json string"""
  previewBlocksJSON: String
}

"""
Connection between the RootQuery type and the BlockEditorContentNode type
"""
type BlockEditorContentNodeConnection {
  """Edges for the BlockEditorContentNodeConnection connection"""
  edges: [BlockEditorContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [BlockEditorContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type BlockEditorContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: BlockEditorContentNode
}

"""
Arguments for filtering the BlockEditorContentNodeConnection connection
"""
input BlockEditorContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""The BlockEditorPreview type"""
type BlockEditorPreview implements ContentNode & DatabaseIdentifier & Node & NodeWithAuthor & NodeWithContentEditor & NodeWithTemplate & NodeWithTitle & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: BlockEditorPreview_Acfblocksliderswiperjs

  """Connection between the NodeWithAuthor type and the User type"""
  author: NodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """The id field matches the WP_Post-&gt;ID field."""
  blockEditorPreviewId: Int! @deprecated(reason: "Deprecated in favor of the databaseId field")

  """"""
  blocks: [Block!]

  """"""
  blocksJSON: String

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier of the wgg_preview object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """"""
  lastUpdateTime: String

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """
  Connection between the BlockEditorPreview type and the BlockEditorPreview type
  """
  preview: BlockEditorPreviewToPreviewConnectionEdge

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """"""
  previewed: BlockEditorContentNode

  """"""
  previewedDatabaseId: Int

  """"""
  previewedParentDatabaseId: Int

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: ContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum BlockEditorPreviewIdType {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG

  """Identify a resource by the URI."""
  URI
}

"""
Connection between the BlockEditorPreview type and the BlockEditorPreview type
"""
type BlockEditorPreviewToPreviewConnectionEdge {
  """The node of the connection, without the edges"""
  node: BlockEditorPreview
}

"""Field Group"""
type BlockEditorPreview_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [BlockEditorPreview_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type BlockEditorPreview_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""The cart object"""
type Cart {
  """Coupons applied to the cart"""
  appliedCoupons: [AppliedCoupon]

  """Available shipping methods for this order."""
  availableShippingMethods: [ShippingPackage]

  """Shipping method chosen for this order."""
  chosenShippingMethods: [String]

  """Connection between the Cart type and the CartItem type"""
  contents(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CartToCartItemConnectionWhereArgs
  ): CartToCartItemConnection

  """Cart contents tax"""
  contentsTax: String

  """Cart contents total"""
  contentsTotal: String

  """Cart discount tax"""
  discountTax: String

  """Cart discount total"""
  discountTotal: String

  """Do display prices include taxes"""
  displayPricesIncludeTax: Boolean

  """Cart fee tax"""
  feeTax: String

  """Cart fee total"""
  feeTotal: String

  """Additional fees on the cart."""
  fees: [CartFee]

  """Is cart empty"""
  isEmpty: Boolean

  """Is customer shipping address needed"""
  needsShippingAddress: Boolean

  """Cart shipping tax"""
  shippingTax: String

  """Cart shipping total"""
  shippingTotal: String

  """Cart subtotal"""
  subtotal: String

  """Cart subtotal tax"""
  subtotalTax: String

  """Cart total after calculation"""
  total: String

  """Cart total tax amount"""
  totalTax: String

  """Cart total taxes itemized"""
  totalTaxes: [CartTax]
}

"""An error that occurred when updating the cart"""
interface CartError {
  """Reason for error"""
  reasons: [String]

  """Type of error"""
  type: CartErrorType!
}

"""Cart error type enumeration"""
enum CartErrorType {
  INVALID_CART_ITEM
  INVALID_COUPON
  INVALID_SHIPPING_METHOD
}

"""An additional fee"""
type CartFee {
  """Fee amount"""
  amount: Float

  """Fee ID"""
  id: ID!

  """Fee name"""
  name: String!

  """Fee tax class"""
  taxClass: TaxClassEnum

  """Is fee taxable?"""
  taxable: Boolean

  """Fee total"""
  total: Float
}

"""A item in the cart"""
type CartItem {
  """Object meta data"""
  extraData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]
  ): [MetaData]

  """CartItem ID"""
  key: ID!

  """Connection between the CartItem type and the Product type"""
  product: CartItemToProductConnectionEdge

  """Quantity of the product"""
  quantity: Int

  """Item&#039;s subtotal"""
  subtotal: String

  """Item&#039;s subtotal tax"""
  subtotalTax: String

  """Item&#039;s tax"""
  tax: String

  """Item&#039;s total"""
  total: String

  """Connection between the CartItem type and the ProductVariation type"""
  variation: CartItemToProductVariationConnectionEdge
}

"""Error that occurred when adding an item to the cart."""
type CartItemError implements CartError {
  """JSON string representation of extra cart item data"""
  extraData: String

  """Cart item product database ID or global ID"""
  productId: Int!

  """Cart item quantity"""
  quantity: Int

  """Reason for error"""
  reasons: [String]

  """Type of error"""
  type: CartErrorType!

  """Cart item product variation attributes"""
  variation: [ProductAttributeOutput]

  """Cart item product variation database ID or global ID"""
  variationId: Int
}

"""Cart item quantity"""
input CartItemInput {
  """JSON string representation of extra cart item data"""
  extraData: String

  """Cart item product database ID or global ID"""
  productId: Int!

  """Cart item quantity"""
  quantity: Int

  """Cart item product variation attributes"""
  variation: [ProductAttributeInput]

  """Cart item product variation database ID or global ID"""
  variationId: Int
}

"""Cart item quantity"""
input CartItemQuantityInput {
  """Cart item being updated"""
  key: ID!

  """Cart item's new quantity"""
  quantity: Int!
}

"""Connection between the CartItem type and the Product type"""
type CartItemToProductConnectionEdge {
  """The node of the connection, without the edges"""
  node: Product

  """Simple variation attribute data"""
  simpleVariations: [SimpleAttribute]
}

"""Connection between the CartItem type and the ProductVariation type"""
type CartItemToProductVariationConnectionEdge {
  """Attributes of the variation."""
  attributes: [VariationAttribute]

  """The node of the connection, without the edges"""
  node: ProductVariation
}

"""An itemized cart tax item"""
type CartTax {
  """Tax amount"""
  amount: String

  """Tax Rate ID"""
  id: ID!

  """Is tax compound?"""
  isCompound: Boolean

  """Tax label"""
  label: String!
}

"""Connection between the Cart type and the CartItem type"""
type CartToCartItemConnection {
  """Edges for the CartToCartItemConnection connection"""
  edges: [CartToCartItemConnectionEdge]

  """Total number of items in the cart."""
  itemCount: Int

  """The nodes of the connection, without the edges"""
  nodes: [CartItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo

  """Total number of different products in the cart"""
  productCount: Int
}

"""An edge in a connection"""
type CartToCartItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: CartItem
}

"""Arguments for filtering the CartToCartItemConnection connection"""
input CartToCartItemConnectionWhereArgs {
  """Limit results to cart items that require shipping"""
  needsShipping: Boolean
}

"""Product catalog visibility enumeration"""
enum CatalogVisibilityEnum {
  CATALOG
  HIDDEN
  SEARCH
  VISIBLE
}

"""The category type"""
type Category implements DatabaseIdentifier & HierarchicalTermNode & MenuItemLinkable & Node & TermNode & UniformResourceIdentifiable {
  """
  The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): CategoryToAncestorsCategoryConnection

  """The id field matches the WP_Post-&gt;ID field."""
  categoryId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the category type and the category type"""
  children(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CategoryToCategoryConnectionWhereArgs
  ): CategoryToCategoryConnection

  """Connection between the category type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CategoryToContentNodeConnectionWhereArgs
  ): CategoryToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """Connection between the category type and the category type"""
  parent: CategoryToParentCategoryConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """Connection between the category type and the post type"""
  posts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CategoryToPostConnectionWhereArgs
  ): CategoryToPostConnection

  """The Yoast SEO data of the Categories taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the category type and the Taxonomy type"""
  taxonomy: CategoryToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum CategoryIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the category type and the category type"""
type CategoryToAncestorsCategoryConnection {
  """Edges for the CategoryToAncestorsCategoryConnection connection"""
  edges: [CategoryToAncestorsCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Category]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CategoryToAncestorsCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Category
}

"""Connection between the category type and the category type"""
type CategoryToCategoryConnection {
  """Edges for the CategoryToCategoryConnection connection"""
  edges: [CategoryToCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Category]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CategoryToCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Category
}

"""Arguments for filtering the CategoryToCategoryConnection connection"""
input CategoryToCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the category type and the ContentNode type"""
type CategoryToContentNodeConnection {
  """Edges for the CategoryToContentNodeConnection connection"""
  edges: [CategoryToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CategoryToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the CategoryToContentNodeConnection connection"""
input CategoryToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypesOfCategoryEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the category type and the category type"""
type CategoryToParentCategoryConnectionEdge {
  """The node of the connection, without the edges"""
  node: Category
}

"""Connection between the category type and the post type"""
type CategoryToPostConnection {
  """Edges for the CategoryToPostConnection connection"""
  edges: [CategoryToPostConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Post]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CategoryToPostConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Post
}

"""Arguments for filtering the CategoryToPostConnection connection"""
input CategoryToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Category ID"""
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """Use Category Slug"""
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Tag Slug"""
  tag: String

  """Use Tag ID"""
  tagId: String

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagIn: [ID]

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagNotIn: [ID]

  """Array of tag slugs, used to display objects from one tag OR another"""
  tagSlugAnd: [String]

  """Array of tag slugs, used to exclude objects in specified tags"""
  tagSlugIn: [String]

  """Title of the object"""
  title: String
}

"""Connection between the category type and the Taxonomy type"""
type CategoryToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""Input for the checkout mutation"""
input CheckoutInput {
  """Create new customer account"""
  account: CreateAccountInput

  """Order billing address"""
  billing: CustomerAddressInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Order customer note"""
  customerNote: String

  """
  Define if the order is paid. It will set the status to processing and reduce stock items.
  """
  isPaid: Boolean

  """Order meta data"""
  metaData: [MetaDataInput]

  """Payment method ID."""
  paymentMethod: String

  """Ship to a separate address"""
  shipToDifferentAddress: Boolean

  """Order shipping address"""
  shipping: CustomerAddressInput

  """Order shipping method"""
  shippingMethod: [String]

  """Order transaction ID"""
  transactionId: String
}

"""The payload for the checkout mutation"""
type CheckoutPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  customer: Customer

  """"""
  order: Order

  """"""
  redirect: String

  """"""
  result: String
}

"""A Comment object"""
type Comment implements DatabaseIdentifier & Node {
  """
  User agent used to post the comment. This field is equivalent to WP_Comment-&gt;comment_agent and the value matching the &quot;comment_agent&quot; column in SQL.
  """
  agent: String

  """
  The approval status of the comment. This field is equivalent to WP_Comment-&gt;comment_approved and the value matching the &quot;comment_approved&quot; column in SQL.
  """
  approved: Boolean

  """The author of the comment"""
  author: CommentToCommenterConnectionEdge

  """
  IP address for the author. This field is equivalent to WP_Comment-&gt;comment_author_IP and the value matching the &quot;comment_author_IP&quot; column in SQL.
  """
  authorIp: String

  """ID for the comment, unique among comments."""
  commentId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the Comment type and the ContentNode type"""
  commentedOn: CommentToContentNodeConnectionEdge

  """
  Content of the comment. This field is equivalent to WP_Comment-&gt;comment_content and the value matching the &quot;comment_content&quot; column in SQL.
  """
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The unique identifier stored in the database"""
  databaseId: Int!

  """
  Date the comment was posted in local time. This field is equivalent to WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL.
  """
  date: String

  """
  Date the comment was posted in GMT. This field is equivalent to WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL.
  """
  dateGmt: String

  """The globally unique identifier for the comment object"""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """
  Karma value for the comment. This field is equivalent to WP_Comment-&gt;comment_karma and the value matching the &quot;comment_karma&quot; column in SQL.
  """
  karma: Int

  """Connection between the Comment type and the Comment type"""
  parent(
    """Arguments for filtering the connection"""
    where: CommentToParentCommentConnectionWhereArgs
  ): CommentToParentCommentConnectionEdge

  """
  The database id of the parent comment node or null if it is the root comment
  """
  parentDatabaseId: Int

  """The globally unique identifier of the parent comment node."""
  parentId: ID

  """Connection between the Comment type and the Comment type"""
  replies(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CommentToCommentConnectionWhereArgs
  ): CommentToCommentConnection

  """
  Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and the value matching the &quot;comment_type&quot; column in SQL.
  """
  type: String
}

"""A Comment Author object"""
type CommentAuthor implements Commenter & Node {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar(
    """
    Whether to always show the default image, never the Gravatar. Default false
    """
    forceDefault: Boolean

    """The rating level of the avatar."""
    rating: AvatarRatingEnum

    """
    The size attribute of the avatar field can be used to fetch avatars of different sizes. The value corresponds to the dimension in pixels to fetch. The default is 96 pixels.
    """
    size: Int = 96
  ): Avatar

  """Identifies the primary key from the database."""
  databaseId: Int!

  """The email for the comment author"""
  email: String

  """The globally unique identifier for the comment author object"""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """The name for the comment author."""
  name: String

  """The url the comment author."""
  url: String
}

"""
The Type of Identifier used to fetch a single comment node. Default is "ID". To be used along with the "id" field.
"""
enum CommentNodeIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""Connection between the Comment type and the Comment type"""
type CommentToCommentConnection {
  """Edges for the CommentToCommentConnection connection"""
  edges: [CommentToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CommentToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the CommentToCommentConnection connection"""
input CommentToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Connection between the Comment type and the Commenter type"""
type CommentToCommenterConnectionEdge {
  """The node of the connection, without the edges"""
  node: Commenter
}

"""Connection between the Comment type and the ContentNode type"""
type CommentToContentNodeConnectionEdge {
  """The node of the connection, without the edges"""
  node: ContentNode
}

"""Connection between the Comment type and the Comment type"""
type CommentToParentCommentConnectionEdge {
  """The node of the connection, without the edges"""
  node: Comment
}

"""
Arguments for filtering the CommentToParentCommentConnection connection
"""
input CommentToParentCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""The author of a comment"""
interface Commenter {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar: Avatar

  """Identifies the primary key from the database."""
  databaseId: Int!

  """The email address of the author of a comment."""
  email: String

  """The globally unique identifier for the comment author."""
  id: ID!

  """
  Whether the author information is considered restricted. (not fully public)
  """
  isRestricted: Boolean

  """The name of the author of a comment."""
  name: String

  """The url of the author of a comment."""
  url: String
}

"""Options for ordering the connection"""
enum CommentsConnectionOrderbyEnum {
  """Order by browser user agent of the commenter."""
  COMMENT_AGENT

  """Order by true/false approval of the comment."""
  COMMENT_APPROVED

  """Order by name of the comment author."""
  COMMENT_AUTHOR

  """Order by e-mail of the comment author."""
  COMMENT_AUTHOR_EMAIL

  """Order by IP address of the comment author."""
  COMMENT_AUTHOR_IP

  """Order by URL address of the comment author."""
  COMMENT_AUTHOR_URL

  """Order by the comment contents."""
  COMMENT_CONTENT

  """Order by date/time timestamp of the comment."""
  COMMENT_DATE

  """Order by GMT timezone date/time timestamp of the comment."""
  COMMENT_DATE_GMT

  """Order by the globally unique identifier for the comment object"""
  COMMENT_ID

  """Order by the array list of comment IDs listed in the where clause."""
  COMMENT_IN

  """Order by the comment karma score."""
  COMMENT_KARMA

  """Order by the comment parent ID."""
  COMMENT_PARENT

  """Order by the post object ID."""
  COMMENT_POST_ID

  """
  Order by the the type of comment, such as 'comment', 'pingback', or 'trackback'.
  """
  COMMENT_TYPE

  """Order by the user ID."""
  USER_ID
}

"""Nodes used to manage content"""
interface ContentNode implements Node & UniformResourceIdentifiable {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The ID of the node in the database."""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: ContentTemplate

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum ContentNodeIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """Identify a resource by the URI."""
  URI
}

"""Connection between the ContentNode type and the ContentType type"""
type ContentNodeToContentTypeConnectionEdge {
  """The node of the connection, without the edges"""
  node: ContentType
}

"""Connection between the ContentNode type and the User type"""
type ContentNodeToEditLastConnectionEdge {
  """The node of the connection, without the edges"""
  node: User
}

"""Connection between the ContentNode type and the User type"""
type ContentNodeToEditLockConnectionEdge {
  """The timestamp for when the node was last edited"""
  lockTimestamp: String

  """The node of the connection, without the edges"""
  node: User
}

"""Connection between the ContentNode type and the EnqueuedScript type"""
type ContentNodeToEnqueuedScriptConnection {
  """Edges for the ContentNodeToEnqueuedScriptConnection connection"""
  edges: [ContentNodeToEnqueuedScriptConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedScript]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ContentNodeToEnqueuedScriptConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedScript
}

"""
Connection between the ContentNode type and the EnqueuedStylesheet type
"""
type ContentNodeToEnqueuedStylesheetConnection {
  """Edges for the ContentNodeToEnqueuedStylesheetConnection connection"""
  edges: [ContentNodeToEnqueuedStylesheetConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedStylesheet]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ContentNodeToEnqueuedStylesheetConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedStylesheet
}

"""A union of Content Node Types that support revisions"""
union ContentRevisionUnion = Page | Post | ReusableBlock

"""The template assigned to a node of content"""
interface ContentTemplate {
  """The name of the template"""
  templateName: String
}

"""An Post Type object"""
type ContentType implements Node & UniformResourceIdentifiable {
  """Whether this content type should can be exported."""
  canExport: Boolean

  """Connection between the ContentType type and the Taxonomy type"""
  connectedTaxonomies(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentTypeToTaxonomyConnection

  """Connection between the ContentType type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ContentTypeToContentNodeConnectionWhereArgs
  ): ContentTypeToContentNodeConnection

  """
  Whether content of this type should be deleted when the author of it is deleted from the system.
  """
  deleteWithUser: Boolean

  """Description of the content type."""
  description: String

  """
  Whether to exclude nodes of this content type from front end search results.
  """
  excludeFromSearch: Boolean

  """The plural name of the content type within the GraphQL Schema."""
  graphqlPluralName: String

  """The singular name of the content type within the GraphQL Schema."""
  graphqlSingleName: String

  """
  Whether this content type should have archives. Content archives are generated by type and by date.
  """
  hasArchive: Boolean

  """Whether the content type is hierarchical, for example pages."""
  hierarchical: Boolean

  """The globally unique identifier of the post-type object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether this page is set to the static front page."""
  isFrontPage: Boolean!

  """Whether this page is set to the blog posts page."""
  isPostsPage: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Display name of the content type."""
  label: String

  """Details about the content type labels."""
  labels: PostTypeLabelDetails

  """The name of the icon file to display as a menu icon."""
  menuIcon: String

  """
  The position of this post type in the menu. Only applies if show_in_menu is true.
  """
  menuPosition: Int

  """
  The internal name of the post type. This should not be used for display purposes.
  """
  name: String

  """
  Whether a content type is intended for use publicly either via the admin interface or by front-end users. While the default settings of exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are inherited from public, each does not rely on this relationship and controls a very specific intention.
  """
  public: Boolean

  """
  Whether queries can be performed on the front end for the content type as part of parse_request().
  """
  publiclyQueryable: Boolean

  """
  Name of content type to display in REST API &quot;wp/v2&quot; namespace.
  """
  restBase: String

  """The REST Controller class assigned to handling this content type."""
  restControllerClass: String

  """Makes this content type available via the admin bar."""
  showInAdminBar: Boolean

  """Whether to add the content type to the GraphQL Schema."""
  showInGraphql: Boolean

  """
  Where to show the content type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown. If a string of an existing top level menu (eg. &quot;tools.php&quot; or &quot;edit.php?post_type=page&quot;), the post type will be placed as a sub-menu of that.
  """
  showInMenu: Boolean

  """Makes this content type available for selection in navigation menus."""
  showInNavMenus: Boolean

  """
  Whether the content type is associated with a route under the the REST API &quot;wp/v2&quot; namespace.
  """
  showInRest: Boolean

  """
  Whether to generate and allow a UI for managing this content type in the admin.
  """
  showUi: Boolean

  """The unique resource identifier path"""
  uri: String
}

"""Allowed Content Types"""
enum ContentTypeEnum {
  """The Type of Content object"""
  ATTACHMENT

  """The Type of Content object"""
  PAGE

  """The Type of Content object"""
  POST

  """The Type of Content object"""
  WGG_PREVIEW

  """The Type of Content object"""
  WP_BLOCK
}

"""
The Type of Identifier used to fetch a single Content Type node. To be used along with the "id" field. Default is "ID".
"""
enum ContentTypeIdTypeEnum {
  """The globally unique ID"""
  ID

  """The name of the content type."""
  NAME
}

"""Connection between the ContentType type and the ContentNode type"""
type ContentTypeToContentNodeConnection {
  """Edges for the ContentTypeToContentNodeConnection connection"""
  edges: [ContentTypeToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ContentTypeToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the ContentTypeToContentNodeConnection connection
"""
input ContentTypeToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the ContentType type and the Taxonomy type"""
type ContentTypeToTaxonomyConnection {
  """Edges for the ContentTypeToTaxonomyConnection connection"""
  edges: [ContentTypeToTaxonomyConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Taxonomy]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ContentTypeToTaxonomyConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Taxonomy
}

"""Allowed Content Types of the Category taxonomy."""
enum ContentTypesOfCategoryEnum {
  """The Type of Content object"""
  POST
}

"""Allowed Content Types of the PostFormat taxonomy."""
enum ContentTypesOfPostFormatEnum {
  """The Type of Content object"""
  POST
}

"""Allowed Content Types of the Tag taxonomy."""
enum ContentTypesOfTagEnum {
  """The Type of Content object"""
  POST
}

"""core/archives block"""
type CoreArchivesBlock implements Block {
  """"""
  attributes: CoreArchivesBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreArchivesBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  displayAsDropdown: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showPostCounts: Boolean!

  """"""
  type: String!
}

"""core/audio block"""
type CoreAudioBlock implements Block {
  """"""
  attributes: CoreAudioBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreAudioBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  autoplay: Boolean

  """"""
  caption: String

  """"""
  className: String

  """"""
  id: Float

  """"""
  lock: BlockAttributesObject

  """"""
  loop: Boolean

  """"""
  preload: String

  """"""
  src: String
}

union CoreAudioBlockAttributesUnion = CoreAudioBlockAttributes | CoreAudioBlockDeprecatedV1Attributes

""""""
type CoreAudioBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  autoplay: Boolean

  """"""
  caption: String

  """"""
  className: String

  """"""
  id: Float

  """"""
  lock: BlockAttributesObject

  """"""
  loop: Boolean

  """"""
  preload: String

  """"""
  src: String
}

"""core/avatar block"""
type CoreAvatarBlock implements Block {
  """"""
  attributes: CoreAvatarBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreAvatarBlockAttributes {
  """"""
  align: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  isLink: Boolean!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  size: Float!

  """"""
  style: BlockAttributesObject

  """"""
  userId: Float
}

"""core/block block"""
type CoreBlock implements Block {
  """"""
  attributes: CoreBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """"""
  reusableBlock: Node!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreBlockAttributes {
  """"""
  lock: BlockAttributesObject

  """"""
  ref: Float
}

"""core/button block"""
type CoreButtonBlock implements Block {
  """"""
  attributes: CoreButtonBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreButtonBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

union CoreButtonBlockAttributesUnion = CoreButtonBlockAttributes | CoreButtonBlockDeprecatedV1Attributes | CoreButtonBlockDeprecatedV2Attributes | CoreButtonBlockDeprecatedV3Attributes | CoreButtonBlockDeprecatedV4Attributes | CoreButtonBlockDeprecatedV5Attributes | CoreButtonBlockDeprecatedV6Attributes | CoreButtonBlockDeprecatedV7Attributes | CoreButtonBlockDeprecatedV8Attributes | CoreButtonBlockDeprecatedV9Attributes | CoreButtonBlockDeprecatedV10Attributes

""""""
type CoreButtonBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV5Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV6Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV7Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV8Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV9Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreButtonBlockDeprecatedV10Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  text: String

  """"""
  textColor: String

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

"""core/buttons block"""
type CoreButtonsBlock implements Block {
  """"""
  attributes: CoreButtonsBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreButtonsBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject
}

union CoreButtonsBlockAttributesUnion = CoreButtonsBlockAttributes | CoreButtonsBlockDeprecatedV1Attributes | CoreButtonsBlockDeprecatedV2Attributes

""""""
type CoreButtonsBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject
}

""""""
type CoreButtonsBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject
}

"""core/calendar block"""
type CoreCalendarBlock implements Block {
  """"""
  attributes: CoreCalendarBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCalendarBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  month: Int

  """"""
  year: Int
}

"""core/categories block"""
type CoreCategoriesBlock implements Block {
  """"""
  attributes: CoreCategoriesBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCategoriesBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  displayAsDropdown: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showHierarchy: Boolean!

  """"""
  showOnlyTopLevel: Boolean!

  """"""
  showPostCounts: Boolean!
}

"""core/code block"""
type CoreCodeBlock implements Block {
  """"""
  attributes: CoreCodeBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCodeBlockAttributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  content: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/column block"""
type CoreColumnBlock implements Block {
  """"""
  attributes: CoreColumnBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreColumnBlockAttributes {
  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String

  """"""
  width: String
}

union CoreColumnBlockAttributesUnion = CoreColumnBlockAttributes | CoreColumnBlockDeprecatedV1Attributes

""""""
type CoreColumnBlockDeprecatedV1Attributes {
  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String

  """"""
  width: String
}

"""core/columns block"""
type CoreColumnsBlock implements Block {
  """"""
  attributes: CoreColumnsBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreColumnsBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  isStackedOnMobile: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

union CoreColumnsBlockAttributesUnion = CoreColumnsBlockAttributes | CoreColumnsBlockDeprecatedV1Attributes | CoreColumnsBlockDeprecatedV2Attributes | CoreColumnsBlockDeprecatedV3Attributes

""""""
type CoreColumnsBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  isStackedOnMobile: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

""""""
type CoreColumnsBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  isStackedOnMobile: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

""""""
type CoreColumnsBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  isStackedOnMobile: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

"""core/comment-author-name block"""
type CoreCommentAuthorNameBlock implements Block {
  """"""
  attributes: CoreCommentAuthorNameBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentAuthorNameBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CoreCommentAuthorNameBlockAttributesUnion = CoreCommentAuthorNameBlockAttributes | CoreCommentAuthorNameBlockDeprecatedV1Attributes

""""""
type CoreCommentAuthorNameBlockDeprecatedV1Attributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/comment-content block"""
type CoreCommentContentBlock implements Block {
  """"""
  attributes: CoreCommentContentBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentContentBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/comment-date block"""
type CoreCommentDateBlock implements Block {
  """"""
  attributes: CoreCommentDateBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentDateBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  format: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

union CoreCommentDateBlockAttributesUnion = CoreCommentDateBlockAttributes | CoreCommentDateBlockDeprecatedV1Attributes

""""""
type CoreCommentDateBlockDeprecatedV1Attributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  format: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/comment-edit-link block"""
type CoreCommentEditLinkBlock implements Block {
  """"""
  attributes: CoreCommentEditLinkBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentEditLinkBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/comment-reply-link block"""
type CoreCommentReplyLinkBlock implements Block {
  """"""
  attributes: CoreCommentReplyLinkBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentReplyLinkBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/comment-template block"""
type CoreCommentTemplateBlock implements Block {
  """"""
  attributes: CoreCommentTemplateBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentTemplateBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject
}

"""core/comments-pagination block"""
type CoreCommentsPaginationBlock implements Block {
  """"""
  attributes: CoreCommentsPaginationBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentsPaginationBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  paginationArrow: String!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/comments-pagination-next block"""
type CoreCommentsPaginationNextBlock implements Block {
  """"""
  attributes: CoreCommentsPaginationNextBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentsPaginationNextBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/comments-pagination-numbers block"""
type CoreCommentsPaginationNumbersBlock implements Block {
  """"""
  attributes: CoreCommentsPaginationNumbersBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentsPaginationNumbersBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject
}

"""core/comments-pagination-previous block"""
type CoreCommentsPaginationPreviousBlock implements Block {
  """"""
  attributes: CoreCommentsPaginationPreviousBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentsPaginationPreviousBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/comments-query-loop block"""
type CoreCommentsQueryLoopBlock implements Block {
  """"""
  attributes: CoreCommentsQueryLoopBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentsQueryLoopBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

"""core/comments-title block"""
type CoreCommentsTitleBlock implements Block {
  """"""
  attributes: CoreCommentsTitleBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCommentsTitleBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  showCommentsCount: Boolean!

  """"""
  showPostTitle: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CoreCommentsTitleBlockAttributesUnion = CoreCommentsTitleBlockAttributes | CoreCommentsTitleBlockDeprecatedV1Attributes

""""""
type CoreCommentsTitleBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  showCommentsCount: Boolean!

  """"""
  showPostTitle: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/cover block"""
type CoreCoverBlock implements Block {
  """"""
  attributes: CoreCoverBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreCoverBlockAttributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

union CoreCoverBlockAttributesUnion = CoreCoverBlockAttributes | CoreCoverBlockDeprecatedV1Attributes | CoreCoverBlockDeprecatedV2Attributes | CoreCoverBlockDeprecatedV3Attributes | CoreCoverBlockDeprecatedV4Attributes | CoreCoverBlockDeprecatedV5Attributes | CoreCoverBlockDeprecatedV6Attributes | CoreCoverBlockDeprecatedV7Attributes | CoreCoverBlockDeprecatedV8Attributes | CoreCoverBlockDeprecatedV9Attributes

""""""
type CoreCoverBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV5Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV6Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV7Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV8Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

""""""
type CoreCoverBlockDeprecatedV9Attributes {
  """"""
  align: String

  """"""
  allowedBlocks: BlockAttributesArray

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  backgroundType: String!

  """"""
  className: String

  """"""
  contentPosition: String

  """"""
  customGradient: String

  """"""
  customOverlayColor: String

  """"""
  dimRatio: Float!

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  hasParallax: Boolean!

  """"""
  id: Float

  """"""
  isDark: Boolean!

  """"""
  isRepeated: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  minHeight: Float

  """"""
  minHeightUnit: String

  """"""
  overlayColor: String

  """"""
  style: BlockAttributesObject

  """"""
  url: String

  """"""
  useFeaturedImage: Boolean!
}

"""core/embed block"""
type CoreEmbedBlock implements Block {
  """"""
  attributes: CoreEmbedBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreEmbedBlockAttributes {
  """"""
  align: String

  """"""
  allowResponsive: Boolean!

  """"""
  caption: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  previewable: Boolean!

  """"""
  providerNameSlug: String

  """"""
  responsive: Boolean!

  """"""
  type: String

  """"""
  url: String
}

union CoreEmbedBlockAttributesUnion = CoreEmbedBlockAttributes | CoreEmbedBlockDeprecatedV1Attributes

""""""
type CoreEmbedBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  allowResponsive: Boolean!

  """"""
  caption: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  previewable: Boolean!

  """"""
  providerNameSlug: String

  """"""
  responsive: Boolean!

  """"""
  type: String

  """"""
  url: String
}

"""core/file block"""
type CoreFileBlock implements Block {
  """"""
  attributes: CoreFileBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreFileBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  displayPreview: Boolean

  """"""
  downloadButtonText: String

  """"""
  fileId: String

  """"""
  fileName: String

  """"""
  href: String

  """"""
  id: Float

  """"""
  lock: BlockAttributesObject

  """"""
  previewHeight: Float!

  """"""
  showDownloadButton: Boolean!

  """"""
  textLinkHref: String

  """"""
  textLinkTarget: String
}

union CoreFileBlockAttributesUnion = CoreFileBlockAttributes | CoreFileBlockDeprecatedV1Attributes

""""""
type CoreFileBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  displayPreview: Boolean

  """"""
  downloadButtonText: String

  """"""
  fileId: String

  """"""
  fileName: String

  """"""
  href: String

  """"""
  id: Float

  """"""
  lock: BlockAttributesObject

  """"""
  previewHeight: Float!

  """"""
  showDownloadButton: Boolean!

  """"""
  textLinkHref: String

  """"""
  textLinkTarget: String
}

"""core/freeform block"""
type CoreFreeformBlock implements Block {
  """"""
  attributes: CoreFreeformBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreFreeformBlockAttributes {
  """"""
  content: String

  """"""
  lock: BlockAttributesObject
}

"""core/gallery block"""
type CoreGalleryBlock implements Block {
  """"""
  attributes: CoreGalleryBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreGalleryBlockAttributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockAttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockAttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

union CoreGalleryBlockAttributesUnion = CoreGalleryBlockAttributes | CoreGalleryBlockDeprecatedV1Attributes | CoreGalleryBlockDeprecatedV2Attributes | CoreGalleryBlockDeprecatedV3Attributes | CoreGalleryBlockDeprecatedV4Attributes | CoreGalleryBlockDeprecatedV5Attributes | CoreGalleryBlockDeprecatedV6Attributes

""""""
type CoreGalleryBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockDeprecatedV1AttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockDeprecatedV1AttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

""""""
type CoreGalleryBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockDeprecatedV2AttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockDeprecatedV2AttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

""""""
type CoreGalleryBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockDeprecatedV3AttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockDeprecatedV3AttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

""""""
type CoreGalleryBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockDeprecatedV4AttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockDeprecatedV4AttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

""""""
type CoreGalleryBlockDeprecatedV5Attributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockDeprecatedV5AttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockDeprecatedV5AttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

""""""
type CoreGalleryBlockDeprecatedV6Attributes {
  """"""
  align: String

  """"""
  allowResize: Boolean!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  columns: Float

  """"""
  fixedHeight: Boolean!

  """"""
  ids: [Float]!

  """"""
  imageCrop: Boolean!

  """"""
  images: [CoreGalleryBlockDeprecatedV6AttributesImages]!

  """"""
  layout: BlockAttributesObject

  """"""
  linkTarget: String

  """"""
  linkTo: String

  """"""
  lock: BlockAttributesObject

  """"""
  shortCodeTransforms: [BlockAttributesObject]!

  """"""
  sizeSlug: String!

  """"""
  style: BlockAttributesObject
}

""""""
type CoreGalleryBlockDeprecatedV6AttributesImages {
  """"""
  alt: String!

  """"""
  caption: String

  """"""
  fullUrl: String

  """"""
  id: String

  """"""
  link: String

  """"""
  url: String
}

"""core/group block"""
type CoreGroupBlock implements Block {
  """"""
  attributes: CoreGroupBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreGroupBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

union CoreGroupBlockAttributesUnion = CoreGroupBlockAttributes | CoreGroupBlockDeprecatedV1Attributes | CoreGroupBlockDeprecatedV2Attributes | CoreGroupBlockDeprecatedV3Attributes | CoreGroupBlockDeprecatedV4Attributes

""""""
type CoreGroupBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

""""""
type CoreGroupBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

""""""
type CoreGroupBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

""""""
type CoreGroupBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

"""core/heading block"""
type CoreHeadingBlock implements Block {
  """"""
  attributes: CoreHeadingBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreHeadingBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontSize: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CoreHeadingBlockAttributesUnion = CoreHeadingBlockAttributes | CoreHeadingBlockDeprecatedV1Attributes | CoreHeadingBlockDeprecatedV2Attributes | CoreHeadingBlockDeprecatedV3Attributes | CoreHeadingBlockDeprecatedV4Attributes

""""""
type CoreHeadingBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontSize: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

""""""
type CoreHeadingBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontSize: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

""""""
type CoreHeadingBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontSize: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

""""""
type CoreHeadingBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontSize: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/home-link block"""
type CoreHomeLinkBlock implements Block {
  """"""
  attributes: CoreHomeLinkBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreHomeLinkBlockAttributes {
  """"""
  className: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject
}

"""core/html block"""
type CoreHtmlBlock implements Block {
  """"""
  attributes: CoreHtmlBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreHtmlBlockAttributes {
  """"""
  content: String

  """"""
  lock: BlockAttributesObject
}

"""core/image block"""
type CoreImageBlock implements Block {
  """"""
  attributes: CoreImageBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreImageBlockAttributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  height: Float

  """"""
  href: String

  """"""
  id: Float

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String

  """"""
  sizeSlug: String

  """"""
  style: BlockAttributesObject

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

union CoreImageBlockAttributesUnion = CoreImageBlockAttributes | CoreImageBlockDeprecatedV1Attributes | CoreImageBlockDeprecatedV2Attributes | CoreImageBlockDeprecatedV3Attributes | CoreImageBlockDeprecatedV4Attributes

""""""
type CoreImageBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  height: Float

  """"""
  href: String

  """"""
  id: Float

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String

  """"""
  sizeSlug: String

  """"""
  style: BlockAttributesObject

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreImageBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  height: Float

  """"""
  href: String

  """"""
  id: Float

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String

  """"""
  sizeSlug: String

  """"""
  style: BlockAttributesObject

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreImageBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  height: Float

  """"""
  href: String

  """"""
  id: Float

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String

  """"""
  sizeSlug: String

  """"""
  style: BlockAttributesObject

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

""""""
type CoreImageBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  anchor: String

  """"""
  caption: String

  """"""
  className: String

  """"""
  height: Float

  """"""
  href: String

  """"""
  id: Float

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String

  """"""
  sizeSlug: String

  """"""
  style: BlockAttributesObject

  """"""
  title: String

  """"""
  url: String

  """"""
  width: Float
}

"""core/latest-comments block"""
type CoreLatestCommentsBlock implements Block {
  """"""
  attributes: CoreLatestCommentsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreLatestCommentsBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  commentsToShow: Float!

  """"""
  displayAvatar: Boolean!

  """"""
  displayDate: Boolean!

  """"""
  displayExcerpt: Boolean!

  """"""
  lock: BlockAttributesObject
}

"""core/latest-posts block"""
type CoreLatestPostsBlock implements Block {
  """"""
  attributes: CoreLatestPostsBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreLatestPostsBlockAttributes {
  """"""
  addLinkToFeaturedImage: Boolean!

  """"""
  align: String

  """"""
  categories: [BlockAttributesObject]

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  displayAuthor: Boolean!

  """"""
  displayFeaturedImage: Boolean!

  """"""
  displayPostContent: Boolean!

  """"""
  displayPostContentRadio: String!

  """"""
  displayPostDate: Boolean!

  """"""
  excerptLength: Float!

  """"""
  featuredImageAlign: String

  """"""
  featuredImageSizeHeight: Float

  """"""
  featuredImageSizeSlug: String!

  """"""
  featuredImageSizeWidth: Float

  """"""
  lock: BlockAttributesObject

  """"""
  order: String!

  """"""
  orderBy: String!

  """"""
  postLayout: String!

  """"""
  postsToShow: Float!

  """"""
  selectedAuthor: Float
}

union CoreLatestPostsBlockAttributesUnion = CoreLatestPostsBlockAttributes | CoreLatestPostsBlockDeprecatedV1Attributes

""""""
type CoreLatestPostsBlockDeprecatedV1Attributes {
  """"""
  addLinkToFeaturedImage: Boolean!

  """"""
  align: String

  """"""
  categories: [BlockAttributesObject]

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  displayAuthor: Boolean!

  """"""
  displayFeaturedImage: Boolean!

  """"""
  displayPostContent: Boolean!

  """"""
  displayPostContentRadio: String!

  """"""
  displayPostDate: Boolean!

  """"""
  excerptLength: Float!

  """"""
  featuredImageAlign: String

  """"""
  featuredImageSizeHeight: Float

  """"""
  featuredImageSizeSlug: String!

  """"""
  featuredImageSizeWidth: Float

  """"""
  lock: BlockAttributesObject

  """"""
  order: String!

  """"""
  orderBy: String!

  """"""
  postLayout: String!

  """"""
  postsToShow: Float!

  """"""
  selectedAuthor: Float
}

"""core/list block"""
type CoreListBlock implements Block {
  """"""
  attributes: CoreListBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreListBlockAttributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  ordered: Boolean!

  """"""
  placeholder: String

  """"""
  reversed: Boolean

  """"""
  start: Float

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  type: String

  """"""
  values: String!
}

union CoreListBlockAttributesUnion = CoreListBlockAttributes | CoreListBlockDeprecatedV1Attributes

""""""
type CoreListBlockDeprecatedV1Attributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  ordered: Boolean!

  """"""
  placeholder: String

  """"""
  reversed: Boolean

  """"""
  start: Float

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  type: String

  """"""
  values: String!
}

"""core/loginout block"""
type CoreLoginoutBlock implements Block {
  """"""
  attributes: CoreLoginoutBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreLoginoutBlockAttributes {
  """"""
  className: String

  """"""
  displayLoginAsForm: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  redirectToCurrent: Boolean!
}

"""core/media-text block"""
type CoreMediaTextBlock implements Block {
  """"""
  attributes: CoreMediaTextBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreMediaTextBlockAttributes {
  """"""
  align: String!

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  href: String

  """"""
  imageFill: Boolean

  """"""
  isStackedOnMobile: Boolean!

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  mediaAlt: String!

  """"""
  mediaId: Float

  """"""
  mediaLink: String

  """"""
  mediaPosition: String!

  """"""
  mediaSizeSlug: String

  """"""
  mediaType: String

  """"""
  mediaUrl: String

  """"""
  mediaWidth: Float!

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

union CoreMediaTextBlockAttributesUnion = CoreMediaTextBlockAttributes | CoreMediaTextBlockDeprecatedV1Attributes | CoreMediaTextBlockDeprecatedV2Attributes | CoreMediaTextBlockDeprecatedV3Attributes

""""""
type CoreMediaTextBlockDeprecatedV1Attributes {
  """"""
  align: String!

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  href: String

  """"""
  imageFill: Boolean

  """"""
  isStackedOnMobile: Boolean!

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  mediaAlt: String!

  """"""
  mediaId: Float

  """"""
  mediaLink: String

  """"""
  mediaPosition: String!

  """"""
  mediaSizeSlug: String

  """"""
  mediaType: String

  """"""
  mediaUrl: String

  """"""
  mediaWidth: Float!

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

""""""
type CoreMediaTextBlockDeprecatedV2Attributes {
  """"""
  align: String!

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  href: String

  """"""
  imageFill: Boolean

  """"""
  isStackedOnMobile: Boolean!

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  mediaAlt: String!

  """"""
  mediaId: Float

  """"""
  mediaLink: String

  """"""
  mediaPosition: String!

  """"""
  mediaSizeSlug: String

  """"""
  mediaType: String

  """"""
  mediaUrl: String

  """"""
  mediaWidth: Float!

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

""""""
type CoreMediaTextBlockDeprecatedV3Attributes {
  """"""
  align: String!

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  focalPoint: BlockAttributesObject

  """"""
  gradient: String

  """"""
  href: String

  """"""
  imageFill: Boolean

  """"""
  isStackedOnMobile: Boolean!

  """"""
  linkClass: String

  """"""
  linkDestination: String

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  mediaAlt: String!

  """"""
  mediaId: Float

  """"""
  mediaLink: String

  """"""
  mediaPosition: String!

  """"""
  mediaSizeSlug: String

  """"""
  mediaType: String

  """"""
  mediaUrl: String

  """"""
  mediaWidth: Float!

  """"""
  rel: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  verticalAlignment: String
}

"""core/missing block"""
type CoreMissingBlock implements Block {
  """"""
  attributes: CoreMissingBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreMissingBlockAttributes {
  """"""
  lock: BlockAttributesObject

  """"""
  originalContent: String

  """"""
  originalName: String

  """"""
  originalUndelimitedContent: String
}

"""core/more block"""
type CoreMoreBlock implements Block {
  """"""
  attributes: CoreMoreBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreMoreBlockAttributes {
  """"""
  customText: String

  """"""
  lock: BlockAttributesObject

  """"""
  noTeaser: Boolean!
}

"""core/navigation block"""
type CoreNavigationBlock implements Block {
  """"""
  attributes: CoreNavigationBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreNavigationBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

union CoreNavigationBlockAttributesUnion = CoreNavigationBlockAttributes | CoreNavigationBlockDeprecatedV1Attributes | CoreNavigationBlockDeprecatedV2Attributes | CoreNavigationBlockDeprecatedV3Attributes | CoreNavigationBlockDeprecatedV4Attributes | CoreNavigationBlockDeprecatedV5Attributes | CoreNavigationBlockDeprecatedV6Attributes

""""""
type CoreNavigationBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

""""""
type CoreNavigationBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

""""""
type CoreNavigationBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

""""""
type CoreNavigationBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

""""""
type CoreNavigationBlockDeprecatedV5Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

""""""
type CoreNavigationBlockDeprecatedV6Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  customBackgroundColor: String

  """"""
  customOverlayBackgroundColor: String

  """"""
  customOverlayTextColor: String

  """"""
  customTextColor: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  hasIcon: Boolean!

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  maxNestingLevel: Float!

  """"""
  openSubmenusOnClick: Boolean!

  """"""
  overlayBackgroundColor: String

  """"""
  overlayMenu: String!

  """"""
  overlayTextColor: String

  """"""
  ref: Float

  """"""
  rgbBackgroundColor: String

  """"""
  rgbTextColor: String

  """"""
  showSubmenuIcon: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  unstableLocation: String
}

"""core/navigation-link block"""
type CoreNavigationLinkBlock implements Block {
  """"""
  attributes: CoreNavigationLinkBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreNavigationLinkBlockAttributes {
  """"""
  className: String

  """"""
  description: String

  """"""
  id: Float

  """"""
  isTopLevelLink: Boolean

  """"""
  kind: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  opensInNewTab: Boolean!

  """"""
  rel: String

  """"""
  title: String

  """"""
  type: String

  """"""
  url: String
}

union CoreNavigationLinkBlockAttributesUnion = CoreNavigationLinkBlockAttributes | CoreNavigationLinkBlockDeprecatedV1Attributes

""""""
type CoreNavigationLinkBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  description: String

  """"""
  id: Float

  """"""
  isTopLevelLink: Boolean

  """"""
  kind: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  opensInNewTab: Boolean!

  """"""
  rel: String

  """"""
  title: String

  """"""
  type: String

  """"""
  url: String
}

"""core/navigation-submenu block"""
type CoreNavigationSubmenuBlock implements Block {
  """"""
  attributes: CoreNavigationSubmenuBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreNavigationSubmenuBlockAttributes {
  """"""
  className: String

  """"""
  description: String

  """"""
  id: Float

  """"""
  isTopLevelItem: Boolean

  """"""
  kind: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  opensInNewTab: Boolean!

  """"""
  rel: String

  """"""
  title: String

  """"""
  type: String

  """"""
  url: String
}

"""core/nextpage block"""
type CoreNextpageBlock implements Block {
  """"""
  attributes: CoreNextpageBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreNextpageBlockAttributes {
  """"""
  lock: BlockAttributesObject
}

"""core/page-list block"""
type CorePageListBlock implements Block {
  """"""
  attributes: CorePageListBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePageListBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  unstableMaxPages: Float
}

"""core/paragraph block"""
type CoreParagraphBlock implements Block {
  """"""
  attributes: CoreParagraphBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreParagraphBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  direction: String

  """"""
  dropCap: Boolean!

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

union CoreParagraphBlockAttributesUnion = CoreParagraphBlockAttributes | CoreParagraphBlockDeprecatedV1Attributes | CoreParagraphBlockDeprecatedV2Attributes | CoreParagraphBlockDeprecatedV3Attributes | CoreParagraphBlockDeprecatedV4Attributes | CoreParagraphBlockDeprecatedV5Attributes

""""""
type CoreParagraphBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  direction: String

  """"""
  dropCap: Boolean!

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreParagraphBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  direction: String

  """"""
  dropCap: Boolean!

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreParagraphBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  direction: String

  """"""
  dropCap: Boolean!

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreParagraphBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  direction: String

  """"""
  dropCap: Boolean!

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreParagraphBlockDeprecatedV5Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  direction: String

  """"""
  dropCap: Boolean!

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/pattern block"""
type CorePatternBlock implements Block {
  """"""
  attributes: CorePatternBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePatternBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  slug: String
}

"""core/post-author-biography block"""
type CorePostAuthorBiographyBlock implements Block {
  """"""
  attributes: CorePostAuthorBiographyBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostAuthorBiographyBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-author block"""
type CorePostAuthorBlock implements Block {
  """"""
  attributes: CorePostAuthorBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostAuthorBlockAttributes {
  """"""
  avatarSize: Float!

  """"""
  backgroundColor: String

  """"""
  byline: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  showAvatar: Boolean!

  """"""
  showBio: Boolean

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-comments block"""
type CorePostCommentsBlock implements Block {
  """"""
  attributes: CorePostCommentsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostCommentsBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-comments-form block"""
type CorePostCommentsFormBlock implements Block {
  """"""
  attributes: CorePostCommentsFormBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostCommentsFormBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-content block"""
type CorePostContentBlock implements Block {
  """"""
  attributes: CorePostContentBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostContentBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject
}

"""core/post-date block"""
type CorePostDateBlock implements Block {
  """"""
  attributes: CorePostDateBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostDateBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  format: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CorePostDateBlockAttributesUnion = CorePostDateBlockAttributes | CorePostDateBlockDeprecatedV1Attributes

""""""
type CorePostDateBlockDeprecatedV1Attributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  format: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-excerpt block"""
type CorePostExcerptBlock implements Block {
  """"""
  attributes: CorePostExcerptBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostExcerptBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  moreText: String

  """"""
  showMoreOnNewLine: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-featured-image block"""
type CorePostFeaturedImageBlock implements Block {
  """"""
  attributes: CorePostFeaturedImageBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostFeaturedImageBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  height: String

  """"""
  isLink: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  scale: String!

  """"""
  sizeSlug: String

  """"""
  style: BlockAttributesObject

  """"""
  width: String
}

"""core/post-navigation-link block"""
type CorePostNavigationLinkBlock implements Block {
  """"""
  attributes: CorePostNavigationLinkBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostNavigationLinkBlockAttributes {
  """"""
  className: String

  """"""
  fontSize: String

  """"""
  label: String

  """"""
  linkLabel: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showTitle: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  type: String!
}

"""core/post-template block"""
type CorePostTemplateBlock implements Block {
  """"""
  attributes: CorePostTemplateBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostTemplateBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject
}

"""core/post-terms block"""
type CorePostTermsBlock implements Block {
  """"""
  attributes: CorePostTermsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostTermsBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  separator: String!

  """"""
  style: BlockAttributesObject

  """"""
  term: String

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/post-title block"""
type CorePostTitleBlock implements Block {
  """"""
  attributes: CorePostTitleBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePostTitleBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  level: Float!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String!

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CorePostTitleBlockAttributesUnion = CorePostTitleBlockAttributes | CorePostTitleBlockDeprecatedV1Attributes

""""""
type CorePostTitleBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  level: Float!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  rel: String!

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/preformatted block"""
type CorePreformattedBlock implements Block {
  """"""
  attributes: CorePreformattedBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePreformattedBlockAttributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/pullquote block"""
type CorePullquoteBlock implements Block {
  """"""
  attributes: CorePullquoteBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CorePullquoteBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  value: String
}

union CorePullquoteBlockAttributesUnion = CorePullquoteBlockAttributes | CorePullquoteBlockDeprecatedV1Attributes | CorePullquoteBlockDeprecatedV2Attributes | CorePullquoteBlockDeprecatedV3Attributes | CorePullquoteBlockDeprecatedV4Attributes | CorePullquoteBlockDeprecatedV5Attributes

""""""
type CorePullquoteBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  value: String
}

""""""
type CorePullquoteBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  value: String
}

""""""
type CorePullquoteBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  value: String
}

""""""
type CorePullquoteBlockDeprecatedV4Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  value: String
}

""""""
type CorePullquoteBlockDeprecatedV5Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  value: String
}

"""core/query block"""
type CoreQueryBlock implements Block {
  """"""
  attributes: CoreQueryBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  displayLayout: BlockAttributesObject!

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  query: BlockAttributesObject!

  """"""
  queryId: Float

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

union CoreQueryBlockAttributesUnion = CoreQueryBlockAttributes | CoreQueryBlockDeprecatedV1Attributes | CoreQueryBlockDeprecatedV2Attributes

""""""
type CoreQueryBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  displayLayout: BlockAttributesObject!

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  query: BlockAttributesObject!

  """"""
  queryId: Float

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

""""""
type CoreQueryBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  displayLayout: BlockAttributesObject!

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  query: BlockAttributesObject!

  """"""
  queryId: Float

  """"""
  style: BlockAttributesObject

  """"""
  tagName: String!

  """"""
  textColor: String
}

"""core/query-no-results block"""
type CoreQueryNoResultsBlock implements Block {
  """"""
  attributes: CoreQueryNoResultsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryNoResultsBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/query-pagination block"""
type CoreQueryPaginationBlock implements Block {
  """"""
  attributes: CoreQueryPaginationBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryPaginationBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  paginationArrow: String!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

union CoreQueryPaginationBlockAttributesUnion = CoreQueryPaginationBlockAttributes | CoreQueryPaginationBlockDeprecatedV1Attributes

""""""
type CoreQueryPaginationBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  paginationArrow: String!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/query-pagination-next block"""
type CoreQueryPaginationNextBlock implements Block {
  """"""
  attributes: CoreQueryPaginationNextBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryPaginationNextBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/query-pagination-numbers block"""
type CoreQueryPaginationNumbersBlock implements Block {
  """"""
  attributes: CoreQueryPaginationNumbersBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryPaginationNumbersBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/query-pagination-previous block"""
type CoreQueryPaginationPreviousBlock implements Block {
  """"""
  attributes: CoreQueryPaginationPreviousBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryPaginationPreviousBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/query-title block"""
type CoreQueryTitleBlock implements Block {
  """"""
  attributes: CoreQueryTitleBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQueryTitleBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  type: String
}

union CoreQueryTitleBlockAttributesUnion = CoreQueryTitleBlockAttributes | CoreQueryTitleBlockDeprecatedV1Attributes

""""""
type CoreQueryTitleBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  level: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String

  """"""
  type: String
}

"""core/quote block"""
type CoreQuoteBlock implements Block {
  """"""
  attributes: CoreQuoteBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreQuoteBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  value: String!
}

union CoreQuoteBlockAttributesUnion = CoreQuoteBlockAttributes | CoreQuoteBlockDeprecatedV1Attributes | CoreQuoteBlockDeprecatedV2Attributes | CoreQuoteBlockDeprecatedV3Attributes

""""""
type CoreQuoteBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  value: String!
}

""""""
type CoreQuoteBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  value: String!
}

""""""
type CoreQuoteBlockDeprecatedV3Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  citation: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  value: String!
}

"""core/read-more block"""
type CoreReadMoreBlock implements Block {
  """"""
  attributes: CoreReadMoreBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreReadMoreBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  content: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/rss block"""
type CoreRssBlock implements Block {
  """"""
  attributes: CoreRssBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreRssBlockAttributes {
  """"""
  align: String

  """"""
  blockLayout: String!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  displayAuthor: Boolean!

  """"""
  displayDate: Boolean!

  """"""
  displayExcerpt: Boolean!

  """"""
  excerptLength: Float!

  """"""
  feedURL: String!

  """"""
  itemsToShow: Float!

  """"""
  lock: BlockAttributesObject
}

"""core/search block"""
type CoreSearchBlock implements Block {
  """"""
  attributes: CoreSearchBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSearchBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  buttonPosition: String!

  """"""
  buttonText: String

  """"""
  buttonUseIcon: Boolean!

  """"""
  className: String

  """"""
  gradient: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String!

  """"""
  showLabel: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String

  """"""
  width: Float

  """"""
  widthUnit: String
}

"""core/separator block"""
type CoreSeparatorBlock implements Block {
  """"""
  attributes: CoreSeparatorBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSeparatorBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  opacity: String!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

union CoreSeparatorBlockAttributesUnion = CoreSeparatorBlockAttributes | CoreSeparatorBlockDeprecatedV1Attributes

""""""
type CoreSeparatorBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  opacity: String!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""core/shortcode block"""
type CoreShortcodeBlock implements Block {
  """"""
  attributes: CoreShortcodeBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreShortcodeBlockAttributes {
  """"""
  lock: BlockAttributesObject

  """"""
  text: String
}

"""core/site-logo block"""
type CoreSiteLogoBlock implements Block {
  """"""
  attributes: CoreSiteLogoBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSiteLogoBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  isLink: Boolean!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  shouldSyncIcon: Boolean

  """"""
  style: BlockAttributesObject

  """"""
  width: Float
}

"""core/site-tagline block"""
type CoreSiteTaglineBlock implements Block {
  """"""
  attributes: CoreSiteTaglineBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSiteTaglineBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CoreSiteTaglineBlockAttributesUnion = CoreSiteTaglineBlockAttributes | CoreSiteTaglineBlockDeprecatedV1Attributes

""""""
type CoreSiteTaglineBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/site-title block"""
type CoreSiteTitleBlock implements Block {
  """"""
  attributes: CoreSiteTitleBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSiteTitleBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  level: Float!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CoreSiteTitleBlockAttributesUnion = CoreSiteTitleBlockAttributes | CoreSiteTitleBlockDeprecatedV1Attributes

""""""
type CoreSiteTitleBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  isLink: Boolean!

  """"""
  level: Float!

  """"""
  linkTarget: String!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/social-link block"""
type CoreSocialLinkBlock implements Block {
  """"""
  attributes: CoreSocialLinkBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSocialLinkBlockAttributes {
  """"""
  className: String

  """"""
  label: String

  """"""
  lock: BlockAttributesObject

  """"""
  service: String

  """"""
  url: String
}

"""core/social-links block"""
type CoreSocialLinksBlock implements Block {
  """"""
  attributes: CoreSocialLinksBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSocialLinksBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  customIconBackgroundColor: String

  """"""
  customIconColor: String

  """"""
  iconBackgroundColor: String

  """"""
  iconBackgroundColorValue: String

  """"""
  iconColor: String

  """"""
  iconColorValue: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  openInNewTab: Boolean!

  """"""
  showLabels: Boolean!

  """"""
  size: String

  """"""
  style: BlockAttributesObject
}

union CoreSocialLinksBlockAttributesUnion = CoreSocialLinksBlockAttributes | CoreSocialLinksBlockDeprecatedV1Attributes

""""""
type CoreSocialLinksBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  className: String

  """"""
  customIconBackgroundColor: String

  """"""
  customIconColor: String

  """"""
  iconBackgroundColor: String

  """"""
  iconBackgroundColorValue: String

  """"""
  iconColor: String

  """"""
  iconColorValue: String

  """"""
  layout: BlockAttributesObject

  """"""
  lock: BlockAttributesObject

  """"""
  openInNewTab: Boolean!

  """"""
  showLabels: Boolean!

  """"""
  size: String

  """"""
  style: BlockAttributesObject
}

"""core/spacer block"""
type CoreSpacerBlock implements Block {
  """"""
  attributes: CoreSpacerBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreSpacerBlockAttributes {
  """"""
  anchor: String

  """"""
  className: String

  """"""
  height: String!

  """"""
  lock: BlockAttributesObject

  """"""
  width: String
}

union CoreSpacerBlockAttributesUnion = CoreSpacerBlockAttributes | CoreSpacerBlockDeprecatedV1Attributes

""""""
type CoreSpacerBlockDeprecatedV1Attributes {
  """"""
  anchor: String

  """"""
  className: String

  """"""
  height: String!

  """"""
  lock: BlockAttributesObject

  """"""
  width: String
}

"""core/table block"""
type CoreTableBlock implements Block {
  """"""
  attributes: CoreTableBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreTableBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  body: [CoreTableBlockAttributesBody]!

  """"""
  borderColor: String

  """"""
  caption: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  foot: [CoreTableBlockAttributesFoot]!

  """"""
  gradient: String

  """"""
  hasFixedLayout: Boolean!

  """"""
  head: [CoreTableBlockAttributesHead]!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreTableBlockAttributesBody {
  """"""
  cells: [CoreTableBlockAttributesBodyCells]!
}

""""""
type CoreTableBlockAttributesBodyCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockAttributesFoot {
  """"""
  cells: [CoreTableBlockAttributesFootCells]!
}

""""""
type CoreTableBlockAttributesFootCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockAttributesHead {
  """"""
  cells: [CoreTableBlockAttributesHeadCells]!
}

""""""
type CoreTableBlockAttributesHeadCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

union CoreTableBlockAttributesUnion = CoreTableBlockAttributes | CoreTableBlockDeprecatedV1Attributes | CoreTableBlockDeprecatedV2Attributes

""""""
type CoreTableBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  body: [CoreTableBlockDeprecatedV1AttributesBody]!

  """"""
  borderColor: String

  """"""
  caption: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  foot: [CoreTableBlockDeprecatedV1AttributesFoot]!

  """"""
  gradient: String

  """"""
  hasFixedLayout: Boolean!

  """"""
  head: [CoreTableBlockDeprecatedV1AttributesHead]!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreTableBlockDeprecatedV1AttributesBody {
  """"""
  cells: [CoreTableBlockDeprecatedV1AttributesBodyCells]!
}

""""""
type CoreTableBlockDeprecatedV1AttributesBodyCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockDeprecatedV1AttributesFoot {
  """"""
  cells: [CoreTableBlockDeprecatedV1AttributesFootCells]!
}

""""""
type CoreTableBlockDeprecatedV1AttributesFootCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockDeprecatedV1AttributesHead {
  """"""
  cells: [CoreTableBlockDeprecatedV1AttributesHeadCells]!
}

""""""
type CoreTableBlockDeprecatedV1AttributesHeadCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockDeprecatedV2Attributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  body: [CoreTableBlockDeprecatedV2AttributesBody]!

  """"""
  borderColor: String

  """"""
  caption: String!

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  foot: [CoreTableBlockDeprecatedV2AttributesFoot]!

  """"""
  gradient: String

  """"""
  hasFixedLayout: Boolean!

  """"""
  head: [CoreTableBlockDeprecatedV2AttributesHead]!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

""""""
type CoreTableBlockDeprecatedV2AttributesBody {
  """"""
  cells: [CoreTableBlockDeprecatedV2AttributesBodyCells]!
}

""""""
type CoreTableBlockDeprecatedV2AttributesBodyCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockDeprecatedV2AttributesFoot {
  """"""
  cells: [CoreTableBlockDeprecatedV2AttributesFootCells]!
}

""""""
type CoreTableBlockDeprecatedV2AttributesFootCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

""""""
type CoreTableBlockDeprecatedV2AttributesHead {
  """"""
  cells: [CoreTableBlockDeprecatedV2AttributesHeadCells]!
}

""""""
type CoreTableBlockDeprecatedV2AttributesHeadCells {
  """"""
  align: String

  """"""
  content: String

  """"""
  scope: String

  """"""
  tag: String!
}

"""core/tag-cloud block"""
type CoreTagCloudBlock implements Block {
  """"""
  attributes: CoreTagCloudBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreTagCloudBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  largestFontSize: String!

  """"""
  lock: BlockAttributesObject

  """"""
  numberOfTags: Float!

  """"""
  showTagCounts: Boolean!

  """"""
  smallestFontSize: String!

  """"""
  taxonomy: String!
}

"""core/template-part block"""
type CoreTemplatePartBlock implements Block {
  """"""
  attributes: CoreTemplatePartBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreTemplatePartBlockAttributes {
  """"""
  align: String

  """"""
  area: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  slug: String

  """"""
  tagName: String

  """"""
  theme: String
}

"""core/term-description block"""
type CoreTermDescriptionBlock implements Block {
  """"""
  attributes: CoreTermDescriptionBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreTermDescriptionBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/text-columns block"""
type CoreTextColumnsBlock implements Block {
  """"""
  attributes: CoreTextColumnsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreTextColumnsBlockAttributes {
  """"""
  className: String

  """"""
  columns: Float!

  """"""
  content: [CoreTextColumnsBlockAttributesContent]!

  """"""
  lock: BlockAttributesObject

  """"""
  width: String
}

""""""
type CoreTextColumnsBlockAttributesContent {
  """"""
  children: String
}

"""core/verse block"""
type CoreVerseBlock implements Block {
  """"""
  attributes: CoreVerseBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreVerseBlockAttributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

union CoreVerseBlockAttributesUnion = CoreVerseBlockAttributes | CoreVerseBlockDeprecatedV1Attributes | CoreVerseBlockDeprecatedV2Attributes

""""""
type CoreVerseBlockDeprecatedV1Attributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

""""""
type CoreVerseBlockDeprecatedV2Attributes {
  """"""
  anchor: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  content: String!

  """"""
  fontFamily: String

  """"""
  fontSize: String

  """"""
  gradient: String

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textAlign: String

  """"""
  textColor: String
}

"""core/video block"""
type CoreVideoBlock implements Block {
  """"""
  attributes: CoreVideoBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type CoreVideoBlockAttributes {
  """"""
  align: String

  """"""
  anchor: String

  """"""
  autoplay: Boolean

  """"""
  caption: String

  """"""
  className: String

  """"""
  controls: Boolean!

  """"""
  id: Float

  """"""
  lock: BlockAttributesObject

  """"""
  loop: Boolean

  """"""
  muted: Boolean

  """"""
  playsInline: Boolean

  """"""
  poster: String

  """"""
  preload: String!

  """"""
  src: String

  """"""
  tracks: [BlockAttributesObject]!
}

"""Countries enumeration"""
enum CountriesEnum {
  AD
  AE
  AF
  AG
  AI
  AL
  AM
  AO
  AQ
  AR
  AS
  AT
  AU
  AW
  AX
  AZ
  BA
  BB
  BD
  BE
  BF
  BG
  BH
  BI
  BJ
  BL
  BM
  BN
  BO
  BQ
  BR
  BS
  BT
  BV
  BW
  BY
  BZ
  CA
  CC
  CD
  CF
  CG
  CH
  CI
  CK
  CL
  CM
  CN
  CO
  CR
  CU
  CV
  CW
  CX
  CY
  CZ
  DE
  DJ
  DK
  DM
  DO
  DZ
  EC
  EE
  EG
  EH
  ER
  ES
  ET
  FI
  FJ
  FK
  FM
  FO
  FR
  GA
  GB
  GD
  GE
  GF
  GG
  GH
  GI
  GL
  GM
  GN
  GP
  GQ
  GR
  GS
  GT
  GU
  GW
  GY
  HK
  HM
  HN
  HR
  HT
  HU
  ID
  IE
  IL
  IM
  IN
  IO
  IQ
  IR
  IS
  IT
  JE
  JM
  JO
  JP
  KE
  KG
  KH
  KI
  KM
  KN
  KP
  KR
  KW
  KY
  KZ
  LA
  LB
  LC
  LI
  LK
  LR
  LS
  LT
  LU
  LV
  LY
  MA
  MC
  MD
  ME
  MF
  MG
  MH
  MK
  ML
  MM
  MN
  MO
  MP
  MQ
  MR
  MS
  MT
  MU
  MV
  MW
  MX
  MY
  MZ
  NA
  NC
  NE
  NF
  NG
  NI
  NL
  NO
  NP
  NR
  NU
  NZ
  OM
  PA
  PE
  PF
  PG
  PH
  PK
  PL
  PM
  PN
  PR
  PS
  PT
  PW
  PY
  QA
  RE
  RO
  RS
  RU
  RW
  SA
  SB
  SC
  SD
  SE
  SG
  SH
  SI
  SJ
  SK
  SL
  SM
  SN
  SO
  SR
  SS
  ST
  SV
  SX
  SY
  SZ
  TC
  TD
  TF
  TG
  TH
  TJ
  TK
  TL
  TM
  TN
  TO
  TR
  TT
  TV
  TW
  TZ
  UA
  UG
  UM
  US
  UY
  UZ
  VA
  VC
  VE
  VG
  VI
  VN
  VU
  WF
  WS
  YE
  YT
  ZA
  ZM
  ZW
}

"""A coupon object"""
type Coupon implements Node {
  """Amount off provided by the coupon"""
  amount: Float

  """Coupon code"""
  code: String

  """The ID of the coupon in the database"""
  databaseId: Int

  """Date coupon created"""
  date: String

  """Date coupon expires"""
  dateExpiry: String

  """Explanation of what the coupon does"""
  description: String

  """Type of discount"""
  discountType: DiscountTypeEnum

  """Only customers with a matching email address can use the coupon"""
  emailRestrictions: [String]

  """
  Excluding sale items mean this coupon cannot be used on items that are on sale (or carts that contain on sale items)
  """
  excludeSaleItems: Boolean

  """Connection between the Coupon type and the productCategory type"""
  excludedProductCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CouponToExcludedProductCategoriesConnectionWhereArgs
  ): CouponToExcludedProductCategoriesConnection

  """Connection between the Coupon type and the Product type"""
  excludedProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CouponToExcludedProductsConnectionWhereArgs
  ): CouponToExcludedProductsConnection

  """Does this coupon grant free shipping?"""
  freeShipping: Boolean

  """The globally unique identifier for the coupon"""
  id: ID!

  """
  Individual use means this coupon cannot be used in conjunction with other coupons
  """
  individualUse: Boolean

  """
  The number of products in your cart this coupon can apply to (for product discounts)
  """
  limitUsageToXItems: Int

  """Maximum spend amount that must be met before this coupon can be used """
  maximumAmount: Float

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Minimum spend amount that must be met before this coupon can be used"""
  minimumAmount: Float

  """Date coupon modified"""
  modified: String

  """Connection between the Coupon type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CouponToProductCategoryConnectionWhereArgs
  ): CouponToProductCategoryConnection

  """Connection between the Coupon type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CouponToProductConnectionWhereArgs
  ): CouponToProductConnection

  """How many times the coupon has been used"""
  usageCount: Int

  """Amount of times this coupon can be used globally"""
  usageLimit: Int

  """Amount of times this coupon can be used by a customer"""
  usageLimitPerUser: Int

  """Connection between the Coupon type and the Customer type"""
  usedBy(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CouponToCustomerConnectionWhereArgs
  ): CouponToCustomerConnection
}

"""The Type of Identifier used to fetch a single Coupon. Default is ID."""
enum CouponIdTypeEnum {
  """Coupon code."""
  CODE

  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""a coupon line object"""
type CouponLine {
  """Line&#039;s Coupon code"""
  code: String

  """Line&#039;s Coupon"""
  coupon: Coupon

  """The ID of the order item in the database"""
  databaseId: Int

  """Line&#039;s Discount total"""
  discount: String

  """Line&#039;s Discount total tax"""
  discountTax: String

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """The Id of the order the order item belongs to."""
  orderId: Int
}

"""Connection between the Coupon type and the Customer type"""
type CouponToCustomerConnection {
  """Edges for the CouponToCustomerConnection connection"""
  edges: [CouponToCustomerConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Customer]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CouponToCustomerConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Customer
}

"""Arguments for filtering the CouponToCustomerConnection connection"""
input CouponToCustomerConnectionWhereArgs {
  """Limit result set to resources with a specific email."""
  email: String

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """Order of results."""
  order: OrderEnum

  """Order results by a specific field."""
  orderby: CustomerConnectionOrderbyEnum

  """Limit results to those matching a string."""
  search: String
}

"""Connection between the Coupon type and the productCategory type"""
type CouponToExcludedProductCategoriesConnection {
  """Edges for the CouponToExcludedProductCategoriesConnection connection"""
  edges: [CouponToExcludedProductCategoriesConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductCategory]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CouponToExcludedProductCategoriesConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductCategory
}

"""
Arguments for filtering the CouponToExcludedProductCategoriesConnection connection
"""
input CouponToExcludedProductCategoriesConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Coupon type and the Product type"""
type CouponToExcludedProductsConnection {
  """Edges for the CouponToExcludedProductsConnection connection"""
  edges: [CouponToExcludedProductsConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CouponToExcludedProductsConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the CouponToExcludedProductsConnection connection
"""
input CouponToExcludedProductsConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the Coupon type and the productCategory type"""
type CouponToProductCategoryConnection {
  """Edges for the CouponToProductCategoryConnection connection"""
  edges: [CouponToProductCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductCategory]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CouponToProductCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductCategory
}

"""
Arguments for filtering the CouponToProductCategoryConnection connection
"""
input CouponToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Coupon type and the Product type"""
type CouponToProductConnection {
  """Edges for the CouponToProductConnection connection"""
  edges: [CouponToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CouponToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the CouponToProductConnection connection"""
input CouponToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Customer account credentials"""
input CreateAccountInput {
  """Customer password"""
  password: String!

  """Customer username"""
  username: String!
}

"""Input for the createCategory mutation"""
input CreateCategoryInput {
  """The slug that the category will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the category object"""
  description: String

  """The name of the category object to mutate"""
  name: String!

  """The ID of the category that should be set as the parent"""
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createCategory mutation"""
type CreateCategoryPayload {
  """The created category"""
  category: Category

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the createComment mutation"""
input CreateCommentInput {
  """The approval status of the comment."""
  approved: String

  """The name of the comment's author."""
  author: String

  """The email of the comment's author."""
  authorEmail: String

  """The url of the comment's author."""
  authorUrl: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The database ID of the post object the comment belongs to."""
  commentOn: Int

  """Content of the comment."""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """Parent comment ID of current comment."""
  parent: ID

  """Type of comment."""
  type: String
}

"""The payload for the createComment mutation"""
type CreateCommentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment that was created"""
  comment: Comment

  """
  Whether the mutation succeeded. If the comment is not approved, the server will not return the comment to a non authenticated user, but a success message can be returned if the create succeeded, and the client can optimistically add the comment to the client cache
  """
  success: Boolean
}

"""Input for the createCoupon mutation"""
input CreateCouponInput {
  """
  The amount of discount. Should always be numeric, even if setting a percentage.
  """
  amount: Float

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Coupon code."""
  code: String!

  """The date the coupon expires, in the site's timezone."""
  dateExpires: String

  """The date the coupon expires, as GMT."""
  dateExpiresGmt: String

  """Coupon description."""
  description: String

  """Determines the type of discount that will be applied."""
  discountType: DiscountTypeEnum

  """List of email addresses that can use this coupon."""
  emailRestrictions: [String]

  """
  If true, this coupon will not be applied to items that have sale prices.
  """
  excludeSaleItems: Boolean

  """List of category IDs the coupon does not apply to."""
  excludedProductCategories: [Int]

  """List of product IDs the coupon cannot be used on."""
  excludedProductIds: [Int]

  """
  If true and if the free shipping method requires a coupon, this coupon will enable free shipping.
  """
  freeShipping: Boolean

  """
  If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.
  """
  individualUse: Boolean

  """Max number of items in the cart the coupon can be applied to."""
  limitUsageToXItems: Int

  """Maximum order amount allowed when using the coupon."""
  maximumAmount: String

  """Meta data."""
  metaData: [MetaDataInput]

  """
  Minimum order amount that needs to be in the cart before coupon applies.
  """
  minimumAmount: String

  """List of category IDs the coupon applies to."""
  productCategories: [Int]

  """List of product IDs the coupon can be used on."""
  productIds: [Int]

  """How many times the coupon can be used in total."""
  usageLimit: Int

  """How many times the coupon can be used per customer."""
  usageLimitPerUser: Int
}

"""The payload for the createCoupon mutation"""
type CreateCouponPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  code: String

  """"""
  coupon: Coupon
}

"""Input for the createMediaItem mutation"""
input CreateMediaItemInput {
  """Alternative text to display when mediaItem is not displayed"""
  altText: String

  """The userId to assign as the author of the mediaItem"""
  authorId: ID

  """The caption for the mediaItem"""
  caption: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment status for the mediaItem"""
  commentStatus: String

  """The date of the mediaItem"""
  date: String

  """The date (in GMT zone) of the mediaItem"""
  dateGmt: String

  """Description of the mediaItem"""
  description: String

  """The file name of the mediaItem"""
  filePath: String

  """The file type of the mediaItem"""
  fileType: MimeTypeEnum

  """The ID of the parent object"""
  parentId: ID

  """The ping status for the mediaItem"""
  pingStatus: String

  """The slug of the mediaItem"""
  slug: String

  """The status of the mediaItem"""
  status: MediaItemStatusEnum

  """The title of the mediaItem"""
  title: String
}

"""The payload for the createMediaItem mutation"""
type CreateMediaItemPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The MediaItem object mutation type."""
  mediaItem: MediaItem
}

"""Input for the createOrder mutation"""
input CreateOrderInput {
  """Order billing address"""
  billing: CustomerAddressInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Coupons codes to be applied to order"""
  coupons: [String]

  """Currency the order was created with, in ISO format."""
  currency: String

  """Order customer ID"""
  customerId: Int

  """Note left by customer during checkout."""
  customerNote: String

  """Order shipping lines"""
  feeLines: [FeeLineInput]

  """
  Define if the order is paid. It will set the status to processing and reduce stock items.
  """
  isPaid: Boolean

  """Order line items"""
  lineItems: [LineItemInput]

  """Order meta data"""
  metaData: [MetaDataInput]

  """Parent order ID."""
  parentId: Int

  """Payment method ID."""
  paymentMethod: String

  """Payment method title."""
  paymentMethodTitle: String

  """Order shipping address"""
  shipping: CustomerAddressInput

  """Order shipping lines"""
  shippingLines: [ShippingLineInput]

  """Order status"""
  status: OrderStatusEnum

  """Order transaction ID"""
  transactionId: String
}

"""The payload for the createOrder mutation"""
type CreateOrderPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  order: Order

  """"""
  orderId: Int
}

"""Input for the createPaArchitecto mutation"""
input CreatePaArchitectoInput {
  """The slug that the pa_architecto will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_architecto object"""
  description: String

  """The name of the pa_architecto object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaArchitecto mutation"""
type CreatePaArchitectoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_architecto"""
  paArchitecto: PaArchitecto
}

"""Input for the createPaAspernatur mutation"""
input CreatePaAspernaturInput {
  """The slug that the pa_aspernatur will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_aspernatur object"""
  description: String

  """The name of the pa_aspernatur object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaAspernatur mutation"""
type CreatePaAspernaturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_aspernatur"""
  paAspernatur: PaAspernatur
}

"""Input for the createPaAtque mutation"""
input CreatePaAtqueInput {
  """The slug that the pa_atque will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_atque object"""
  description: String

  """The name of the pa_atque object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaAtque mutation"""
type CreatePaAtquePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_atque"""
  paAtque: PaAtque
}

"""Input for the createPaColor mutation"""
input CreatePaColorInput {
  """The slug that the pa_color will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_color object"""
  description: String

  """The name of the pa_color object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaColor mutation"""
type CreatePaColorPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_color"""
  paColor: PaColor
}

"""Input for the createPaConsequatur mutation"""
input CreatePaConsequaturInput {
  """The slug that the pa_consequatur will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_consequatur object"""
  description: String

  """The name of the pa_consequatur object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaConsequatur mutation"""
type CreatePaConsequaturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_consequatur"""
  paConsequatur: PaConsequatur
}

"""Input for the createPaCum mutation"""
input CreatePaCumInput {
  """The slug that the pa_cum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_cum object"""
  description: String

  """The name of the pa_cum object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaCum mutation"""
type CreatePaCumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_cum"""
  paCum: PaCum
}

"""Input for the createPaDolor mutation"""
input CreatePaDolorInput {
  """The slug that the pa_dolor will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_dolor object"""
  description: String

  """The name of the pa_dolor object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaDolor mutation"""
type CreatePaDolorPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_dolor"""
  paDolor: PaDolor
}

"""Input for the createPaDoloremque mutation"""
input CreatePaDoloremqueInput {
  """The slug that the pa_doloremque will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_doloremque object"""
  description: String

  """The name of the pa_doloremque object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaDoloremque mutation"""
type CreatePaDoloremquePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_doloremque"""
  paDoloremque: PaDoloremque
}

"""Input for the createPaDolores mutation"""
input CreatePaDoloresInput {
  """The slug that the pa_dolores will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_dolores object"""
  description: String

  """The name of the pa_dolores object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaDolores mutation"""
type CreatePaDoloresPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_dolores"""
  paDolores: PaDolores
}

"""Input for the createPaDolorum mutation"""
input CreatePaDolorumInput {
  """The slug that the pa_dolorum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_dolorum object"""
  description: String

  """The name of the pa_dolorum object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaDolorum mutation"""
type CreatePaDolorumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_dolorum"""
  paDolorum: PaDolorum
}

"""Input for the createPaEa mutation"""
input CreatePaEaInput {
  """The slug that the pa_ea will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_ea object"""
  description: String

  """The name of the pa_ea object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaEa mutation"""
type CreatePaEaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_ea"""
  paEa: PaEa
}

"""Input for the createPaEos mutation"""
input CreatePaEosInput {
  """The slug that the pa_eos will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_eos object"""
  description: String

  """The name of the pa_eos object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaEos mutation"""
type CreatePaEosPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_eos"""
  paEos: PaEos
}

"""Input for the createPaEt mutation"""
input CreatePaEtInput {
  """The slug that the pa_et will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_et object"""
  description: String

  """The name of the pa_et object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaEt mutation"""
type CreatePaEtPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_et"""
  paEt: PaEt
}

"""Input for the createPaExcepturi mutation"""
input CreatePaExcepturiInput {
  """The slug that the pa_excepturi will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_excepturi object"""
  description: String

  """The name of the pa_excepturi object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaExcepturi mutation"""
type CreatePaExcepturiPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_excepturi"""
  paExcepturi: PaExcepturi
}

"""Input for the createPaExplicabo mutation"""
input CreatePaExplicaboInput {
  """The slug that the pa_explicabo will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_explicabo object"""
  description: String

  """The name of the pa_explicabo object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaExplicabo mutation"""
type CreatePaExplicaboPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_explicabo"""
  paExplicabo: PaExplicabo
}

"""Input for the createPaFacere mutation"""
input CreatePaFacereInput {
  """The slug that the pa_facere will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_facere object"""
  description: String

  """The name of the pa_facere object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaFacere mutation"""
type CreatePaFacerePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_facere"""
  paFacere: PaFacere
}

"""Input for the createPaHarum mutation"""
input CreatePaHarumInput {
  """The slug that the pa_harum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_harum object"""
  description: String

  """The name of the pa_harum object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaHarum mutation"""
type CreatePaHarumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_harum"""
  paHarum: PaHarum
}

"""Input for the createPaIncidunt mutation"""
input CreatePaInciduntInput {
  """The slug that the pa_incidunt will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_incidunt object"""
  description: String

  """The name of the pa_incidunt object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaIncidunt mutation"""
type CreatePaInciduntPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_incidunt"""
  paIncidunt: PaIncidunt
}

"""Input for the createPaIpsam mutation"""
input CreatePaIpsamInput {
  """The slug that the pa_ipsam will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_ipsam object"""
  description: String

  """The name of the pa_ipsam object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaIpsam mutation"""
type CreatePaIpsamPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_ipsam"""
  paIpsam: PaIpsam
}

"""Input for the createPaIusto mutation"""
input CreatePaIustoInput {
  """The slug that the pa_iusto will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_iusto object"""
  description: String

  """The name of the pa_iusto object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaIusto mutation"""
type CreatePaIustoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_iusto"""
  paIusto: PaIusto
}

"""Input for the createPaLaudantium mutation"""
input CreatePaLaudantiumInput {
  """The slug that the pa_laudantium will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_laudantium object"""
  description: String

  """The name of the pa_laudantium object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaLaudantium mutation"""
type CreatePaLaudantiumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_laudantium"""
  paLaudantium: PaLaudantium
}

"""Input for the createPaMagnam mutation"""
input CreatePaMagnamInput {
  """The slug that the pa_magnam will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_magnam object"""
  description: String

  """The name of the pa_magnam object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaMagnam mutation"""
type CreatePaMagnamPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_magnam"""
  paMagnam: PaMagnam
}

"""Input for the createPaMagni mutation"""
input CreatePaMagniInput {
  """The slug that the pa_magni will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_magni object"""
  description: String

  """The name of the pa_magni object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaMagni mutation"""
type CreatePaMagniPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_magni"""
  paMagni: PaMagni
}

"""Input for the createPaMinima mutation"""
input CreatePaMinimaInput {
  """The slug that the pa_minima will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_minima object"""
  description: String

  """The name of the pa_minima object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaMinima mutation"""
type CreatePaMinimaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_minima"""
  paMinima: PaMinima
}

"""Input for the createPaMolestiae mutation"""
input CreatePaMolestiaeInput {
  """The slug that the pa_molestiae will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_molestiae object"""
  description: String

  """The name of the pa_molestiae object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaMolestiae mutation"""
type CreatePaMolestiaePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_molestiae"""
  paMolestiae: PaMolestiae
}

"""Input for the createPaNihil mutation"""
input CreatePaNihilInput {
  """The slug that the pa_nihil will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_nihil object"""
  description: String

  """The name of the pa_nihil object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaNihil mutation"""
type CreatePaNihilPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_nihil"""
  paNihil: PaNihil
}

"""Input for the createPaNon mutation"""
input CreatePaNonInput {
  """The slug that the pa_non will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_non object"""
  description: String

  """The name of the pa_non object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaNon mutation"""
type CreatePaNonPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_non"""
  paNon: PaNon
}

"""Input for the createPaNulla mutation"""
input CreatePaNullaInput {
  """The slug that the pa_nulla will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_nulla object"""
  description: String

  """The name of the pa_nulla object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaNulla mutation"""
type CreatePaNullaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_nulla"""
  paNulla: PaNulla
}

"""Input for the createPaNumericSize mutation"""
input CreatePaNumericSizeInput {
  """The slug that the pa_numeric-size will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_numeric-size object"""
  description: String

  """The name of the pa_numeric-size object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaNumericSize mutation"""
type CreatePaNumericSizePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_numeric-size"""
  paNumericSize: PaNumericSize
}

"""Input for the createPaOmnis mutation"""
input CreatePaOmnisInput {
  """The slug that the pa_omnis will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_omnis object"""
  description: String

  """The name of the pa_omnis object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaOmnis mutation"""
type CreatePaOmnisPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_omnis"""
  paOmnis: PaOmnis
}

"""Input for the createPaOptio mutation"""
input CreatePaOptioInput {
  """The slug that the pa_optio will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_optio object"""
  description: String

  """The name of the pa_optio object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaOptio mutation"""
type CreatePaOptioPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_optio"""
  paOptio: PaOptio
}

"""Input for the createPaPraesentium mutation"""
input CreatePaPraesentiumInput {
  """The slug that the pa_praesentium will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_praesentium object"""
  description: String

  """The name of the pa_praesentium object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaPraesentium mutation"""
type CreatePaPraesentiumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_praesentium"""
  paPraesentium: PaPraesentium
}

"""Input for the createPaProvident mutation"""
input CreatePaProvidentInput {
  """The slug that the pa_provident will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_provident object"""
  description: String

  """The name of the pa_provident object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaProvident mutation"""
type CreatePaProvidentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_provident"""
  paProvident: PaProvident
}

"""Input for the createPaQuae mutation"""
input CreatePaQuaeInput {
  """The slug that the pa_quae will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quae object"""
  description: String

  """The name of the pa_quae object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaQuae mutation"""
type CreatePaQuaePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quae"""
  paQuae: PaQuae
}

"""Input for the createPaQui mutation"""
input CreatePaQuiInput {
  """The slug that the pa_qui will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_qui object"""
  description: String

  """The name of the pa_qui object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaQui mutation"""
type CreatePaQuiPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_qui"""
  paQui: PaQui
}

"""Input for the createPaQuia mutation"""
input CreatePaQuiaInput {
  """The slug that the pa_quia will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quia object"""
  description: String

  """The name of the pa_quia object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaQuia mutation"""
type CreatePaQuiaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quia"""
  paQuia: PaQuia
}

"""Input for the createPaQuidem mutation"""
input CreatePaQuidemInput {
  """The slug that the pa_quidem will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quidem object"""
  description: String

  """The name of the pa_quidem object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaQuidem mutation"""
type CreatePaQuidemPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quidem"""
  paQuidem: PaQuidem
}

"""Input for the createPaQuis mutation"""
input CreatePaQuisInput {
  """The slug that the pa_quis will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quis object"""
  description: String

  """The name of the pa_quis object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaQuis mutation"""
type CreatePaQuisPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quis"""
  paQuis: PaQuis
}

"""Input for the createPaQuo mutation"""
input CreatePaQuoInput {
  """The slug that the pa_quo will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quo object"""
  description: String

  """The name of the pa_quo object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaQuo mutation"""
type CreatePaQuoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quo"""
  paQuo: PaQuo
}

"""Input for the createPaRepellendus mutation"""
input CreatePaRepellendusInput {
  """The slug that the pa_repellendus will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_repellendus object"""
  description: String

  """The name of the pa_repellendus object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaRepellendus mutation"""
type CreatePaRepellendusPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_repellendus"""
  paRepellendus: PaRepellendus
}

"""Input for the createPaReprehenderit mutation"""
input CreatePaReprehenderitInput {
  """The slug that the pa_reprehenderit will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_reprehenderit object"""
  description: String

  """The name of the pa_reprehenderit object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaReprehenderit mutation"""
type CreatePaReprehenderitPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_reprehenderit"""
  paReprehenderit: PaReprehenderit
}

"""Input for the createPaRerum mutation"""
input CreatePaRerumInput {
  """The slug that the pa_rerum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_rerum object"""
  description: String

  """The name of the pa_rerum object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaRerum mutation"""
type CreatePaRerumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_rerum"""
  paRerum: PaRerum
}

"""Input for the createPaSit mutation"""
input CreatePaSitInput {
  """The slug that the pa_sit will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_sit object"""
  description: String

  """The name of the pa_sit object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaSit mutation"""
type CreatePaSitPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_sit"""
  paSit: PaSit
}

"""Input for the createPaSize mutation"""
input CreatePaSizeInput {
  """The slug that the pa_size will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_size object"""
  description: String

  """The name of the pa_size object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaSize mutation"""
type CreatePaSizePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_size"""
  paSize: PaSize
}

"""Input for the createPaTenetur mutation"""
input CreatePaTeneturInput {
  """The slug that the pa_tenetur will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_tenetur object"""
  description: String

  """The name of the pa_tenetur object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaTenetur mutation"""
type CreatePaTeneturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_tenetur"""
  paTenetur: PaTenetur
}

"""Input for the createPaVel mutation"""
input CreatePaVelInput {
  """The slug that the pa_vel will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_vel object"""
  description: String

  """The name of the pa_vel object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPaVel mutation"""
type CreatePaVelPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_vel"""
  paVel: PaVel
}

"""Input for the createPage mutation"""
input CreatePageInput {
  """The userId to assign as the author of the object"""
  authorId: ID

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment status for the object"""
  commentStatus: String

  """The content of the object"""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """The ID of the parent object"""
  parentId: ID

  """The password used to protect the content of the object"""
  password: String

  """The slug of the object"""
  slug: String

  """The status of the object"""
  status: PostStatusEnum

  """The title of the object"""
  title: String
}

"""The payload for the createPage mutation"""
type CreatePagePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The Post object mutation type."""
  page: Page
}

"""Input for the createPostFormat mutation"""
input CreatePostFormatInput {
  """The slug that the post_format will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the post_format object"""
  description: String

  """The name of the post_format object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createPostFormat mutation"""
type CreatePostFormatPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created post_format"""
  postFormat: PostFormat
}

"""Input for the createPost mutation"""
input CreatePostInput {
  """The userId to assign as the author of the object"""
  authorId: ID

  """Set connections between the post and categories"""
  categories: PostCategoriesInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment status for the object"""
  commentStatus: String

  """The content of the object"""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """The excerpt of the object"""
  excerpt: String

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """The password used to protect the content of the object"""
  password: String

  """The ping status for the object"""
  pingStatus: String

  """URLs that have been pinged."""
  pinged: [String]

  """Set connections between the post and postFormats"""
  postFormats: PostPostFormatsInput

  """The slug of the object"""
  slug: String

  """The status of the object"""
  status: PostStatusEnum

  """Set connections between the post and tags"""
  tags: PostTagsInput

  """The title of the object"""
  title: String

  """URLs queued to be pinged."""
  toPing: [String]
}

"""The payload for the createPost mutation"""
type CreatePostPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The Post object mutation type."""
  post: Post
}

"""Input for the createProductCategory mutation"""
input CreateProductCategoryInput {
  """The slug that the product_cat will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_cat object"""
  description: String

  """The name of the product_cat object to mutate"""
  name: String!

  """The ID of the product_cat that should be set as the parent"""
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createProductCategory mutation"""
type CreateProductCategoryPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_cat"""
  productCategory: ProductCategory
}

"""Input for the createProductTag mutation"""
input CreateProductTagInput {
  """The slug that the product_tag will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_tag object"""
  description: String

  """The name of the product_tag object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createProductTag mutation"""
type CreateProductTagPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_tag"""
  productTag: ProductTag
}

"""Input for the createProductType mutation"""
input CreateProductTypeInput {
  """The slug that the product_type will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_type object"""
  description: String

  """The name of the product_type object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createProductType mutation"""
type CreateProductTypePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_type"""
  productType: ProductType
}

"""Input for the createReusableBlock mutation"""
input CreateReusableBlockInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The content of the object"""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """The password used to protect the content of the object"""
  password: String

  """The slug of the object"""
  slug: String

  """The status of the object"""
  status: PostStatusEnum

  """The title of the object"""
  title: String
}

"""The payload for the createReusableBlock mutation"""
type CreateReusableBlockPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The Post object mutation type."""
  reusableBlock: ReusableBlock
}

"""Input for the createShippingClass mutation"""
input CreateShippingClassInput {
  """The slug that the product_shipping_class will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_shipping_class object"""
  description: String

  """The name of the product_shipping_class object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createShippingClass mutation"""
type CreateShippingClassPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_shipping_class"""
  shippingClass: ShippingClass
}

"""Input for the createTag mutation"""
input CreateTagInput {
  """The slug that the post_tag will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the post_tag object"""
  description: String

  """The name of the post_tag object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createTag mutation"""
type CreateTagPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created post_tag"""
  tag: Tag
}

"""Input for the createUser mutation"""
input CreateUserInput {
  """User's AOL IM account."""
  aim: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """A string containing content about the user."""
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """A string containing the user's email address."""
  email: String

  """	The user's first name."""
  firstName: String

  """User's Jabber account."""
  jabber: String

  """The user's last name."""
  lastName: String

  """User's locale."""
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """The user's nickname, defaults to the user's username."""
  nickname: String

  """A string that contains the plain text password for the user."""
  password: String

  """If true, this will refresh the users JWT secret."""
  refreshJwtUserSecret: Boolean

  """The date the user registered. Format is Y-m-d H:i:s."""
  registered: String

  """
  If true, this will revoke the users JWT secret. If false, this will unrevoke the JWT secret AND issue a new one. To revoke, the user must have proper capabilities to edit users JWT secrets.
  """
  revokeJwtUserSecret: Boolean

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """An array of roles to be assigned to the user."""
  roles: [String]

  """A string that contains the user's username for logging in."""
  username: String!

  """A string containing the user's URL for the user's web site."""
  websiteUrl: String

  """User's Yahoo IM account."""
  yim: String
}

"""The payload for the createUser mutation"""
type CreateUserPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The User object mutation type."""
  user: User
}

"""Input for the createVisibleProduct mutation"""
input CreateVisibleProductInput {
  """The slug that the product_visibility will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_visibility object"""
  description: String

  """The name of the product_visibility object to mutate"""
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the createVisibleProduct mutation"""
type CreateVisibleProductPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_visibility"""
  visibleProduct: VisibleProduct
}

"""A customer object"""
type Customer implements Node {
  """Return the date customer billing address properties"""
  billing: CustomerAddress

  """Has customer calculated shipping?"""
  calculatedShipping: Boolean

  """The ID of the customer in the database"""
  databaseId: Int

  """Return the date customer was created"""
  date: String

  """Return the customer&#039;s display name."""
  displayName: String

  """Connection between the Customer type and the DownloadableItem type"""
  downloadableItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CustomerToDownloadableItemConnectionWhereArgs
  ): CustomerToDownloadableItemConnection

  """Return the customer&#039;s email."""
  email: String

  """Return the customer&#039;s first name."""
  firstName: String

  """Has calculated shipping?"""
  hasCalculatedShipping: Boolean

  """The globally unique identifier for the customer"""
  id: ID!

  """
  Whether the JWT User secret has been revoked. If the secret has been revoked, auth tokens will not be issued until an admin, or user with proper capabilities re-issues a secret for the user.
  """
  isJwtAuthSecretRevoked: Boolean!

  """Return the date customer was last updated"""
  isPayingCustomer: Boolean

  """Is customer VAT exempt?"""
  isVatExempt: Boolean

  """
  The expiration for the JWT Token for the user. If not set custom for the user, it will use the default sitewide expiration setting
  """
  jwtAuthExpiration: String

  """
  A JWT token that can be used in future requests for authentication/authorization
  """
  jwtAuthToken: String

  """
  A JWT token that can be used in future requests to get a refreshed jwtAuthToken. If the refresh token used in a request is revoked or otherwise invalid, a valid Auth token will NOT be issued in the response headers.
  """
  jwtRefreshToken: String

  """
  A unique secret tied to the users JWT token that can be revoked or refreshed. Revoking the secret prevents JWT tokens from being issued to the user. Refreshing the token invalidates previously issued tokens, but allows new tokens to be issued.
  """
  jwtUserSecret: String

  """Return the customer&#039;s last name."""
  lastName: String

  """Gets the customers last order."""
  lastOrder: Order

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Return the date customer was last updated"""
  modified: String

  """Return the number of orders this customer has."""
  orderCount: Int

  """Connection between the Customer type and the Order type"""
  orders(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CustomerToOrderConnectionWhereArgs
  ): CustomerToOrderConnection

  """Connection between the Customer type and the Refund type"""
  refunds(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: CustomerToRefundConnectionWhereArgs
  ): CustomerToRefundConnection

  """Return the customer&#039;s user role."""
  role: String

  """
  A JWT token that can be used in future requests to for WooCommerce session identification
  """
  sessionToken: String

  """Return the date customer shipping address properties"""
  shipping: CustomerAddress

  """Return how much money this customer has spent."""
  totalSpent: Float

  """Return the customer&#039;s username."""
  username: String
}

"""A customer address object"""
type CustomerAddress {
  """Address 1"""
  address1: String

  """Address 2"""
  address2: String

  """City"""
  city: String

  """Company"""
  company: String

  """Country"""
  country: CountriesEnum

  """E-mail"""
  email: String

  """First name"""
  firstName: String

  """Last name"""
  lastName: String

  """Phone"""
  phone: String

  """Zip Postal Code"""
  postcode: String

  """State"""
  state: String
}

"""Customer address information"""
input CustomerAddressInput {
  """Address 1"""
  address1: String

  """Address 2"""
  address2: String

  """City"""
  city: String

  """Company"""
  company: String

  """Country"""
  country: CountriesEnum

  """E-mail"""
  email: String

  """First name"""
  firstName: String

  """Last name"""
  lastName: String

  """Clear old address data"""
  overwrite: Boolean

  """Phone"""
  phone: String

  """Zip Postal Code"""
  postcode: String

  """State"""
  state: String
}

"""Field to order the connection by"""
enum CustomerConnectionOrderbyEnum {
  """Order by customer email"""
  EMAIL

  """Order by customer ID"""
  ID

  """Order by include field"""
  INCLUDE

  """Order by customer display name"""
  NAME

  """Order by customer registration date"""
  REGISTERED_DATE

  """Order by customer username"""
  USERNAME
}

"""Connection between the Customer type and the DownloadableItem type"""
type CustomerToDownloadableItemConnection {
  """Edges for the CustomerToDownloadableItemConnection connection"""
  edges: [CustomerToDownloadableItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [DownloadableItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CustomerToDownloadableItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: DownloadableItem
}

"""
Arguments for filtering the CustomerToDownloadableItemConnection connection
"""
input CustomerToDownloadableItemConnectionWhereArgs {
  """Limit results to downloadable items that can be downloaded now."""
  active: Boolean

  """Limit results to downloadable items that are expired."""
  expired: Boolean

  """Limit results to downloadable items that have downloads remaining."""
  hasDownloadsRemaining: Boolean
}

"""Connection between the Customer type and the Order type"""
type CustomerToOrderConnection {
  """Edges for the CustomerToOrderConnection connection"""
  edges: [CustomerToOrderConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Order]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CustomerToOrderConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Order
}

"""Arguments for filtering the CustomerToOrderConnection connection"""
input CustomerToOrderConnectionWhereArgs {
  """Limit result set to orders assigned a specific customer."""
  customerId: Int

  """Limit result set to orders assigned a specific group of customers."""
  customersIn: [Int]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """What paramater to use to order the objects by."""
  orderby: [OrdersOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to orders assigned a specific product."""
  productId: Int

  """Limit results to those matching a string."""
  search: String

  """Limit result set to orders assigned a specific status."""
  statuses: [OrderStatusEnum]
}

"""Connection between the Customer type and the Refund type"""
type CustomerToRefundConnection {
  """Edges for the CustomerToRefundConnection connection"""
  edges: [CustomerToRefundConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Refund]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type CustomerToRefundConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Refund
}

"""Arguments for filtering the CustomerToRefundConnection connection"""
input CustomerToRefundConnectionWhereArgs {
  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to refunds from a specific group of order IDs."""
  orderIn: [Int]

  """What paramater to use to order the objects by."""
  orderby: [PostTypeOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit results to those matching a string."""
  search: String

  """Limit result set to refunds assigned a specific status."""
  statuses: [String]
}

"""Object that can be identified with a Database ID"""
interface DatabaseIdentifier {
  """The unique identifier stored in the database"""
  databaseId: Int!
}

"""Date values"""
input DateInput {
  """Day of the month (from 1 to 31)"""
  day: Int

  """Month number (from 1 to 12)"""
  month: Int

  """4 digit year (e.g. 2017)"""
  year: Int
}

"""Filter the connection based on input"""
input DateQueryInput {
  """Nodes should be returned after this date"""
  after: DateInput

  """Nodes should be returned before this date"""
  before: DateInput

  """Column to query against"""
  column: PostObjectsConnectionDateColumnEnum

  """For after/before, whether exact value should be matched or not"""
  compare: String

  """Day of the month (from 1 to 31)"""
  day: Int

  """Hour (from 0 to 23)"""
  hour: Int

  """For after/before, whether exact value should be matched or not"""
  inclusive: Boolean

  """Minute (from 0 to 59)"""
  minute: Int

  """Month number (from 1 to 12)"""
  month: Int

  """OR or AND, how the sub-arrays should be compared"""
  relation: RelationEnum

  """Second (0 to 59)"""
  second: Int

  """Week of the year (from 0 to 53)"""
  week: Int

  """4 digit year (e.g. 2017)"""
  year: Int
}

"""The template assigned to the node"""
type DefaultTemplate implements ContentTemplate {
  """The name of the template"""
  templateName: String
}

"""Input for the deleteCategory mutation"""
input DeleteCategoryInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the category to delete"""
  id: ID!
}

"""The payload for the deleteCategory mutation"""
type DeleteCategoryPayload {
  """The deteted term object"""
  category: Category

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID
}

"""Input for the deleteComment mutation"""
input DeleteCommentInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  Whether the comment should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """The deleted comment ID"""
  id: ID!
}

"""The payload for the deleteComment mutation"""
type DeleteCommentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The deleted comment object"""
  comment: Comment

  """The deleted comment ID"""
  deletedId: ID
}

"""Input for the deleteCoupon mutation"""
input DeleteCouponInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Delete the object. Set to "false" by default."""
  forceDelete: Boolean

  """Unique identifier for the object."""
  id: ID!
}

"""The payload for the deleteCoupon mutation"""
type DeleteCouponPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  code: String

  """"""
  coupon: Coupon
}

"""Input for the deleteMediaItem mutation"""
input DeleteMediaItemInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  Whether the mediaItem should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """The ID of the mediaItem to delete"""
  id: ID!
}

"""The payload for the deleteMediaItem mutation"""
type DeleteMediaItemPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted mediaItem"""
  deletedId: ID

  """The mediaItem before it was deleted"""
  mediaItem: MediaItem
}

"""Input for the deleteOrder mutation"""
input DeleteOrderInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Delete or simply place in trash."""
  forceDelete: Boolean

  """Order global ID"""
  id: ID

  """Order WP ID"""
  orderId: Int
}

"""Input for the deleteOrderItems mutation"""
input DeleteOrderItemsInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Order global ID"""
  id: ID

  """ID Order items being deleted"""
  itemIds: [Int]

  """Order WP ID"""
  orderId: Int
}

"""The payload for the deleteOrderItems mutation"""
type DeleteOrderItemsPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  order: Order
}

"""The payload for the deleteOrder mutation"""
type DeleteOrderPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  order: Order
}

"""Input for the deletePaArchitecto mutation"""
input DeletePaArchitectoInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paArchitecto to delete"""
  id: ID!
}

"""The payload for the deletePaArchitecto mutation"""
type DeletePaArchitectoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paArchitecto: PaArchitecto
}

"""Input for the deletePaAspernatur mutation"""
input DeletePaAspernaturInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paAspernatur to delete"""
  id: ID!
}

"""The payload for the deletePaAspernatur mutation"""
type DeletePaAspernaturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paAspernatur: PaAspernatur
}

"""Input for the deletePaAtque mutation"""
input DeletePaAtqueInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paAtque to delete"""
  id: ID!
}

"""The payload for the deletePaAtque mutation"""
type DeletePaAtquePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paAtque: PaAtque
}

"""Input for the deletePaColor mutation"""
input DeletePaColorInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paColor to delete"""
  id: ID!
}

"""The payload for the deletePaColor mutation"""
type DeletePaColorPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paColor: PaColor
}

"""Input for the deletePaConsequatur mutation"""
input DeletePaConsequaturInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paConsequatur to delete"""
  id: ID!
}

"""The payload for the deletePaConsequatur mutation"""
type DeletePaConsequaturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paConsequatur: PaConsequatur
}

"""Input for the deletePaCum mutation"""
input DeletePaCumInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paCum to delete"""
  id: ID!
}

"""The payload for the deletePaCum mutation"""
type DeletePaCumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paCum: PaCum
}

"""Input for the deletePaDolor mutation"""
input DeletePaDolorInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paDolor to delete"""
  id: ID!
}

"""The payload for the deletePaDolor mutation"""
type DeletePaDolorPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paDolor: PaDolor
}

"""Input for the deletePaDoloremque mutation"""
input DeletePaDoloremqueInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paDoloremque to delete"""
  id: ID!
}

"""The payload for the deletePaDoloremque mutation"""
type DeletePaDoloremquePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paDoloremque: PaDoloremque
}

"""Input for the deletePaDolores mutation"""
input DeletePaDoloresInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paDolores to delete"""
  id: ID!
}

"""The payload for the deletePaDolores mutation"""
type DeletePaDoloresPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paDolores: PaDolores
}

"""Input for the deletePaDolorum mutation"""
input DeletePaDolorumInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paDolorum to delete"""
  id: ID!
}

"""The payload for the deletePaDolorum mutation"""
type DeletePaDolorumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paDolorum: PaDolorum
}

"""Input for the deletePaEa mutation"""
input DeletePaEaInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paEa to delete"""
  id: ID!
}

"""The payload for the deletePaEa mutation"""
type DeletePaEaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paEa: PaEa
}

"""Input for the deletePaEos mutation"""
input DeletePaEosInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paEos to delete"""
  id: ID!
}

"""The payload for the deletePaEos mutation"""
type DeletePaEosPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paEos: PaEos
}

"""Input for the deletePaEt mutation"""
input DeletePaEtInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paEt to delete"""
  id: ID!
}

"""The payload for the deletePaEt mutation"""
type DeletePaEtPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paEt: PaEt
}

"""Input for the deletePaExcepturi mutation"""
input DeletePaExcepturiInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paExcepturi to delete"""
  id: ID!
}

"""The payload for the deletePaExcepturi mutation"""
type DeletePaExcepturiPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paExcepturi: PaExcepturi
}

"""Input for the deletePaExplicabo mutation"""
input DeletePaExplicaboInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paExplicabo to delete"""
  id: ID!
}

"""The payload for the deletePaExplicabo mutation"""
type DeletePaExplicaboPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paExplicabo: PaExplicabo
}

"""Input for the deletePaFacere mutation"""
input DeletePaFacereInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paFacere to delete"""
  id: ID!
}

"""The payload for the deletePaFacere mutation"""
type DeletePaFacerePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paFacere: PaFacere
}

"""Input for the deletePaHarum mutation"""
input DeletePaHarumInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paHarum to delete"""
  id: ID!
}

"""The payload for the deletePaHarum mutation"""
type DeletePaHarumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paHarum: PaHarum
}

"""Input for the deletePaIncidunt mutation"""
input DeletePaInciduntInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paIncidunt to delete"""
  id: ID!
}

"""The payload for the deletePaIncidunt mutation"""
type DeletePaInciduntPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paIncidunt: PaIncidunt
}

"""Input for the deletePaIpsam mutation"""
input DeletePaIpsamInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paIpsam to delete"""
  id: ID!
}

"""The payload for the deletePaIpsam mutation"""
type DeletePaIpsamPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paIpsam: PaIpsam
}

"""Input for the deletePaIusto mutation"""
input DeletePaIustoInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paIusto to delete"""
  id: ID!
}

"""The payload for the deletePaIusto mutation"""
type DeletePaIustoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paIusto: PaIusto
}

"""Input for the deletePaLaudantium mutation"""
input DeletePaLaudantiumInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paLaudantium to delete"""
  id: ID!
}

"""The payload for the deletePaLaudantium mutation"""
type DeletePaLaudantiumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paLaudantium: PaLaudantium
}

"""Input for the deletePaMagnam mutation"""
input DeletePaMagnamInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paMagnam to delete"""
  id: ID!
}

"""The payload for the deletePaMagnam mutation"""
type DeletePaMagnamPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paMagnam: PaMagnam
}

"""Input for the deletePaMagni mutation"""
input DeletePaMagniInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paMagni to delete"""
  id: ID!
}

"""The payload for the deletePaMagni mutation"""
type DeletePaMagniPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paMagni: PaMagni
}

"""Input for the deletePaMinima mutation"""
input DeletePaMinimaInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paMinima to delete"""
  id: ID!
}

"""The payload for the deletePaMinima mutation"""
type DeletePaMinimaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paMinima: PaMinima
}

"""Input for the deletePaMolestiae mutation"""
input DeletePaMolestiaeInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paMolestiae to delete"""
  id: ID!
}

"""The payload for the deletePaMolestiae mutation"""
type DeletePaMolestiaePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paMolestiae: PaMolestiae
}

"""Input for the deletePaNihil mutation"""
input DeletePaNihilInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paNihil to delete"""
  id: ID!
}

"""The payload for the deletePaNihil mutation"""
type DeletePaNihilPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paNihil: PaNihil
}

"""Input for the deletePaNon mutation"""
input DeletePaNonInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paNon to delete"""
  id: ID!
}

"""The payload for the deletePaNon mutation"""
type DeletePaNonPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paNon: PaNon
}

"""Input for the deletePaNulla mutation"""
input DeletePaNullaInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paNulla to delete"""
  id: ID!
}

"""The payload for the deletePaNulla mutation"""
type DeletePaNullaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paNulla: PaNulla
}

"""Input for the deletePaNumericSize mutation"""
input DeletePaNumericSizeInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paNumericSize to delete"""
  id: ID!
}

"""The payload for the deletePaNumericSize mutation"""
type DeletePaNumericSizePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paNumericSize: PaNumericSize
}

"""Input for the deletePaOmnis mutation"""
input DeletePaOmnisInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paOmnis to delete"""
  id: ID!
}

"""The payload for the deletePaOmnis mutation"""
type DeletePaOmnisPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paOmnis: PaOmnis
}

"""Input for the deletePaOptio mutation"""
input DeletePaOptioInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paOptio to delete"""
  id: ID!
}

"""The payload for the deletePaOptio mutation"""
type DeletePaOptioPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paOptio: PaOptio
}

"""Input for the deletePaPraesentium mutation"""
input DeletePaPraesentiumInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paPraesentium to delete"""
  id: ID!
}

"""The payload for the deletePaPraesentium mutation"""
type DeletePaPraesentiumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paPraesentium: PaPraesentium
}

"""Input for the deletePaProvident mutation"""
input DeletePaProvidentInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paProvident to delete"""
  id: ID!
}

"""The payload for the deletePaProvident mutation"""
type DeletePaProvidentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paProvident: PaProvident
}

"""Input for the deletePaQuae mutation"""
input DeletePaQuaeInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paQuae to delete"""
  id: ID!
}

"""The payload for the deletePaQuae mutation"""
type DeletePaQuaePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paQuae: PaQuae
}

"""Input for the deletePaQui mutation"""
input DeletePaQuiInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paQui to delete"""
  id: ID!
}

"""The payload for the deletePaQui mutation"""
type DeletePaQuiPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paQui: PaQui
}

"""Input for the deletePaQuia mutation"""
input DeletePaQuiaInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paQuia to delete"""
  id: ID!
}

"""The payload for the deletePaQuia mutation"""
type DeletePaQuiaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paQuia: PaQuia
}

"""Input for the deletePaQuidem mutation"""
input DeletePaQuidemInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paQuidem to delete"""
  id: ID!
}

"""The payload for the deletePaQuidem mutation"""
type DeletePaQuidemPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paQuidem: PaQuidem
}

"""Input for the deletePaQuis mutation"""
input DeletePaQuisInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paQuis to delete"""
  id: ID!
}

"""The payload for the deletePaQuis mutation"""
type DeletePaQuisPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paQuis: PaQuis
}

"""Input for the deletePaQuo mutation"""
input DeletePaQuoInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paQuo to delete"""
  id: ID!
}

"""The payload for the deletePaQuo mutation"""
type DeletePaQuoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paQuo: PaQuo
}

"""Input for the deletePaRepellendus mutation"""
input DeletePaRepellendusInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paRepellendus to delete"""
  id: ID!
}

"""The payload for the deletePaRepellendus mutation"""
type DeletePaRepellendusPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paRepellendus: PaRepellendus
}

"""Input for the deletePaReprehenderit mutation"""
input DeletePaReprehenderitInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paReprehenderit to delete"""
  id: ID!
}

"""The payload for the deletePaReprehenderit mutation"""
type DeletePaReprehenderitPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paReprehenderit: PaReprehenderit
}

"""Input for the deletePaRerum mutation"""
input DeletePaRerumInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paRerum to delete"""
  id: ID!
}

"""The payload for the deletePaRerum mutation"""
type DeletePaRerumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paRerum: PaRerum
}

"""Input for the deletePaSit mutation"""
input DeletePaSitInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paSit to delete"""
  id: ID!
}

"""The payload for the deletePaSit mutation"""
type DeletePaSitPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paSit: PaSit
}

"""Input for the deletePaSize mutation"""
input DeletePaSizeInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paSize to delete"""
  id: ID!
}

"""The payload for the deletePaSize mutation"""
type DeletePaSizePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paSize: PaSize
}

"""Input for the deletePaTenetur mutation"""
input DeletePaTeneturInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paTenetur to delete"""
  id: ID!
}

"""The payload for the deletePaTenetur mutation"""
type DeletePaTeneturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paTenetur: PaTenetur
}

"""Input for the deletePaVel mutation"""
input DeletePaVelInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the paVel to delete"""
  id: ID!
}

"""The payload for the deletePaVel mutation"""
type DeletePaVelPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  paVel: PaVel
}

"""Input for the deletePage mutation"""
input DeletePageInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  Whether the object should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """The ID of the page to delete"""
  id: ID!
}

"""The payload for the deletePage mutation"""
type DeletePagePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The object before it was deleted"""
  page: Page
}

"""Input for the deletePostFormat mutation"""
input DeletePostFormatInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the postFormat to delete"""
  id: ID!
}

"""The payload for the deletePostFormat mutation"""
type DeletePostFormatPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  postFormat: PostFormat
}

"""Input for the deletePost mutation"""
input DeletePostInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  Whether the object should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """The ID of the post to delete"""
  id: ID!
}

"""The payload for the deletePost mutation"""
type DeletePostPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The object before it was deleted"""
  post: Post
}

"""Input for the deleteProductCategory mutation"""
input DeleteProductCategoryInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the productCategory to delete"""
  id: ID!
}

"""The payload for the deleteProductCategory mutation"""
type DeleteProductCategoryPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  productCategory: ProductCategory
}

"""Input for the deleteProductTag mutation"""
input DeleteProductTagInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the productTag to delete"""
  id: ID!
}

"""The payload for the deleteProductTag mutation"""
type DeleteProductTagPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  productTag: ProductTag
}

"""Input for the deleteProductType mutation"""
input DeleteProductTypeInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the productType to delete"""
  id: ID!
}

"""The payload for the deleteProductType mutation"""
type DeleteProductTypePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  productType: ProductType
}

"""Input for the deleteReusableBlock mutation"""
input DeleteReusableBlockInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  Whether the object should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """The ID of the ReusableBlock to delete"""
  id: ID!
}

"""The payload for the deleteReusableBlock mutation"""
type DeleteReusableBlockPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The object before it was deleted"""
  reusableBlock: ReusableBlock
}

"""Input for the deleteReview mutation"""
input DeleteReviewInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  Whether the product review should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """The ID of the target product review"""
  id: ID!
}

"""The payload for the deleteReview mutation"""
type DeleteReviewPayload {
  """The affected product review ID"""
  affectedId: ID

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The product rating of the affected product review"""
  rating: Float

  """The affected product review"""
  review: Comment
}

"""Input for the deleteShippingClass mutation"""
input DeleteShippingClassInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the shippingClass to delete"""
  id: ID!
}

"""The payload for the deleteShippingClass mutation"""
type DeleteShippingClassPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  shippingClass: ShippingClass
}

"""Input for the deleteTag mutation"""
input DeleteTagInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the tag to delete"""
  id: ID!
}

"""The payload for the deleteTag mutation"""
type DeleteTagPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  tag: Tag
}

"""Input for the deleteUser mutation"""
input DeleteUserInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the user you want to delete"""
  id: ID!

  """Reassign posts and links to new User ID."""
  reassignId: ID
}

"""The payload for the deleteUser mutation"""
type DeleteUserPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the user that you just deleted"""
  deletedId: ID

  """The deleted user object"""
  user: User
}

"""Input for the deleteVisibleProduct mutation"""
input DeleteVisibleProductInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the visibleProduct to delete"""
  id: ID!
}

"""The payload for the deleteVisibleProduct mutation"""
type DeleteVisibleProductPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the deleted object"""
  deletedId: ID

  """The deteted term object"""
  visibleProduct: VisibleProduct
}

"""Coupon discount type enumeration"""
enum DiscountTypeEnum {
  """Fixed cart discount"""
  FIXED_CART

  """Fixed product discount"""
  FIXED_PRODUCT

  """Percentage discount"""
  PERCENT
}

"""The discussion setting type"""
type DiscussionSettings {
  """Allow people to submit comments on new posts."""
  defaultCommentStatus: String

  """
  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.
  """
  defaultPingStatus: String
}

"""A downloadable item"""
type DownloadableItem {
  """The date the downloadable item expires"""
  accessExpires: String

  """ProductDownload of the downloadable item"""
  download: ProductDownload

  """Downloadable item unique identifier"""
  downloadId: String!

  """Number of times the item can be downloaded."""
  downloadsRemaining: Int

  """Name of the downloadable item."""
  name: String

  """Product of downloadable item."""
  product: Product

  """Download URL of the downloadable item."""
  url: String
}

"""Input for the emptyCart mutation"""
input EmptyCartInput {
  clearPersistentCart: Boolean

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""The payload for the emptyCart mutation"""
type EmptyCartPayload {
  """"""
  cart: Cart

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  deletedCart: Cart
}

"""Asset enqueued by the CMS"""
interface EnqueuedAsset {
  """@todo"""
  args: Boolean

  """Dependencies needed to use this asset"""
  dependencies: [EnqueuedScript]

  """Extra information needed for the script"""
  extra: String

  """The handle of the enqueued asset"""
  handle: String

  """The ID of the enqueued asset"""
  id: ID!

  """The source of the asset"""
  src: String

  """The version of the enqueued asset"""
  version: String
}

"""Script enqueued by the CMS"""
type EnqueuedScript implements EnqueuedAsset & Node {
  """@todo"""
  args: Boolean

  """Dependencies needed to use this asset"""
  dependencies: [EnqueuedScript]

  """Extra information needed for the script"""
  extra: String

  """The handle of the enqueued asset"""
  handle: String

  """The ID of the enqueued asset"""
  id: ID!

  """The source of the asset"""
  src: String

  """The version of the enqueued asset"""
  version: String
}

"""Stylesheet enqueued by the CMS"""
type EnqueuedStylesheet implements EnqueuedAsset & Node {
  """@todo"""
  args: Boolean

  """Dependencies needed to use this asset"""
  dependencies: [EnqueuedScript]

  """Extra information needed for the script"""
  extra: String

  """The handle of the enqueued asset"""
  handle: String

  """The ID of the enqueued asset"""
  id: ID!

  """The source of the asset"""
  src: String

  """The version of the enqueued asset"""
  version: String
}

"""A external product object"""
type ExternalProduct implements ContentNode & DatabaseIdentifier & Node & NodeWithComments & NodeWithContentEditor & NodeWithFeaturedImage & Product & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: ExternalProduct_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: ExternalProduct_Acfblockstaff

  """Connection between the Product type and the paArchitecto type"""
  allPaArchitecto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaArchitectoConnectionWhereArgs
  ): ProductToPaArchitectoConnection

  """Connection between the Product type and the paAspernatur type"""
  allPaAspernatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAspernaturConnectionWhereArgs
  ): ProductToPaAspernaturConnection

  """Connection between the Product type and the paAtque type"""
  allPaAtque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAtqueConnectionWhereArgs
  ): ProductToPaAtqueConnection

  """Connection between the Product type and the paColor type"""
  allPaColor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaColorConnectionWhereArgs
  ): ProductToPaColorConnection

  """Connection between the Product type and the paConsequatur type"""
  allPaConsequatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaConsequaturConnectionWhereArgs
  ): ProductToPaConsequaturConnection

  """Connection between the Product type and the paCum type"""
  allPaCum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaCumConnectionWhereArgs
  ): ProductToPaCumConnection

  """Connection between the Product type and the paDolor type"""
  allPaDolor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorConnectionWhereArgs
  ): ProductToPaDolorConnection

  """Connection between the Product type and the paDoloremque type"""
  allPaDoloremque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloremqueConnectionWhereArgs
  ): ProductToPaDoloremqueConnection

  """Connection between the Product type and the paDolores type"""
  allPaDolores(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloresConnectionWhereArgs
  ): ProductToPaDoloresConnection

  """Connection between the Product type and the paDolorum type"""
  allPaDolorum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorumConnectionWhereArgs
  ): ProductToPaDolorumConnection

  """Connection between the Product type and the paEa type"""
  allPaEa(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEaConnectionWhereArgs
  ): ProductToPaEaConnection

  """Connection between the Product type and the paEos type"""
  allPaEos(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEosConnectionWhereArgs
  ): ProductToPaEosConnection

  """Connection between the Product type and the paEt type"""
  allPaEt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEtConnectionWhereArgs
  ): ProductToPaEtConnection

  """Connection between the Product type and the paExcepturi type"""
  allPaExcepturi(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExcepturiConnectionWhereArgs
  ): ProductToPaExcepturiConnection

  """Connection between the Product type and the paExplicabo type"""
  allPaExplicabo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExplicaboConnectionWhereArgs
  ): ProductToPaExplicaboConnection

  """Connection between the Product type and the paFacere type"""
  allPaFacere(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaFacereConnectionWhereArgs
  ): ProductToPaFacereConnection

  """Connection between the Product type and the paHarum type"""
  allPaHarum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaHarumConnectionWhereArgs
  ): ProductToPaHarumConnection

  """Connection between the Product type and the paIncidunt type"""
  allPaIncidunt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaInciduntConnectionWhereArgs
  ): ProductToPaInciduntConnection

  """Connection between the Product type and the paIpsam type"""
  allPaIpsam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIpsamConnectionWhereArgs
  ): ProductToPaIpsamConnection

  """Connection between the Product type and the paIusto type"""
  allPaIusto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIustoConnectionWhereArgs
  ): ProductToPaIustoConnection

  """Connection between the Product type and the paLaudantium type"""
  allPaLaudantium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaLaudantiumConnectionWhereArgs
  ): ProductToPaLaudantiumConnection

  """Connection between the Product type and the paMagnam type"""
  allPaMagnam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagnamConnectionWhereArgs
  ): ProductToPaMagnamConnection

  """Connection between the Product type and the paMagni type"""
  allPaMagni(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagniConnectionWhereArgs
  ): ProductToPaMagniConnection

  """Connection between the Product type and the paMinima type"""
  allPaMinima(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMinimaConnectionWhereArgs
  ): ProductToPaMinimaConnection

  """Connection between the Product type and the paMolestiae type"""
  allPaMolestiae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMolestiaeConnectionWhereArgs
  ): ProductToPaMolestiaeConnection

  """Connection between the Product type and the paNihil type"""
  allPaNihil(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNihilConnectionWhereArgs
  ): ProductToPaNihilConnection

  """Connection between the Product type and the paNon type"""
  allPaNon(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNonConnectionWhereArgs
  ): ProductToPaNonConnection

  """Connection between the Product type and the paNulla type"""
  allPaNulla(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNullaConnectionWhereArgs
  ): ProductToPaNullaConnection

  """Connection between the Product type and the paNumericSize type"""
  allPaNumericSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNumericSizeConnectionWhereArgs
  ): ProductToPaNumericSizeConnection

  """Connection between the Product type and the paOmnis type"""
  allPaOmnis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOmnisConnectionWhereArgs
  ): ProductToPaOmnisConnection

  """Connection between the Product type and the paOptio type"""
  allPaOptio(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOptioConnectionWhereArgs
  ): ProductToPaOptioConnection

  """Connection between the Product type and the paPraesentium type"""
  allPaPraesentium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaPraesentiumConnectionWhereArgs
  ): ProductToPaPraesentiumConnection

  """Connection between the Product type and the paProvident type"""
  allPaProvident(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaProvidentConnectionWhereArgs
  ): ProductToPaProvidentConnection

  """Connection between the Product type and the paQuae type"""
  allPaQuae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuaeConnectionWhereArgs
  ): ProductToPaQuaeConnection

  """Connection between the Product type and the paQui type"""
  allPaQui(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiConnectionWhereArgs
  ): ProductToPaQuiConnection

  """Connection between the Product type and the paQuia type"""
  allPaQuia(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiaConnectionWhereArgs
  ): ProductToPaQuiaConnection

  """Connection between the Product type and the paQuidem type"""
  allPaQuidem(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuidemConnectionWhereArgs
  ): ProductToPaQuidemConnection

  """Connection between the Product type and the paQuis type"""
  allPaQuis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuisConnectionWhereArgs
  ): ProductToPaQuisConnection

  """Connection between the Product type and the paQuo type"""
  allPaQuo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuoConnectionWhereArgs
  ): ProductToPaQuoConnection

  """Connection between the Product type and the paRepellendus type"""
  allPaRepellendus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRepellendusConnectionWhereArgs
  ): ProductToPaRepellendusConnection

  """Connection between the Product type and the paReprehenderit type"""
  allPaReprehenderit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaReprehenderitConnectionWhereArgs
  ): ProductToPaReprehenderitConnection

  """Connection between the Product type and the paRerum type"""
  allPaRerum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRerumConnectionWhereArgs
  ): ProductToPaRerumConnection

  """Connection between the Product type and the paSit type"""
  allPaSit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSitConnectionWhereArgs
  ): ProductToPaSitConnection

  """Connection between the Product type and the paSize type"""
  allPaSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSizeConnectionWhereArgs
  ): ProductToPaSizeConnection

  """Connection between the Product type and the paTenetur type"""
  allPaTenetur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaTeneturConnectionWhereArgs
  ): ProductToPaTeneturConnection

  """Connection between the Product type and the paVel type"""
  allPaVel(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaVelConnectionWhereArgs
  ): ProductToPaVelConnection

  """Connection between the Product type and the ProductAttribute type"""
  attributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection

  """Product average count"""
  averageRating: Float

  """External product Buy button text"""
  buttonText: String

  """Catalog visibility"""
  catalogVisibility: CatalogVisibilityEnum

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The ID of the product in the database"""
  databaseId: Int!

  """Date product created"""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """Date on sale from"""
  dateOnSaleFrom: String

  """Date on sale to"""
  dateOnSaleTo: String

  """
  Connection between the ExternalProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ExternalProductToVariationAttributeConnection

  """Product description"""
  description(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """External product url"""
  externalUrl: String

  """If the product is featured"""
  featured: Boolean

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """Connection between the Product type and the MediaItem type"""
  galleryImages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier for the product"""
  id: ID!

  """Main image"""
  image: MediaItem

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """Connection between the Product type and the LocalProductAttribute type"""
  localAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection

  """Menu order"""
  menuOrder: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date product last updated"""
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Product name"""
  name: String

  """Is product on sale?"""
  onSale: Boolean

  """Parent product"""
  parent: Product

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """Product&#039;s active price"""
  price(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Product type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection

  """Product Currency"""
  productCurrency: String

  """Connection between the Product type and the productTag type"""
  productTags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection

  """Connection between the Product type and the productType type"""
  productTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection

  """Can product be purchased?"""
  purchasable: Boolean

  """Purchase note"""
  purchaseNote: String

  """Product&#039;s regular price"""
  regularPrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Product type and the Product type"""
  related(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """Product review count"""
  reviewCount: Int

  """Connection between the Product type and the Comment type"""
  reviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection

  """If reviews are allowed"""
  reviewsAllowed: Boolean

  """Product&#039;s sale price"""
  salePrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """Connection between the Product type and the shippingClass type"""
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection

  """Product short description"""
  shortDescription(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Product SKU"""
  sku: String

  """Product slug"""
  slug: String

  """Product status"""
  status: String

  """Tax class"""
  taxClass: TaxClassEnum

  """Tax status"""
  taxStatus: TaxStatusEnum

  """The template assigned to a node of content"""
  template: ContentTemplate

  """Number total of sales"""
  totalSales: Int

  """Product type"""
  type: ProductTypesEnum

  """Connection between the Product type and the Product type"""
  upsell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToUpsellConnectionWhereArgs
  ): ProductToUpsellConnection

  """The unique resource identifier path"""
  uri: String

  """Connection between the Product type and the visibleProduct type"""
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection
}

"""
Connection between the ExternalProduct type and the VariationAttribute type
"""
type ExternalProductToVariationAttributeConnection {
  """Edges for the ExternalProductToVariationAttributeConnection connection"""
  edges: [ExternalProductToVariationAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VariationAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ExternalProductToVariationAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VariationAttribute
}

"""Field Group"""
type ExternalProduct_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [ExternalProduct_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type ExternalProduct_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type ExternalProduct_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""a fee line object"""
type FeeLine {
  """Fee amount"""
  amount: String

  """The ID of the order item in the database"""
  databaseId: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Fee name"""
  name: String

  """The Id of the order the order item belongs to."""
  orderId: Int

  """Line tax class"""
  taxClass: TaxClassEnum

  """Tax status of fee"""
  taxStatus: TaxStatusEnum

  """Line taxes"""
  taxes: [OrderItemTax]

  """Line total (after discounts)"""
  total: String

  """Line total tax (after discounts)"""
  totalTax: String
}

"""Fee line data."""
input FeeLineInput {
  """Fee amount."""
  amount: String

  """Fee Line ID"""
  id: ID

  """Fee name."""
  name: String

  """Tax class of fee."""
  taxClass: TaxClassEnum

  """Tax status of fee."""
  taxStatus: TaxStatusEnum

  """Line total (after discounts)."""
  total: String
}

"""Input for the fillCart mutation"""
input FillCartInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Coupons to be applied to the cart"""
  coupons: [String]

  """Cart items to be added"""
  items: [CartItemInput]

  """Shipping methods to be used."""
  shippingMethods: [String]
}

"""The payload for the fillCart mutation"""
type FillCartPayload {
  """"""
  added: [CartItem]

  """"""
  applied: [AppliedCoupon]

  """"""
  cart: Cart

  """"""
  cartErrors: [CartError]

  """"""
  chosenShippingMethods: [String]

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""The general setting type"""
type GeneralSettings {
  """A date format for all date strings."""
  dateFormat: String

  """Site tagline."""
  description: String

  """This address is used for admin purposes, like new user notification."""
  email: String

  """WordPress locale code."""
  language: String

  """A day number of the week that the week should start on."""
  startOfWeek: Int

  """A time format for all time strings."""
  timeFormat: String

  """A city in the same timezone as you."""
  timezone: String

  """Site title."""
  title: String

  """Site URL."""
  url: String
}

"""A product attribute object"""
type GlobalProductAttribute implements ProductAttribute {
  """Attribute ID"""
  attributeId: Int!

  """Attribute Global ID"""
  id: ID!

  """Attribute label"""
  label: String!

  """Product attribute name"""
  name: String!

  """Attribute options"""
  options: [String]

  """Attribute position"""
  position: Int!

  """Product attribute scope."""
  scope: ProductAttributeTypesEnum!

  """Product attribute slug"""
  slug: String!

  """
  Connection between the GlobalProductAttribute type and the TermNode type
  """
  terms(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: GlobalProductAttributeToTermNodeConnectionWhereArgs
  ): GlobalProductAttributeToTermNodeConnection

  """Is attribute on product variation"""
  variation: Boolean!

  """Is attribute visible"""
  visible: Boolean!
}

"""
Connection between the GlobalProductAttribute type and the TermNode type
"""
type GlobalProductAttributeToTermNodeConnection {
  """Edges for the GlobalProductAttributeToTermNodeConnection connection"""
  edges: [GlobalProductAttributeToTermNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [TermNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type GlobalProductAttributeToTermNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: TermNode
}

"""
Arguments for filtering the GlobalProductAttributeToTermNodeConnection connection
"""
input GlobalProductAttributeToTermNodeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""A group product object"""
type GroupProduct implements ContentNode & DatabaseIdentifier & Node & NodeWithComments & NodeWithContentEditor & NodeWithFeaturedImage & Product & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: GroupProduct_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: GroupProduct_Acfblockstaff

  """Product&#039;s add to cart button text description"""
  addToCartDescription: String

  """Product&#039;s add to cart button text description"""
  addToCartText: String

  """Connection between the Product type and the paArchitecto type"""
  allPaArchitecto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaArchitectoConnectionWhereArgs
  ): ProductToPaArchitectoConnection

  """Connection between the Product type and the paAspernatur type"""
  allPaAspernatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAspernaturConnectionWhereArgs
  ): ProductToPaAspernaturConnection

  """Connection between the Product type and the paAtque type"""
  allPaAtque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAtqueConnectionWhereArgs
  ): ProductToPaAtqueConnection

  """Connection between the Product type and the paColor type"""
  allPaColor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaColorConnectionWhereArgs
  ): ProductToPaColorConnection

  """Connection between the Product type and the paConsequatur type"""
  allPaConsequatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaConsequaturConnectionWhereArgs
  ): ProductToPaConsequaturConnection

  """Connection between the Product type and the paCum type"""
  allPaCum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaCumConnectionWhereArgs
  ): ProductToPaCumConnection

  """Connection between the Product type and the paDolor type"""
  allPaDolor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorConnectionWhereArgs
  ): ProductToPaDolorConnection

  """Connection between the Product type and the paDoloremque type"""
  allPaDoloremque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloremqueConnectionWhereArgs
  ): ProductToPaDoloremqueConnection

  """Connection between the Product type and the paDolores type"""
  allPaDolores(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloresConnectionWhereArgs
  ): ProductToPaDoloresConnection

  """Connection between the Product type and the paDolorum type"""
  allPaDolorum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorumConnectionWhereArgs
  ): ProductToPaDolorumConnection

  """Connection between the Product type and the paEa type"""
  allPaEa(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEaConnectionWhereArgs
  ): ProductToPaEaConnection

  """Connection between the Product type and the paEos type"""
  allPaEos(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEosConnectionWhereArgs
  ): ProductToPaEosConnection

  """Connection between the Product type and the paEt type"""
  allPaEt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEtConnectionWhereArgs
  ): ProductToPaEtConnection

  """Connection between the Product type and the paExcepturi type"""
  allPaExcepturi(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExcepturiConnectionWhereArgs
  ): ProductToPaExcepturiConnection

  """Connection between the Product type and the paExplicabo type"""
  allPaExplicabo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExplicaboConnectionWhereArgs
  ): ProductToPaExplicaboConnection

  """Connection between the Product type and the paFacere type"""
  allPaFacere(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaFacereConnectionWhereArgs
  ): ProductToPaFacereConnection

  """Connection between the Product type and the paHarum type"""
  allPaHarum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaHarumConnectionWhereArgs
  ): ProductToPaHarumConnection

  """Connection between the Product type and the paIncidunt type"""
  allPaIncidunt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaInciduntConnectionWhereArgs
  ): ProductToPaInciduntConnection

  """Connection between the Product type and the paIpsam type"""
  allPaIpsam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIpsamConnectionWhereArgs
  ): ProductToPaIpsamConnection

  """Connection between the Product type and the paIusto type"""
  allPaIusto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIustoConnectionWhereArgs
  ): ProductToPaIustoConnection

  """Connection between the Product type and the paLaudantium type"""
  allPaLaudantium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaLaudantiumConnectionWhereArgs
  ): ProductToPaLaudantiumConnection

  """Connection between the Product type and the paMagnam type"""
  allPaMagnam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagnamConnectionWhereArgs
  ): ProductToPaMagnamConnection

  """Connection between the Product type and the paMagni type"""
  allPaMagni(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagniConnectionWhereArgs
  ): ProductToPaMagniConnection

  """Connection between the Product type and the paMinima type"""
  allPaMinima(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMinimaConnectionWhereArgs
  ): ProductToPaMinimaConnection

  """Connection between the Product type and the paMolestiae type"""
  allPaMolestiae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMolestiaeConnectionWhereArgs
  ): ProductToPaMolestiaeConnection

  """Connection between the Product type and the paNihil type"""
  allPaNihil(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNihilConnectionWhereArgs
  ): ProductToPaNihilConnection

  """Connection between the Product type and the paNon type"""
  allPaNon(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNonConnectionWhereArgs
  ): ProductToPaNonConnection

  """Connection between the Product type and the paNulla type"""
  allPaNulla(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNullaConnectionWhereArgs
  ): ProductToPaNullaConnection

  """Connection between the Product type and the paNumericSize type"""
  allPaNumericSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNumericSizeConnectionWhereArgs
  ): ProductToPaNumericSizeConnection

  """Connection between the Product type and the paOmnis type"""
  allPaOmnis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOmnisConnectionWhereArgs
  ): ProductToPaOmnisConnection

  """Connection between the Product type and the paOptio type"""
  allPaOptio(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOptioConnectionWhereArgs
  ): ProductToPaOptioConnection

  """Connection between the Product type and the paPraesentium type"""
  allPaPraesentium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaPraesentiumConnectionWhereArgs
  ): ProductToPaPraesentiumConnection

  """Connection between the Product type and the paProvident type"""
  allPaProvident(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaProvidentConnectionWhereArgs
  ): ProductToPaProvidentConnection

  """Connection between the Product type and the paQuae type"""
  allPaQuae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuaeConnectionWhereArgs
  ): ProductToPaQuaeConnection

  """Connection between the Product type and the paQui type"""
  allPaQui(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiConnectionWhereArgs
  ): ProductToPaQuiConnection

  """Connection between the Product type and the paQuia type"""
  allPaQuia(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiaConnectionWhereArgs
  ): ProductToPaQuiaConnection

  """Connection between the Product type and the paQuidem type"""
  allPaQuidem(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuidemConnectionWhereArgs
  ): ProductToPaQuidemConnection

  """Connection between the Product type and the paQuis type"""
  allPaQuis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuisConnectionWhereArgs
  ): ProductToPaQuisConnection

  """Connection between the Product type and the paQuo type"""
  allPaQuo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuoConnectionWhereArgs
  ): ProductToPaQuoConnection

  """Connection between the Product type and the paRepellendus type"""
  allPaRepellendus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRepellendusConnectionWhereArgs
  ): ProductToPaRepellendusConnection

  """Connection between the Product type and the paReprehenderit type"""
  allPaReprehenderit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaReprehenderitConnectionWhereArgs
  ): ProductToPaReprehenderitConnection

  """Connection between the Product type and the paRerum type"""
  allPaRerum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRerumConnectionWhereArgs
  ): ProductToPaRerumConnection

  """Connection between the Product type and the paSit type"""
  allPaSit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSitConnectionWhereArgs
  ): ProductToPaSitConnection

  """Connection between the Product type and the paSize type"""
  allPaSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSizeConnectionWhereArgs
  ): ProductToPaSizeConnection

  """Connection between the Product type and the paTenetur type"""
  allPaTenetur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaTeneturConnectionWhereArgs
  ): ProductToPaTeneturConnection

  """Connection between the Product type and the paVel type"""
  allPaVel(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaVelConnectionWhereArgs
  ): ProductToPaVelConnection

  """Connection between the Product type and the ProductAttribute type"""
  attributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection

  """Product average count"""
  averageRating: Float

  """Catalog visibility"""
  catalogVisibility: CatalogVisibilityEnum

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The ID of the product in the database"""
  databaseId: Int!

  """Date product created"""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """Date on sale from"""
  dateOnSaleFrom: String

  """Date on sale to"""
  dateOnSaleTo: String

  """
  Connection between the GroupProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): GroupProductToVariationAttributeConnection

  """Product description"""
  description(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """If the product is featured"""
  featured: Boolean

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """Connection between the Product type and the MediaItem type"""
  galleryImages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier for the product"""
  id: ID!

  """Main image"""
  image: MediaItem

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """Connection between the Product type and the LocalProductAttribute type"""
  localAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection

  """Menu order"""
  menuOrder: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date product last updated"""
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Product name"""
  name: String

  """Is product on sale?"""
  onSale: Boolean

  """Parent product"""
  parent: Product

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """Products&#039; price range"""
  price: String

  """Connection between the Product type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection

  """Product Currency"""
  productCurrency: String

  """Connection between the Product type and the productTag type"""
  productTags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection

  """Connection between the Product type and the productType type"""
  productTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection

  """Connection between the GroupProduct type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: GroupProductToProductConnectionWhereArgs
  ): GroupProductToProductConnection

  """Can product be purchased?"""
  purchasable: Boolean

  """Purchase note"""
  purchaseNote: String

  """Connection between the Product type and the Product type"""
  related(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """Product review count"""
  reviewCount: Int

  """Connection between the Product type and the Comment type"""
  reviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection

  """If reviews are allowed"""
  reviewsAllowed: Boolean

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """Connection between the Product type and the shippingClass type"""
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection

  """Product short description"""
  shortDescription(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Product SKU"""
  sku: String

  """Product slug"""
  slug: String

  """Product status"""
  status: String

  """The template assigned to a node of content"""
  template: ContentTemplate

  """Number total of sales"""
  totalSales: Int

  """Product type"""
  type: ProductTypesEnum

  """Connection between the Product type and the Product type"""
  upsell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToUpsellConnectionWhereArgs
  ): ProductToUpsellConnection

  """The unique resource identifier path"""
  uri: String

  """Connection between the Product type and the visibleProduct type"""
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection
}

"""Connection between the GroupProduct type and the Product type"""
type GroupProductToProductConnection {
  """Edges for the GroupProductToProductConnection connection"""
  edges: [GroupProductToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type GroupProductToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the GroupProductToProductConnection connection"""
input GroupProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the GroupProduct type and the VariationAttribute type
"""
type GroupProductToVariationAttributeConnection {
  """Edges for the GroupProductToVariationAttributeConnection connection"""
  edges: [GroupProductToVariationAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VariationAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type GroupProductToVariationAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VariationAttribute
}

"""Field Group"""
type GroupProduct_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [GroupProduct_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type GroupProduct_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type GroupProduct_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""Header Type"""
type HCMSFooter {
  """Copyright text"""
  copyrightText: String

  """sidebarOne"""
  sidebarOne: String

  """sidebarTwo"""
  sidebarTwo: String

  """Social links"""
  socialLinks: [HCMSSocialLinks]
}

"""Header Type"""
type HCMSHeader {
  """favicon"""
  favicon: String

  """Site logo URL"""
  siteLogoUrl: String

  """Site tagline"""
  siteTagLine: String

  """Site title"""
  siteTitle: String
}

"""Social Links Type"""
type HCMSSocialLinks {
  """Icon name"""
  iconName: String

  """Icon url"""
  iconUrl: String
}

""""""
type HeaderMenuType {
  """"""
  css: String

  """"""
  label: String

  """"""
  type: String

  """"""
  url: String
}

"""Content node with hierarchical (parent/child) relationships"""
interface HierarchicalContentNode {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeAncestorsConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  children(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeChildrenConnection

  """The parent of the node. The parent object can be of various types"""
  parent: HierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type HierarchicalContentNodeToContentNodeAncestorsConnection {
  """
  Edges for the HierarchicalContentNodeToContentNodeAncestorsConnection connection
  """
  edges: [HierarchicalContentNodeToContentNodeAncestorsConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type HierarchicalContentNodeToContentNodeAncestorsConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the HierarchicalContentNodeToContentNodeAncestorsConnection connection
"""
input HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type HierarchicalContentNodeToContentNodeChildrenConnection {
  """
  Edges for the HierarchicalContentNodeToContentNodeChildrenConnection connection
  """
  edges: [HierarchicalContentNodeToContentNodeChildrenConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type HierarchicalContentNodeToContentNodeChildrenConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the HierarchicalContentNodeToContentNodeChildrenConnection connection
"""
input HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type HierarchicalContentNodeToParentContentNodeConnectionEdge {
  """The node of the connection, without the edges"""
  node: ContentNode
}

"""Term node with hierarchical (parent/child) relationships"""
interface HierarchicalTermNode {
  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID
}

"""a line item object"""
type LineItem {
  """The ID of the order item in the database"""
  databaseId: Int

  """Line item&#039;s taxes"""
  itemDownloads: [ProductDownload]

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """The Id of the order the order item belongs to."""
  orderId: Int

  """Connection between the LineItem type and the Product type"""
  product: LineItemToProductConnectionEdge

  """Line item&#039;s product ID"""
  productId: Int

  """Line item&#039;s product quantity"""
  quantity: Int

  """Line item&#039;s subtotal"""
  subtotal: String

  """Line item&#039;s subtotal tax"""
  subtotalTax: String

  """Line item&#039;s tax class"""
  taxClass: TaxClassEnum

  """Line item&#039;s taxes"""
  taxStatus: TaxStatusEnum

  """Line item&#039;s taxes"""
  taxes: [OrderItemTax]

  """Line item&#039;s total"""
  total: String

  """Line item&#039;s total tax"""
  totalTax: String

  """Connection between the LineItem type and the ProductVariation type"""
  variation: LineItemToProductVariationConnectionEdge

  """Line item&#039;s product variation ID"""
  variationId: Int
}

"""Meta data."""
input LineItemInput {
  """Line Item ID"""
  id: ID

  """Meta data."""
  metaData: [MetaDataInput]

  """Line name"""
  name: String

  """Product ID."""
  productId: Int

  """Quantity ordered."""
  quantity: Int

  """Product SKU."""
  sku: String

  """Line subtotal (before discounts)."""
  subtotal: String

  """Tax class of product."""
  taxClass: TaxClassEnum

  """Line total (after discounts)."""
  total: String

  """Variation ID, if applicable."""
  variationId: Int
}

"""Connection between the LineItem type and the Product type"""
type LineItemToProductConnectionEdge {
  """The node of the connection, without the edges"""
  node: Product
}

"""Connection between the LineItem type and the ProductVariation type"""
type LineItemToProductVariationConnectionEdge {
  """The node of the connection, without the edges"""
  node: ProductVariation
}

"""A product attribute object"""
type LocalProductAttribute implements ProductAttribute {
  """Attribute ID"""
  attributeId: Int!

  """Attribute Global ID"""
  id: ID!

  """Attribute label"""
  label: String!

  """Attribute name"""
  name: String!

  """Attribute options"""
  options: [String]

  """Attribute position"""
  position: Int!

  """Product attribute scope."""
  scope: ProductAttributeTypesEnum!

  """Is attribute on product variation"""
  variation: Boolean!

  """Is attribute visible"""
  visible: Boolean!
}

"""Input for the login mutation"""
input LoginInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The plain-text password for the user logging in."""
  password: String!

  """
  The username used for login. Typically a unique or email address depending on specific configuration
  """
  username: String!
}

"""The payload for the login mutation"""
type LoginPayload {
  """JWT Token that can be used in future requests for Authentication"""
  authToken: String

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Customer object of authenticated user."""
  customer: Customer

  """
  A JWT token that can be used in future requests to get a refreshed jwtAuthToken. If the refresh token used in a request is revoked or otherwise invalid, a valid Auth token will NOT be issued in the response headers.
  """
  refreshToken: String

  """
  A JWT token that can be used in future requests to for WooCommerce session identification
  """
  sessionToken: String

  """The user that was logged in"""
  user: User
}

"""Product manage stock enumeration"""
enum ManageStockEnum {
  FALSE
  PARENT
  TRUE
}

"""File details for a Media Item"""
type MediaDetails {
  """The filename of the mediaItem"""
  file: String

  """The height of the mediaItem"""
  height: Int

  """Meta information associated with the mediaItem"""
  meta: MediaItemMeta

  """The available sizes of the mediaItem"""
  sizes(
    """The sizes to exclude. Will take precedence over `include`."""
    exclude: [MediaItemSizeEnum]

    """The sizes to include. Can be overridden by `exclude`."""
    include: [MediaItemSizeEnum]
  ): [MediaSize]

  """The width of the mediaItem"""
  width: Int
}

"""The mediaItem type"""
type MediaItem implements ContentNode & DatabaseIdentifier & HierarchicalContentNode & Node & NodeWithAuthor & NodeWithComments & NodeWithTemplate & NodeWithTitle & UniformResourceIdentifiable {
  """Alternative text to display when resource is not displayed"""
  altText: String

  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the NodeWithAuthor type and the User type"""
  author: NodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """The caption for the resource"""
  caption(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  children(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeChildrenConnection

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the mediaItem type and the Comment type"""
  comments(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: MediaItemToCommentConnectionWhereArgs
  ): MediaItemToCommentConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """Description of the image (stored as post_content)"""
  description(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """The filesize in bytes of the resource"""
  fileSize(
    """Size of the MediaItem to return"""
    size: MediaItemSizeEnum
  ): Int

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier of the attachment object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """Details about the mediaItem"""
  mediaDetails: MediaDetails

  """The id field matches the WP_Post-&gt;ID field."""
  mediaItemId: Int! @deprecated(reason: "Deprecated in favor of the databaseId field")

  """Url of the mediaItem"""
  mediaItemUrl: String

  """Type of resource"""
  mediaType: String

  """The mime type of the mediaItem"""
  mimeType: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """The parent of the node. The parent object can be of various types"""
  parent: HierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """The sizes attribute value for an image."""
  sizes(
    """Size of the MediaItem to calculate sizes with"""
    size: MediaItemSizeEnum
  ): String

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """Url of the mediaItem"""
  sourceUrl(
    """Size of the MediaItem to return"""
    size: MediaItemSizeEnum
  ): String

  """
  The srcset attribute specifies the URL of the image to use in different situations. It is a comma separated string of urls and their widths.
  """
  srcSet(
    """Size of the MediaItem to calculate srcSet with"""
    size: MediaItemSizeEnum
  ): String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: ContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum MediaItemIdType {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG

  """Identify a media item by its source url"""
  SOURCE_URL

  """Identify a resource by the URI."""
  URI
}

"""Meta connected to a MediaItem"""
type MediaItemMeta {
  """Aperture measurement of the media item."""
  aperture: Float

  """Information about the camera used to create the media item."""
  camera: String

  """The text string description associated with the media item."""
  caption: String

  """Copyright information associated with the media item."""
  copyright: String

  """The date/time when the media was created."""
  createdTimestamp: Int

  """The original creator of the media item."""
  credit: String

  """The focal length value of the media item."""
  focalLength: Float

  """
  The ISO (International Organization for Standardization) value of the media item.
  """
  iso: Int

  """List of keywords used to describe or identfy the media item."""
  keywords: [String]

  """The vertical or horizontal aspect of the media item."""
  orientation: String

  """The shutter speed information of the media item."""
  shutterSpeed: Float

  """A useful title for the media item."""
  title: String
}

"""The size of the media item object."""
enum MediaItemSizeEnum {
  """MediaItem with the large size"""
  LARGE

  """MediaItem with the medium size"""
  MEDIUM

  """MediaItem with the medium_large size"""
  MEDIUM_LARGE

  """MediaItem with the post-thumbnail size"""
  POST_THUMBNAIL

  """MediaItem with the thumbnail size"""
  THUMBNAIL

  """MediaItem with the woocommerce_gallery_thumbnail size"""
  WOOCOMMERCE_GALLERY_THUMBNAIL

  """MediaItem with the woocommerce_single size"""
  WOOCOMMERCE_SINGLE

  """MediaItem with the woocommerce_thumbnail size"""
  WOOCOMMERCE_THUMBNAIL

  """MediaItem with the 1536x1536 size"""
  _1536X1536

  """MediaItem with the 2048x2048 size"""
  _2048X2048
}

"""The status of the media item object."""
enum MediaItemStatusEnum {
  """Objects with the auto-draft status"""
  AUTO_DRAFT

  """Objects with the inherit status"""
  INHERIT

  """Objects with the private status"""
  PRIVATE

  """Objects with the trash status"""
  TRASH
}

"""Connection between the mediaItem type and the Comment type"""
type MediaItemToCommentConnection {
  """Edges for the MediaItemToCommentConnection connection"""
  edges: [MediaItemToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type MediaItemToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the MediaItemToCommentConnection connection"""
input MediaItemToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Details of an available size for a media item"""
type MediaSize {
  """The filename of the referenced size"""
  file: String

  """The filesize of the resource"""
  fileSize: Int

  """The height of the referenced size"""
  height: String

  """The mime type of the referenced size"""
  mimeType: String

  """The referenced size name"""
  name: String

  """The url of the referenced size"""
  sourceUrl: String

  """The width of the referenced size"""
  width: String
}

"""
Menus are the containers for navigation items. Menus can be assigned to menu locations, which are typically registered by the active theme.
"""
type Menu implements DatabaseIdentifier & Node {
  """The number of items in the menu"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The globally unique identifier of the nav menu object."""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """The locations a menu is assigned to"""
  locations: [MenuLocationEnum]

  """WP ID of the nav menu."""
  menuId: Int @deprecated(reason: "Deprecated in favor of the databaseId field")

  """Connection between the Menu type and the MenuItem type"""
  menuItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: MenuToMenuItemConnectionWhereArgs
  ): MenuToMenuItemConnection

  """Display name of the menu. Equivalent to WP_Term-&gt;name."""
  name: String

  """The url friendly name of the menu. Equivalent to WP_Term-&gt;slug"""
  slug: String
}

"""
Navigation menu items are the individual items assigned to a menu. These are rendered as the links in a navigation menu.
"""
type MenuItem implements DatabaseIdentifier & Node {
  """Connection between the MenuItem type and the MenuItem type"""
  childItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: MenuItemToMenuItemConnectionWhereArgs
  ): MenuItemToMenuItemConnection

  """Connection from MenuItem to it&#039;s connected node"""
  connectedNode: MenuItemToMenuItemLinkableConnectionEdge

  """The object connected to this menu item."""
  connectedObject: MenuItemObjectUnion @deprecated(reason: "Deprecated in favor of the connectedNode field")

  """Class attribute for the menu item link"""
  cssClasses: [String]

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Description of the menu item."""
  description: String

  """The globally unique identifier of the nav menu item object."""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Label or title of the menu item."""
  label: String

  """Link relationship (XFN) of the menu item."""
  linkRelationship: String

  """The locations the menu item&#039;s Menu is assigned to"""
  locations: [MenuLocationEnum]

  """The Menu a MenuItem is part of"""
  menu: MenuItemToMenuConnectionEdge

  """WP ID of the menu item."""
  menuItemId: Int @deprecated(reason: "Deprecated in favor of the databaseId field")

  """Menu item order"""
  order: Int

  """The database id of the parent menu item or null if it is the root"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent nav menu item object."""
  parentId: ID

  """
  Path for the resource. Relative path for internal resources. Absolute path for external resources.
  """
  path: String

  """Target attribute for the menu item link."""
  target: String

  """Title attribute for the menu item link"""
  title: String

  """The uri of the resource the menu item links to"""
  uri: String

  """URL or destination of the menu item."""
  url: String
}

"""Nodes that can be linked to as Menu Items"""
interface MenuItemLinkable {
  """The unique resource identifier path"""
  databaseId: Int!

  """The unique resource identifier path"""
  id: ID!

  """The unique resource identifier path"""
  uri: String
}

"""
The Type of Identifier used to fetch a single node. Default is "ID". To be used along with the "id" field.
"""
enum MenuItemNodeIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""Deprecated in favor of MenuItemLinkeable Interface"""
union MenuItemObjectUnion = Category | Page | Post | ProductCategory | ProductTag | ReusableBlock | Tag

"""Connection between the MenuItem type and the Menu type"""
type MenuItemToMenuConnectionEdge {
  """The node of the connection, without the edges"""
  node: Menu
}

"""Connection between the MenuItem type and the MenuItem type"""
type MenuItemToMenuItemConnection {
  """Edges for the MenuItemToMenuItemConnection connection"""
  edges: [MenuItemToMenuItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [MenuItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type MenuItemToMenuItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: MenuItem
}

"""Arguments for filtering the MenuItemToMenuItemConnection connection"""
input MenuItemToMenuItemConnectionWhereArgs {
  """The database ID of the object"""
  id: Int

  """The menu location for the menu being queried"""
  location: MenuLocationEnum

  """The database ID of the parent menu object"""
  parentDatabaseId: Int

  """The ID of the parent menu object"""
  parentId: ID
}

"""Connection between the MenuItem type and the MenuItemLinkable type"""
type MenuItemToMenuItemLinkableConnectionEdge {
  """The node of the connection, without the edges"""
  node: MenuItemLinkable
}

"""Registered menu locations"""
enum MenuLocationEnum {
  """Put the menu in the hcms-menu-footer location"""
  HCMS_MENU_FOOTER

  """Put the menu in the hcms-menu-header location"""
  HCMS_MENU_HEADER

  """Put the menu in the hcms-menu-loggedin location"""
  HCMS_MENU_LOGGEDIN

  """Put the menu in the hcms-menu-loggedout location"""
  HCMS_MENU_LOGGEDOUT
}

"""
The Type of Identifier used to fetch a single node. Default is "ID". To be used along with the "id" field.
"""
enum MenuNodeIdTypeEnum {
  """Identify a menu node by the Database ID."""
  DATABASE_ID

  """Identify a menu node by the (hashed) Global ID."""
  ID

  """
  Identify a menu node by the slug of menu location to which it is assigned
  """
  LOCATION

  """Identify a menu node by its name"""
  NAME

  """Identify a menu node by its slug"""
  SLUG
}

"""Connection between the Menu type and the MenuItem type"""
type MenuToMenuItemConnection {
  """Edges for the MenuToMenuItemConnection connection"""
  edges: [MenuToMenuItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [MenuItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type MenuToMenuItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: MenuItem
}

"""Arguments for filtering the MenuToMenuItemConnection connection"""
input MenuToMenuItemConnectionWhereArgs {
  """The database ID of the object"""
  id: Int

  """The menu location for the menu being queried"""
  location: MenuLocationEnum

  """The database ID of the parent menu object"""
  parentDatabaseId: Int

  """The ID of the parent menu object"""
  parentId: ID
}

"""Extra data defined on the WC object"""
type MetaData {
  """Meta ID."""
  id: ID

  """Meta key."""
  key: String!

  """Meta value."""
  value: String
}

"""Meta data."""
input MetaDataInput {
  """Meta key."""
  key: String!

  """Meta value."""
  value: String!
}

"""The MimeType of the object"""
enum MimeTypeEnum {
  """MimeType application/java"""
  APPLICATION_JAVA

  """MimeType application/msword"""
  APPLICATION_MSWORD

  """MimeType application/octet-stream"""
  APPLICATION_OCTET_STREAM

  """MimeType application/onenote"""
  APPLICATION_ONENOTE

  """MimeType application/oxps"""
  APPLICATION_OXPS

  """MimeType application/pdf"""
  APPLICATION_PDF

  """MimeType application/rar"""
  APPLICATION_RAR

  """MimeType application/rtf"""
  APPLICATION_RTF

  """MimeType application/ttaf+xml"""
  APPLICATION_TTAF_XML

  """MimeType application/vnd.apple.keynote"""
  APPLICATION_VND_APPLE_KEYNOTE

  """MimeType application/vnd.apple.numbers"""
  APPLICATION_VND_APPLE_NUMBERS

  """MimeType application/vnd.apple.pages"""
  APPLICATION_VND_APPLE_PAGES

  """MimeType application/vnd.ms-access"""
  APPLICATION_VND_MS_ACCESS

  """MimeType application/vnd.ms-excel"""
  APPLICATION_VND_MS_EXCEL

  """MimeType application/vnd.ms-excel.addin.macroEnabled.12"""
  APPLICATION_VND_MS_EXCEL_ADDIN_MACROENABLED_12

  """MimeType application/vnd.ms-excel.sheet.binary.macroEnabled.12"""
  APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12

  """MimeType application/vnd.ms-excel.sheet.macroEnabled.12"""
  APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12

  """MimeType application/vnd.ms-excel.template.macroEnabled.12"""
  APPLICATION_VND_MS_EXCEL_TEMPLATE_MACROENABLED_12

  """MimeType application/vnd.ms-powerpoint"""
  APPLICATION_VND_MS_POWERPOINT

  """MimeType application/vnd.ms-powerpoint.addin.macroEnabled.12"""
  APPLICATION_VND_MS_POWERPOINT_ADDIN_MACROENABLED_12

  """MimeType application/vnd.ms-powerpoint.presentation.macroEnabled.12"""
  APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACROENABLED_12

  """MimeType application/vnd.ms-powerpoint.slideshow.macroEnabled.12"""
  APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACROENABLED_12

  """MimeType application/vnd.ms-powerpoint.slide.macroEnabled.12"""
  APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12

  """MimeType application/vnd.ms-powerpoint.template.macroEnabled.12"""
  APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12

  """MimeType application/vnd.ms-project"""
  APPLICATION_VND_MS_PROJECT

  """MimeType application/vnd.ms-word.document.macroEnabled.12"""
  APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12

  """MimeType application/vnd.ms-word.template.macroEnabled.12"""
  APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12

  """MimeType application/vnd.ms-write"""
  APPLICATION_VND_MS_WRITE

  """MimeType application/vnd.ms-xpsdocument"""
  APPLICATION_VND_MS_XPSDOCUMENT

  """MimeType application/vnd.oasis.opendocument.chart"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_CHART

  """MimeType application/vnd.oasis.opendocument.database"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE

  """MimeType application/vnd.oasis.opendocument.formula"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA

  """MimeType application/vnd.oasis.opendocument.graphics"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS

  """MimeType application/vnd.oasis.opendocument.presentation"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION

  """MimeType application/vnd.oasis.opendocument.spreadsheet"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET

  """MimeType application/vnd.oasis.opendocument.text"""
  APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT

  """
  MimeType application/vnd.openxmlformats-officedocument.presentationml.presentation
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION

  """
  MimeType application/vnd.openxmlformats-officedocument.presentationml.slide
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE

  """
  MimeType application/vnd.openxmlformats-officedocument.presentationml.slideshow
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW

  """
  MimeType application/vnd.openxmlformats-officedocument.presentationml.template
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE

  """
  MimeType application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET

  """
  MimeType application/vnd.openxmlformats-officedocument.spreadsheetml.template
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE

  """
  MimeType application/vnd.openxmlformats-officedocument.wordprocessingml.document
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT

  """
  MimeType application/vnd.openxmlformats-officedocument.wordprocessingml.template
  """
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE

  """MimeType application/wordperfect"""
  APPLICATION_WORDPERFECT

  """MimeType application/x-7z-compressed"""
  APPLICATION_X_7Z_COMPRESSED

  """MimeType application/x-gzip"""
  APPLICATION_X_GZIP

  """MimeType application/x-tar"""
  APPLICATION_X_TAR

  """MimeType application/zip"""
  APPLICATION_ZIP

  """MimeType audio/aac"""
  AUDIO_AAC

  """MimeType audio/flac"""
  AUDIO_FLAC

  """MimeType audio/midi"""
  AUDIO_MIDI

  """MimeType audio/mpeg"""
  AUDIO_MPEG

  """MimeType audio/ogg"""
  AUDIO_OGG

  """MimeType audio/wav"""
  AUDIO_WAV

  """MimeType audio/x-matroska"""
  AUDIO_X_MATROSKA

  """MimeType audio/x-ms-wax"""
  AUDIO_X_MS_WAX

  """MimeType audio/x-ms-wma"""
  AUDIO_X_MS_WMA

  """MimeType audio/x-realaudio"""
  AUDIO_X_REALAUDIO

  """MimeType image/bmp"""
  IMAGE_BMP

  """MimeType image/gif"""
  IMAGE_GIF

  """MimeType image/heic"""
  IMAGE_HEIC

  """MimeType image/jpeg"""
  IMAGE_JPEG

  """MimeType image/png"""
  IMAGE_PNG

  """MimeType image/svg+xml"""
  IMAGE_SVG_XML

  """MimeType image/tiff"""
  IMAGE_TIFF

  """MimeType image/vnd.microsoft.icon"""
  IMAGE_VND_MICROSOFT_ICON

  """MimeType image/webp"""
  IMAGE_WEBP

  """MimeType text/calendar"""
  TEXT_CALENDAR

  """MimeType text/css"""
  TEXT_CSS

  """MimeType text/csv"""
  TEXT_CSV

  """MimeType text/plain"""
  TEXT_PLAIN

  """MimeType text/richtext"""
  TEXT_RICHTEXT

  """MimeType text/tab-separated-values"""
  TEXT_TAB_SEPARATED_VALUES

  """MimeType text/vtt"""
  TEXT_VTT

  """MimeType video/3gpp"""
  VIDEO_3GPP

  """MimeType video/3gpp2"""
  VIDEO_3GPP2

  """MimeType video/avi"""
  VIDEO_AVI

  """MimeType video/divx"""
  VIDEO_DIVX

  """MimeType video/mp4"""
  VIDEO_MP4

  """MimeType video/mpeg"""
  VIDEO_MPEG

  """MimeType video/ogg"""
  VIDEO_OGG

  """MimeType video/quicktime"""
  VIDEO_QUICKTIME

  """MimeType video/webm"""
  VIDEO_WEBM

  """MimeType video/x-flv"""
  VIDEO_X_FLV

  """MimeType video/x-matroska"""
  VIDEO_X_MATROSKA

  """MimeType video/x-ms-asf"""
  VIDEO_X_MS_ASF

  """MimeType video/x-ms-wm"""
  VIDEO_X_MS_WM

  """MimeType video/x-ms-wmv"""
  VIDEO_X_MS_WMV

  """MimeType video/x-ms-wmx"""
  VIDEO_X_MS_WMX
}

"""An object with an ID"""
interface Node {
  """The globally unique ID for the object"""
  id: ID!
}

"""A node that can have an author assigned to it"""
interface NodeWithAuthor {
  """Connection between the NodeWithAuthor type and the User type"""
  author: NodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID
}

"""Connection between the NodeWithAuthor type and the User type"""
type NodeWithAuthorToUserConnectionEdge {
  """The node of the connection, without the edges"""
  node: User
}

"""A node that can have comments associated with it"""
interface NodeWithComments {
  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String
}

"""A node that supports the content editor"""
interface NodeWithContentEditor {
  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String
}

"""A node that can have an excerpt"""
interface NodeWithExcerpt {
  """The excerpt of the post."""
  excerpt(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String
}

"""A node that can have a featured image set"""
interface NodeWithFeaturedImage implements ContentNode & DatabaseIdentifier & Node & UniformResourceIdentifiable {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: ContentTemplate

  """The unique resource identifier path"""
  uri: String
}

"""
Connection between the NodeWithFeaturedImage type and the MediaItem type
"""
type NodeWithFeaturedImageToMediaItemConnectionEdge {
  """The node of the connection, without the edges"""
  node: MediaItem
}

"""A node that can have page attributes"""
interface NodeWithPageAttributes {
  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int
}

"""A node that can have revisions"""
interface NodeWithRevisions {
  """True if the node is a revision of another node"""
  isRevision: Boolean

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge
}

"""Connection between the NodeWithRevisions type and the ContentNode type"""
type NodeWithRevisionsToContentNodeConnectionEdge {
  """The node of the connection, without the edges"""
  node: ContentNode
}

"""A node that can have a template associated with it"""
interface NodeWithTemplate {
  """The template assigned to the node"""
  template: ContentTemplate
}

"""A node that NodeWith a title"""
interface NodeWithTitle {
  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String
}

"""A node that can have trackbacks and pingbacks"""
interface NodeWithTrackbacks {
  """Whether the pings are open or closed for this particular post."""
  pingStatus: String

  """URLs that have been pinged."""
  pinged: [String]

  """URLs queued to be pinged."""
  toPing: [String]
}

"""Offset pagination input type"""
input OffsetPagination {
  """Number of post to show per page. Passed to posts_per_page of WP_Query."""
  offset: Int

  """Number of post to show per page. Passed to posts_per_page of WP_Query."""
  size: Int
}

"""Get information about the offset pagination state"""
type OffsetPaginationPageInfo {
  """
  True if there is one or more nodes available in this connection. Eg. you can increase the offset at least by one.
  """
  hasMore: Boolean

  """True when offset can be decresed eg. offset is 0&lt;"""
  hasPrevious: Boolean

  """Total amount of nodes in this connection"""
  total: Int
}

"""A order object"""
type Order implements Node & NodeWithComments {
  """Order billing properties"""
  billing: CustomerAddress

  """Cart hash"""
  cartHash: String

  """Cart tax amount"""
  cartTax(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the Order type and the CouponLine type"""
  couponLines(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): OrderToCouponLineConnection

  """How order was created"""
  createdVia: String

  """Order currency"""
  currency: String

  """Order customer"""
  customer: Customer

  """Customer IP Address"""
  customerIpAddress: String

  """Customer note"""
  customerNote: String

  """Customer User Agent"""
  customerUserAgent: String

  """The ID of the order in the database"""
  databaseId: Int

  """Date order was created"""
  date: String

  """Date order was completed"""
  dateCompleted: String

  """Date order was paid"""
  datePaid: String

  """Discount tax amount"""
  discountTax(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Discount total amount"""
  discountTotal(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Order type and the DownloadableItem type"""
  downloadableItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: OrderToDownloadableItemConnectionWhereArgs
  ): OrderToDownloadableItemConnection

  """Connection between the Order type and the FeeLine type"""
  feeLines(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): OrderToFeeLineConnection

  """Order has a billing address?"""
  hasBillingAddress: Boolean

  """If order contains a downloadable product"""
  hasDownloadableItem: Boolean

  """Order has a shipping address?"""
  hasShippingAddress: Boolean

  """The globally unique identifier for the order"""
  id: ID!

  """Is product download is permitted"""
  isDownloadPermitted: Boolean

  """Connection between the Order type and the LineItem type"""
  lineItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): OrderToLineItemConnection

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date order was last updated"""
  modified: String

  """If order needs payment"""
  needsPayment: Boolean

  """If order needs processing before it can be completed"""
  needsProcessing: Boolean

  """If order needs shipping address"""
  needsShippingAddress: Boolean

  """Order key"""
  orderKey: String

  """Connection between the Order type and the Comment type"""
  orderNotes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: OrderToCommentConnectionWhereArgs
  ): OrderToCommentConnection

  """Order number"""
  orderNumber: String

  """Order version"""
  orderVersion: String

  """Parent order"""
  parent: Order

  """Payment method"""
  paymentMethod: String

  """Payment method title"""
  paymentMethodTitle: String

  """Prices include taxes?"""
  pricesIncludeTax: Boolean

  """Connection between the Order type and the Refund type"""
  refunds(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: OrderToRefundConnectionWhereArgs
  ): OrderToRefundConnection

  """Order shipping properties"""
  shipping: CustomerAddress

  """Order customer"""
  shippingAddressMapUrl: String

  """Connection between the Order type and the ShippingLine type"""
  shippingLines(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): OrderToShippingLineConnection

  """Shipping tax amount"""
  shippingTax(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Shipping total amount"""
  shippingTotal(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Order status"""
  status: OrderStatusEnum

  """Order subtotal"""
  subtotal(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Order type and the TaxLine type"""
  taxLines(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): OrderToTaxLineConnection

  """Order grand total"""
  total(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Order taxes"""
  totalTax(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Transaction ID"""
  transactionId: String
}

"""The cardinality of the connection order"""
enum OrderEnum {
  """Sort the query result set in an ascending order"""
  ASC

  """Sort the query result set in a descending order"""
  DESC
}

"""The Type of Identifier used to fetch a single Order. Default is ID."""
enum OrderIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """Order number."""
  ORDER_NUMBER
}

"""Order item tax statement"""
type OrderItemTax {
  """Amount taxed"""
  amount: Float

  """Subtotal"""
  subtotal: Float

  """Tax line connected to this statement"""
  taxLine: TaxLine

  """Order item ID for tax line connected to this statement"""
  taxLineId: Int!

  """Total"""
  total: Float
}

"""Order status enumeration"""
enum OrderStatusEnum {
  """Cancelled"""
  CANCELLED

  """Draft"""
  CHECKOUT_DRAFT

  """Completed"""
  COMPLETED

  """Failed"""
  FAILED

  """On hold"""
  ON_HOLD

  """Pending payment"""
  PENDING

  """Processing"""
  PROCESSING

  """Refunded"""
  REFUNDED
}

"""Connection between the Order type and the Comment type"""
type OrderToCommentConnection {
  """Edges for the OrderToCommentConnection connection"""
  edges: [OrderToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """Is this a customer note?"""
  isCustomerNote: Boolean

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the OrderToCommentConnection connection"""
input OrderToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Connection between the Order type and the CouponLine type"""
type OrderToCouponLineConnection {
  """Edges for the OrderToCouponLineConnection connection"""
  edges: [OrderToCouponLineConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [CouponLine]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToCouponLineConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: CouponLine
}

"""Connection between the Order type and the DownloadableItem type"""
type OrderToDownloadableItemConnection {
  """Edges for the OrderToDownloadableItemConnection connection"""
  edges: [OrderToDownloadableItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [DownloadableItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToDownloadableItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: DownloadableItem
}

"""
Arguments for filtering the OrderToDownloadableItemConnection connection
"""
input OrderToDownloadableItemConnectionWhereArgs {
  """Limit results to downloadable items that can be downloaded now."""
  active: Boolean

  """Limit results to downloadable items that are expired."""
  expired: Boolean

  """Limit results to downloadable items that have downloads remaining."""
  hasDownloadsRemaining: Boolean
}

"""Connection between the Order type and the FeeLine type"""
type OrderToFeeLineConnection {
  """Edges for the OrderToFeeLineConnection connection"""
  edges: [OrderToFeeLineConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [FeeLine]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToFeeLineConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: FeeLine
}

"""Connection between the Order type and the LineItem type"""
type OrderToLineItemConnection {
  """Edges for the OrderToLineItemConnection connection"""
  edges: [OrderToLineItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [LineItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToLineItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: LineItem
}

"""Connection between the Order type and the Refund type"""
type OrderToRefundConnection {
  """Edges for the OrderToRefundConnection connection"""
  edges: [OrderToRefundConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Refund]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToRefundConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Refund
}

"""Arguments for filtering the OrderToRefundConnection connection"""
input OrderToRefundConnectionWhereArgs {
  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to refunds from a specific group of order IDs."""
  orderIn: [Int]

  """What paramater to use to order the objects by."""
  orderby: [PostTypeOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit results to those matching a string."""
  search: String

  """Limit result set to refunds assigned a specific status."""
  statuses: [String]
}

"""Connection between the Order type and the ShippingLine type"""
type OrderToShippingLineConnection {
  """Edges for the OrderToShippingLineConnection connection"""
  edges: [OrderToShippingLineConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ShippingLine]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToShippingLineConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ShippingLine
}

"""Connection between the Order type and the TaxLine type"""
type OrderToTaxLineConnection {
  """Edges for the OrderToTaxLineConnection connection"""
  edges: [OrderToTaxLineConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [TaxLine]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type OrderToTaxLineConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: TaxLine
}

"""Fields to order the Orders connection by"""
enum OrdersOrderByEnum {
  """Order by publish date"""
  DATE

  """Order by date the order was completed"""
  DATE_COMPLETED

  """Order by date the order was paid"""
  DATE_PAID

  """Order by order discount amount"""
  DISCOUNT

  """Preserve the ID order given in the IN array"""
  IN

  """Order by the menu order value"""
  MENU_ORDER

  """Order by last modified date"""
  MODIFIED

  """Preserve slug order given in the NAME_IN array"""
  NAME_IN

  """Order by order key"""
  ORDER_KEY

  """Order by parent ID"""
  PARENT

  """Order by slug"""
  SLUG

  """Order by order total"""
  TAX

  """Order by order total"""
  TOTAL
}

"""Options for ordering the connection"""
input OrdersOrderbyInput {
  field: OrdersOrderByEnum!
  order: OrderEnum
}

"""The paArchitecto type"""
type PaArchitecto implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paArchitecto type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaArchitectoToContentNodeConnectionWhereArgs
  ): PaArchitectoToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paArchitectoId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaArchitecto type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaArchitectoToProductConnectionWhereArgs
  ): PaArchitectoToProductConnection

  """The Yoast SEO data of the Product Architecto taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paArchitecto type and the Taxonomy type"""
  taxonomy: PaArchitectoToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaArchitecto type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaArchitectoToProductVariationConnectionWhereArgs
  ): PaArchitectoToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaArchitectoIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paArchitecto type and the ContentNode type"""
type PaArchitectoToContentNodeConnection {
  """Edges for the PaArchitectoToContentNodeConnection connection"""
  edges: [PaArchitectoToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaArchitectoToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaArchitectoToContentNodeConnection connection
"""
input PaArchitectoToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaArchitecto type and the Product type"""
type PaArchitectoToProductConnection {
  """Edges for the PaArchitectoToProductConnection connection"""
  edges: [PaArchitectoToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaArchitectoToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaArchitectoToProductConnection connection"""
input PaArchitectoToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaArchitecto type and the ProductVariation type"""
type PaArchitectoToProductVariationConnection {
  """Edges for the PaArchitectoToProductVariationConnection connection"""
  edges: [PaArchitectoToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaArchitectoToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaArchitectoToProductVariationConnection connection
"""
input PaArchitectoToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paArchitecto type and the Taxonomy type"""
type PaArchitectoToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paAspernatur type"""
type PaAspernatur implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paAspernatur type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaAspernaturToContentNodeConnectionWhereArgs
  ): PaAspernaturToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paAspernaturId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaAspernatur type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaAspernaturToProductConnectionWhereArgs
  ): PaAspernaturToProductConnection

  """The Yoast SEO data of the Product Aspernatur taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paAspernatur type and the Taxonomy type"""
  taxonomy: PaAspernaturToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaAspernatur type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaAspernaturToProductVariationConnectionWhereArgs
  ): PaAspernaturToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaAspernaturIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paAspernatur type and the ContentNode type"""
type PaAspernaturToContentNodeConnection {
  """Edges for the PaAspernaturToContentNodeConnection connection"""
  edges: [PaAspernaturToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaAspernaturToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaAspernaturToContentNodeConnection connection
"""
input PaAspernaturToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaAspernatur type and the Product type"""
type PaAspernaturToProductConnection {
  """Edges for the PaAspernaturToProductConnection connection"""
  edges: [PaAspernaturToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaAspernaturToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaAspernaturToProductConnection connection"""
input PaAspernaturToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaAspernatur type and the ProductVariation type"""
type PaAspernaturToProductVariationConnection {
  """Edges for the PaAspernaturToProductVariationConnection connection"""
  edges: [PaAspernaturToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaAspernaturToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaAspernaturToProductVariationConnection connection
"""
input PaAspernaturToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paAspernatur type and the Taxonomy type"""
type PaAspernaturToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paAtque type"""
type PaAtque implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paAtque type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaAtqueToContentNodeConnectionWhereArgs
  ): PaAtqueToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paAtqueId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaAtque type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaAtqueToProductConnectionWhereArgs
  ): PaAtqueToProductConnection

  """The Yoast SEO data of the Product Atque taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paAtque type and the Taxonomy type"""
  taxonomy: PaAtqueToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaAtque type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaAtqueToProductVariationConnectionWhereArgs
  ): PaAtqueToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaAtqueIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paAtque type and the ContentNode type"""
type PaAtqueToContentNodeConnection {
  """Edges for the PaAtqueToContentNodeConnection connection"""
  edges: [PaAtqueToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaAtqueToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaAtqueToContentNodeConnection connection"""
input PaAtqueToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaAtque type and the Product type"""
type PaAtqueToProductConnection {
  """Edges for the PaAtqueToProductConnection connection"""
  edges: [PaAtqueToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaAtqueToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaAtqueToProductConnection connection"""
input PaAtqueToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaAtque type and the ProductVariation type"""
type PaAtqueToProductVariationConnection {
  """Edges for the PaAtqueToProductVariationConnection connection"""
  edges: [PaAtqueToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaAtqueToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaAtqueToProductVariationConnection connection
"""
input PaAtqueToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paAtque type and the Taxonomy type"""
type PaAtqueToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paColor type"""
type PaColor implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paColor type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaColorToContentNodeConnectionWhereArgs
  ): PaColorToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paColorId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaColor type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaColorToProductConnectionWhereArgs
  ): PaColorToProductConnection

  """The Yoast SEO data of the Product Color taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paColor type and the Taxonomy type"""
  taxonomy: PaColorToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaColor type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaColorToProductVariationConnectionWhereArgs
  ): PaColorToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaColorIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paColor type and the ContentNode type"""
type PaColorToContentNodeConnection {
  """Edges for the PaColorToContentNodeConnection connection"""
  edges: [PaColorToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaColorToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaColorToContentNodeConnection connection"""
input PaColorToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaColor type and the Product type"""
type PaColorToProductConnection {
  """Edges for the PaColorToProductConnection connection"""
  edges: [PaColorToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaColorToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaColorToProductConnection connection"""
input PaColorToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaColor type and the ProductVariation type"""
type PaColorToProductVariationConnection {
  """Edges for the PaColorToProductVariationConnection connection"""
  edges: [PaColorToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaColorToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaColorToProductVariationConnection connection
"""
input PaColorToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paColor type and the Taxonomy type"""
type PaColorToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paConsequatur type"""
type PaConsequatur implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paConsequatur type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaConsequaturToContentNodeConnectionWhereArgs
  ): PaConsequaturToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paConsequaturId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaConsequatur type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaConsequaturToProductConnectionWhereArgs
  ): PaConsequaturToProductConnection

  """The Yoast SEO data of the Product Consequatur taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paConsequatur type and the Taxonomy type"""
  taxonomy: PaConsequaturToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """
  Connection between the PaConsequatur type and the ProductVariation type
  """
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaConsequaturToProductVariationConnectionWhereArgs
  ): PaConsequaturToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaConsequaturIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paConsequatur type and the ContentNode type"""
type PaConsequaturToContentNodeConnection {
  """Edges for the PaConsequaturToContentNodeConnection connection"""
  edges: [PaConsequaturToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaConsequaturToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaConsequaturToContentNodeConnection connection
"""
input PaConsequaturToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaConsequatur type and the Product type"""
type PaConsequaturToProductConnection {
  """Edges for the PaConsequaturToProductConnection connection"""
  edges: [PaConsequaturToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaConsequaturToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the PaConsequaturToProductConnection connection
"""
input PaConsequaturToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the PaConsequatur type and the ProductVariation type
"""
type PaConsequaturToProductVariationConnection {
  """Edges for the PaConsequaturToProductVariationConnection connection"""
  edges: [PaConsequaturToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaConsequaturToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaConsequaturToProductVariationConnection connection
"""
input PaConsequaturToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paConsequatur type and the Taxonomy type"""
type PaConsequaturToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paCum type"""
type PaCum implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paCum type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaCumToContentNodeConnectionWhereArgs
  ): PaCumToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paCumId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaCum type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaCumToProductConnectionWhereArgs
  ): PaCumToProductConnection

  """The Yoast SEO data of the Product Cum taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paCum type and the Taxonomy type"""
  taxonomy: PaCumToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaCum type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaCumToProductVariationConnectionWhereArgs
  ): PaCumToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaCumIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paCum type and the ContentNode type"""
type PaCumToContentNodeConnection {
  """Edges for the PaCumToContentNodeConnection connection"""
  edges: [PaCumToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaCumToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaCumToContentNodeConnection connection"""
input PaCumToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaCum type and the Product type"""
type PaCumToProductConnection {
  """Edges for the PaCumToProductConnection connection"""
  edges: [PaCumToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaCumToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaCumToProductConnection connection"""
input PaCumToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaCum type and the ProductVariation type"""
type PaCumToProductVariationConnection {
  """Edges for the PaCumToProductVariationConnection connection"""
  edges: [PaCumToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaCumToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaCumToProductVariationConnection connection
"""
input PaCumToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paCum type and the Taxonomy type"""
type PaCumToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paDolor type"""
type PaDolor implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paDolor type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDolorToContentNodeConnectionWhereArgs
  ): PaDolorToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paDolorId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaDolor type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDolorToProductConnectionWhereArgs
  ): PaDolorToProductConnection

  """The Yoast SEO data of the Product Dolor taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paDolor type and the Taxonomy type"""
  taxonomy: PaDolorToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaDolor type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDolorToProductVariationConnectionWhereArgs
  ): PaDolorToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaDolorIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paDolor type and the ContentNode type"""
type PaDolorToContentNodeConnection {
  """Edges for the PaDolorToContentNodeConnection connection"""
  edges: [PaDolorToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDolorToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaDolorToContentNodeConnection connection"""
input PaDolorToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaDolor type and the Product type"""
type PaDolorToProductConnection {
  """Edges for the PaDolorToProductConnection connection"""
  edges: [PaDolorToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDolorToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaDolorToProductConnection connection"""
input PaDolorToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaDolor type and the ProductVariation type"""
type PaDolorToProductVariationConnection {
  """Edges for the PaDolorToProductVariationConnection connection"""
  edges: [PaDolorToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDolorToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaDolorToProductVariationConnection connection
"""
input PaDolorToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paDolor type and the Taxonomy type"""
type PaDolorToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paDoloremque type"""
type PaDoloremque implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paDoloremque type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDoloremqueToContentNodeConnectionWhereArgs
  ): PaDoloremqueToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paDoloremqueId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaDoloremque type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDoloremqueToProductConnectionWhereArgs
  ): PaDoloremqueToProductConnection

  """The Yoast SEO data of the Product Doloremque taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paDoloremque type and the Taxonomy type"""
  taxonomy: PaDoloremqueToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaDoloremque type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDoloremqueToProductVariationConnectionWhereArgs
  ): PaDoloremqueToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaDoloremqueIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paDoloremque type and the ContentNode type"""
type PaDoloremqueToContentNodeConnection {
  """Edges for the PaDoloremqueToContentNodeConnection connection"""
  edges: [PaDoloremqueToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDoloremqueToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaDoloremqueToContentNodeConnection connection
"""
input PaDoloremqueToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaDoloremque type and the Product type"""
type PaDoloremqueToProductConnection {
  """Edges for the PaDoloremqueToProductConnection connection"""
  edges: [PaDoloremqueToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDoloremqueToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaDoloremqueToProductConnection connection"""
input PaDoloremqueToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaDoloremque type and the ProductVariation type"""
type PaDoloremqueToProductVariationConnection {
  """Edges for the PaDoloremqueToProductVariationConnection connection"""
  edges: [PaDoloremqueToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDoloremqueToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaDoloremqueToProductVariationConnection connection
"""
input PaDoloremqueToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paDoloremque type and the Taxonomy type"""
type PaDoloremqueToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paDolores type"""
type PaDolores implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paDolores type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDoloresToContentNodeConnectionWhereArgs
  ): PaDoloresToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paDoloresId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaDolores type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDoloresToProductConnectionWhereArgs
  ): PaDoloresToProductConnection

  """The Yoast SEO data of the Product Dolores taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paDolores type and the Taxonomy type"""
  taxonomy: PaDoloresToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaDolores type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDoloresToProductVariationConnectionWhereArgs
  ): PaDoloresToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaDoloresIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paDolores type and the ContentNode type"""
type PaDoloresToContentNodeConnection {
  """Edges for the PaDoloresToContentNodeConnection connection"""
  edges: [PaDoloresToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDoloresToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaDoloresToContentNodeConnection connection
"""
input PaDoloresToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaDolores type and the Product type"""
type PaDoloresToProductConnection {
  """Edges for the PaDoloresToProductConnection connection"""
  edges: [PaDoloresToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDoloresToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaDoloresToProductConnection connection"""
input PaDoloresToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaDolores type and the ProductVariation type"""
type PaDoloresToProductVariationConnection {
  """Edges for the PaDoloresToProductVariationConnection connection"""
  edges: [PaDoloresToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDoloresToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaDoloresToProductVariationConnection connection
"""
input PaDoloresToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paDolores type and the Taxonomy type"""
type PaDoloresToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paDolorum type"""
type PaDolorum implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paDolorum type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDolorumToContentNodeConnectionWhereArgs
  ): PaDolorumToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paDolorumId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaDolorum type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDolorumToProductConnectionWhereArgs
  ): PaDolorumToProductConnection

  """The Yoast SEO data of the Product Dolorum taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paDolorum type and the Taxonomy type"""
  taxonomy: PaDolorumToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaDolorum type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaDolorumToProductVariationConnectionWhereArgs
  ): PaDolorumToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaDolorumIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paDolorum type and the ContentNode type"""
type PaDolorumToContentNodeConnection {
  """Edges for the PaDolorumToContentNodeConnection connection"""
  edges: [PaDolorumToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDolorumToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaDolorumToContentNodeConnection connection
"""
input PaDolorumToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaDolorum type and the Product type"""
type PaDolorumToProductConnection {
  """Edges for the PaDolorumToProductConnection connection"""
  edges: [PaDolorumToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDolorumToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaDolorumToProductConnection connection"""
input PaDolorumToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaDolorum type and the ProductVariation type"""
type PaDolorumToProductVariationConnection {
  """Edges for the PaDolorumToProductVariationConnection connection"""
  edges: [PaDolorumToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaDolorumToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaDolorumToProductVariationConnection connection
"""
input PaDolorumToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paDolorum type and the Taxonomy type"""
type PaDolorumToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paEa type"""
type PaEa implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paEa type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEaToContentNodeConnectionWhereArgs
  ): PaEaToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paEaId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaEa type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEaToProductConnectionWhereArgs
  ): PaEaToProductConnection

  """The Yoast SEO data of the Product Ea taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paEa type and the Taxonomy type"""
  taxonomy: PaEaToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaEa type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEaToProductVariationConnectionWhereArgs
  ): PaEaToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaEaIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paEa type and the ContentNode type"""
type PaEaToContentNodeConnection {
  """Edges for the PaEaToContentNodeConnection connection"""
  edges: [PaEaToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEaToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaEaToContentNodeConnection connection"""
input PaEaToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaEa type and the Product type"""
type PaEaToProductConnection {
  """Edges for the PaEaToProductConnection connection"""
  edges: [PaEaToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEaToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaEaToProductConnection connection"""
input PaEaToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaEa type and the ProductVariation type"""
type PaEaToProductVariationConnection {
  """Edges for the PaEaToProductVariationConnection connection"""
  edges: [PaEaToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEaToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaEaToProductVariationConnection connection
"""
input PaEaToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paEa type and the Taxonomy type"""
type PaEaToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paEos type"""
type PaEos implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paEos type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEosToContentNodeConnectionWhereArgs
  ): PaEosToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paEosId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaEos type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEosToProductConnectionWhereArgs
  ): PaEosToProductConnection

  """The Yoast SEO data of the Product Eos taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paEos type and the Taxonomy type"""
  taxonomy: PaEosToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaEos type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEosToProductVariationConnectionWhereArgs
  ): PaEosToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaEosIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paEos type and the ContentNode type"""
type PaEosToContentNodeConnection {
  """Edges for the PaEosToContentNodeConnection connection"""
  edges: [PaEosToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEosToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaEosToContentNodeConnection connection"""
input PaEosToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaEos type and the Product type"""
type PaEosToProductConnection {
  """Edges for the PaEosToProductConnection connection"""
  edges: [PaEosToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEosToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaEosToProductConnection connection"""
input PaEosToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaEos type and the ProductVariation type"""
type PaEosToProductVariationConnection {
  """Edges for the PaEosToProductVariationConnection connection"""
  edges: [PaEosToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEosToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaEosToProductVariationConnection connection
"""
input PaEosToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paEos type and the Taxonomy type"""
type PaEosToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paEt type"""
type PaEt implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paEt type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEtToContentNodeConnectionWhereArgs
  ): PaEtToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paEtId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaEt type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEtToProductConnectionWhereArgs
  ): PaEtToProductConnection

  """The Yoast SEO data of the Product Et taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paEt type and the Taxonomy type"""
  taxonomy: PaEtToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaEt type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaEtToProductVariationConnectionWhereArgs
  ): PaEtToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaEtIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paEt type and the ContentNode type"""
type PaEtToContentNodeConnection {
  """Edges for the PaEtToContentNodeConnection connection"""
  edges: [PaEtToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEtToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaEtToContentNodeConnection connection"""
input PaEtToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaEt type and the Product type"""
type PaEtToProductConnection {
  """Edges for the PaEtToProductConnection connection"""
  edges: [PaEtToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEtToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaEtToProductConnection connection"""
input PaEtToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaEt type and the ProductVariation type"""
type PaEtToProductVariationConnection {
  """Edges for the PaEtToProductVariationConnection connection"""
  edges: [PaEtToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaEtToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaEtToProductVariationConnection connection
"""
input PaEtToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paEt type and the Taxonomy type"""
type PaEtToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paExcepturi type"""
type PaExcepturi implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paExcepturi type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaExcepturiToContentNodeConnectionWhereArgs
  ): PaExcepturiToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paExcepturiId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaExcepturi type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaExcepturiToProductConnectionWhereArgs
  ): PaExcepturiToProductConnection

  """The Yoast SEO data of the Product Excepturi taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paExcepturi type and the Taxonomy type"""
  taxonomy: PaExcepturiToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaExcepturi type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaExcepturiToProductVariationConnectionWhereArgs
  ): PaExcepturiToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaExcepturiIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paExcepturi type and the ContentNode type"""
type PaExcepturiToContentNodeConnection {
  """Edges for the PaExcepturiToContentNodeConnection connection"""
  edges: [PaExcepturiToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaExcepturiToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaExcepturiToContentNodeConnection connection
"""
input PaExcepturiToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaExcepturi type and the Product type"""
type PaExcepturiToProductConnection {
  """Edges for the PaExcepturiToProductConnection connection"""
  edges: [PaExcepturiToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaExcepturiToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaExcepturiToProductConnection connection"""
input PaExcepturiToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaExcepturi type and the ProductVariation type"""
type PaExcepturiToProductVariationConnection {
  """Edges for the PaExcepturiToProductVariationConnection connection"""
  edges: [PaExcepturiToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaExcepturiToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaExcepturiToProductVariationConnection connection
"""
input PaExcepturiToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paExcepturi type and the Taxonomy type"""
type PaExcepturiToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paExplicabo type"""
type PaExplicabo implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paExplicabo type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaExplicaboToContentNodeConnectionWhereArgs
  ): PaExplicaboToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paExplicaboId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaExplicabo type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaExplicaboToProductConnectionWhereArgs
  ): PaExplicaboToProductConnection

  """The Yoast SEO data of the Product Explicabo taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paExplicabo type and the Taxonomy type"""
  taxonomy: PaExplicaboToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaExplicabo type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaExplicaboToProductVariationConnectionWhereArgs
  ): PaExplicaboToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaExplicaboIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paExplicabo type and the ContentNode type"""
type PaExplicaboToContentNodeConnection {
  """Edges for the PaExplicaboToContentNodeConnection connection"""
  edges: [PaExplicaboToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaExplicaboToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaExplicaboToContentNodeConnection connection
"""
input PaExplicaboToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaExplicabo type and the Product type"""
type PaExplicaboToProductConnection {
  """Edges for the PaExplicaboToProductConnection connection"""
  edges: [PaExplicaboToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaExplicaboToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaExplicaboToProductConnection connection"""
input PaExplicaboToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaExplicabo type and the ProductVariation type"""
type PaExplicaboToProductVariationConnection {
  """Edges for the PaExplicaboToProductVariationConnection connection"""
  edges: [PaExplicaboToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaExplicaboToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaExplicaboToProductVariationConnection connection
"""
input PaExplicaboToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paExplicabo type and the Taxonomy type"""
type PaExplicaboToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paFacere type"""
type PaFacere implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paFacere type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaFacereToContentNodeConnectionWhereArgs
  ): PaFacereToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paFacereId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaFacere type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaFacereToProductConnectionWhereArgs
  ): PaFacereToProductConnection

  """The Yoast SEO data of the Product Facere taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paFacere type and the Taxonomy type"""
  taxonomy: PaFacereToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaFacere type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaFacereToProductVariationConnectionWhereArgs
  ): PaFacereToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaFacereIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paFacere type and the ContentNode type"""
type PaFacereToContentNodeConnection {
  """Edges for the PaFacereToContentNodeConnection connection"""
  edges: [PaFacereToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaFacereToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaFacereToContentNodeConnection connection"""
input PaFacereToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaFacere type and the Product type"""
type PaFacereToProductConnection {
  """Edges for the PaFacereToProductConnection connection"""
  edges: [PaFacereToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaFacereToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaFacereToProductConnection connection"""
input PaFacereToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaFacere type and the ProductVariation type"""
type PaFacereToProductVariationConnection {
  """Edges for the PaFacereToProductVariationConnection connection"""
  edges: [PaFacereToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaFacereToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaFacereToProductVariationConnection connection
"""
input PaFacereToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paFacere type and the Taxonomy type"""
type PaFacereToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paHarum type"""
type PaHarum implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paHarum type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaHarumToContentNodeConnectionWhereArgs
  ): PaHarumToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paHarumId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaHarum type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaHarumToProductConnectionWhereArgs
  ): PaHarumToProductConnection

  """The Yoast SEO data of the Product Harum taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paHarum type and the Taxonomy type"""
  taxonomy: PaHarumToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaHarum type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaHarumToProductVariationConnectionWhereArgs
  ): PaHarumToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaHarumIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paHarum type and the ContentNode type"""
type PaHarumToContentNodeConnection {
  """Edges for the PaHarumToContentNodeConnection connection"""
  edges: [PaHarumToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaHarumToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaHarumToContentNodeConnection connection"""
input PaHarumToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaHarum type and the Product type"""
type PaHarumToProductConnection {
  """Edges for the PaHarumToProductConnection connection"""
  edges: [PaHarumToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaHarumToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaHarumToProductConnection connection"""
input PaHarumToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaHarum type and the ProductVariation type"""
type PaHarumToProductVariationConnection {
  """Edges for the PaHarumToProductVariationConnection connection"""
  edges: [PaHarumToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaHarumToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaHarumToProductVariationConnection connection
"""
input PaHarumToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paHarum type and the Taxonomy type"""
type PaHarumToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paIncidunt type"""
type PaIncidunt implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paIncidunt type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaInciduntToContentNodeConnectionWhereArgs
  ): PaInciduntToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paInciduntId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaIncidunt type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaInciduntToProductConnectionWhereArgs
  ): PaInciduntToProductConnection

  """The Yoast SEO data of the Product Incidunt taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paIncidunt type and the Taxonomy type"""
  taxonomy: PaInciduntToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaIncidunt type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaInciduntToProductVariationConnectionWhereArgs
  ): PaInciduntToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaInciduntIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paIncidunt type and the ContentNode type"""
type PaInciduntToContentNodeConnection {
  """Edges for the PaInciduntToContentNodeConnection connection"""
  edges: [PaInciduntToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaInciduntToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaInciduntToContentNodeConnection connection
"""
input PaInciduntToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaIncidunt type and the Product type"""
type PaInciduntToProductConnection {
  """Edges for the PaInciduntToProductConnection connection"""
  edges: [PaInciduntToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaInciduntToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaInciduntToProductConnection connection"""
input PaInciduntToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaIncidunt type and the ProductVariation type"""
type PaInciduntToProductVariationConnection {
  """Edges for the PaInciduntToProductVariationConnection connection"""
  edges: [PaInciduntToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaInciduntToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaInciduntToProductVariationConnection connection
"""
input PaInciduntToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paIncidunt type and the Taxonomy type"""
type PaInciduntToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paIpsam type"""
type PaIpsam implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paIpsam type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaIpsamToContentNodeConnectionWhereArgs
  ): PaIpsamToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paIpsamId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaIpsam type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaIpsamToProductConnectionWhereArgs
  ): PaIpsamToProductConnection

  """The Yoast SEO data of the Product Ipsam taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paIpsam type and the Taxonomy type"""
  taxonomy: PaIpsamToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaIpsam type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaIpsamToProductVariationConnectionWhereArgs
  ): PaIpsamToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaIpsamIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paIpsam type and the ContentNode type"""
type PaIpsamToContentNodeConnection {
  """Edges for the PaIpsamToContentNodeConnection connection"""
  edges: [PaIpsamToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaIpsamToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaIpsamToContentNodeConnection connection"""
input PaIpsamToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaIpsam type and the Product type"""
type PaIpsamToProductConnection {
  """Edges for the PaIpsamToProductConnection connection"""
  edges: [PaIpsamToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaIpsamToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaIpsamToProductConnection connection"""
input PaIpsamToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaIpsam type and the ProductVariation type"""
type PaIpsamToProductVariationConnection {
  """Edges for the PaIpsamToProductVariationConnection connection"""
  edges: [PaIpsamToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaIpsamToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaIpsamToProductVariationConnection connection
"""
input PaIpsamToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paIpsam type and the Taxonomy type"""
type PaIpsamToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paIusto type"""
type PaIusto implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paIusto type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaIustoToContentNodeConnectionWhereArgs
  ): PaIustoToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paIustoId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaIusto type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaIustoToProductConnectionWhereArgs
  ): PaIustoToProductConnection

  """The Yoast SEO data of the Product Iusto taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paIusto type and the Taxonomy type"""
  taxonomy: PaIustoToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaIusto type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaIustoToProductVariationConnectionWhereArgs
  ): PaIustoToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaIustoIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paIusto type and the ContentNode type"""
type PaIustoToContentNodeConnection {
  """Edges for the PaIustoToContentNodeConnection connection"""
  edges: [PaIustoToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaIustoToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaIustoToContentNodeConnection connection"""
input PaIustoToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaIusto type and the Product type"""
type PaIustoToProductConnection {
  """Edges for the PaIustoToProductConnection connection"""
  edges: [PaIustoToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaIustoToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaIustoToProductConnection connection"""
input PaIustoToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaIusto type and the ProductVariation type"""
type PaIustoToProductVariationConnection {
  """Edges for the PaIustoToProductVariationConnection connection"""
  edges: [PaIustoToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaIustoToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaIustoToProductVariationConnection connection
"""
input PaIustoToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paIusto type and the Taxonomy type"""
type PaIustoToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paLaudantium type"""
type PaLaudantium implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paLaudantium type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaLaudantiumToContentNodeConnectionWhereArgs
  ): PaLaudantiumToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paLaudantiumId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaLaudantium type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaLaudantiumToProductConnectionWhereArgs
  ): PaLaudantiumToProductConnection

  """The Yoast SEO data of the Product Laudantium taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paLaudantium type and the Taxonomy type"""
  taxonomy: PaLaudantiumToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaLaudantium type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaLaudantiumToProductVariationConnectionWhereArgs
  ): PaLaudantiumToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaLaudantiumIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paLaudantium type and the ContentNode type"""
type PaLaudantiumToContentNodeConnection {
  """Edges for the PaLaudantiumToContentNodeConnection connection"""
  edges: [PaLaudantiumToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaLaudantiumToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaLaudantiumToContentNodeConnection connection
"""
input PaLaudantiumToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaLaudantium type and the Product type"""
type PaLaudantiumToProductConnection {
  """Edges for the PaLaudantiumToProductConnection connection"""
  edges: [PaLaudantiumToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaLaudantiumToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaLaudantiumToProductConnection connection"""
input PaLaudantiumToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaLaudantium type and the ProductVariation type"""
type PaLaudantiumToProductVariationConnection {
  """Edges for the PaLaudantiumToProductVariationConnection connection"""
  edges: [PaLaudantiumToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaLaudantiumToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaLaudantiumToProductVariationConnection connection
"""
input PaLaudantiumToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paLaudantium type and the Taxonomy type"""
type PaLaudantiumToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paMagnam type"""
type PaMagnam implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paMagnam type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMagnamToContentNodeConnectionWhereArgs
  ): PaMagnamToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paMagnamId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaMagnam type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMagnamToProductConnectionWhereArgs
  ): PaMagnamToProductConnection

  """The Yoast SEO data of the Product Magnam taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paMagnam type and the Taxonomy type"""
  taxonomy: PaMagnamToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaMagnam type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMagnamToProductVariationConnectionWhereArgs
  ): PaMagnamToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaMagnamIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paMagnam type and the ContentNode type"""
type PaMagnamToContentNodeConnection {
  """Edges for the PaMagnamToContentNodeConnection connection"""
  edges: [PaMagnamToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMagnamToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaMagnamToContentNodeConnection connection"""
input PaMagnamToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaMagnam type and the Product type"""
type PaMagnamToProductConnection {
  """Edges for the PaMagnamToProductConnection connection"""
  edges: [PaMagnamToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMagnamToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaMagnamToProductConnection connection"""
input PaMagnamToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaMagnam type and the ProductVariation type"""
type PaMagnamToProductVariationConnection {
  """Edges for the PaMagnamToProductVariationConnection connection"""
  edges: [PaMagnamToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMagnamToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaMagnamToProductVariationConnection connection
"""
input PaMagnamToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paMagnam type and the Taxonomy type"""
type PaMagnamToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paMagni type"""
type PaMagni implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paMagni type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMagniToContentNodeConnectionWhereArgs
  ): PaMagniToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paMagniId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaMagni type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMagniToProductConnectionWhereArgs
  ): PaMagniToProductConnection

  """The Yoast SEO data of the Product Magni taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paMagni type and the Taxonomy type"""
  taxonomy: PaMagniToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaMagni type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMagniToProductVariationConnectionWhereArgs
  ): PaMagniToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaMagniIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paMagni type and the ContentNode type"""
type PaMagniToContentNodeConnection {
  """Edges for the PaMagniToContentNodeConnection connection"""
  edges: [PaMagniToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMagniToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaMagniToContentNodeConnection connection"""
input PaMagniToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaMagni type and the Product type"""
type PaMagniToProductConnection {
  """Edges for the PaMagniToProductConnection connection"""
  edges: [PaMagniToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMagniToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaMagniToProductConnection connection"""
input PaMagniToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaMagni type and the ProductVariation type"""
type PaMagniToProductVariationConnection {
  """Edges for the PaMagniToProductVariationConnection connection"""
  edges: [PaMagniToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMagniToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaMagniToProductVariationConnection connection
"""
input PaMagniToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paMagni type and the Taxonomy type"""
type PaMagniToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paMinima type"""
type PaMinima implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paMinima type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMinimaToContentNodeConnectionWhereArgs
  ): PaMinimaToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paMinimaId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaMinima type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMinimaToProductConnectionWhereArgs
  ): PaMinimaToProductConnection

  """The Yoast SEO data of the Product Minima taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paMinima type and the Taxonomy type"""
  taxonomy: PaMinimaToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaMinima type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMinimaToProductVariationConnectionWhereArgs
  ): PaMinimaToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaMinimaIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paMinima type and the ContentNode type"""
type PaMinimaToContentNodeConnection {
  """Edges for the PaMinimaToContentNodeConnection connection"""
  edges: [PaMinimaToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMinimaToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaMinimaToContentNodeConnection connection"""
input PaMinimaToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaMinima type and the Product type"""
type PaMinimaToProductConnection {
  """Edges for the PaMinimaToProductConnection connection"""
  edges: [PaMinimaToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMinimaToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaMinimaToProductConnection connection"""
input PaMinimaToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaMinima type and the ProductVariation type"""
type PaMinimaToProductVariationConnection {
  """Edges for the PaMinimaToProductVariationConnection connection"""
  edges: [PaMinimaToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMinimaToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaMinimaToProductVariationConnection connection
"""
input PaMinimaToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paMinima type and the Taxonomy type"""
type PaMinimaToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paMolestiae type"""
type PaMolestiae implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paMolestiae type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMolestiaeToContentNodeConnectionWhereArgs
  ): PaMolestiaeToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paMolestiaeId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaMolestiae type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMolestiaeToProductConnectionWhereArgs
  ): PaMolestiaeToProductConnection

  """The Yoast SEO data of the Product Molestiae taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paMolestiae type and the Taxonomy type"""
  taxonomy: PaMolestiaeToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaMolestiae type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaMolestiaeToProductVariationConnectionWhereArgs
  ): PaMolestiaeToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaMolestiaeIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paMolestiae type and the ContentNode type"""
type PaMolestiaeToContentNodeConnection {
  """Edges for the PaMolestiaeToContentNodeConnection connection"""
  edges: [PaMolestiaeToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMolestiaeToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaMolestiaeToContentNodeConnection connection
"""
input PaMolestiaeToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaMolestiae type and the Product type"""
type PaMolestiaeToProductConnection {
  """Edges for the PaMolestiaeToProductConnection connection"""
  edges: [PaMolestiaeToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMolestiaeToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaMolestiaeToProductConnection connection"""
input PaMolestiaeToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaMolestiae type and the ProductVariation type"""
type PaMolestiaeToProductVariationConnection {
  """Edges for the PaMolestiaeToProductVariationConnection connection"""
  edges: [PaMolestiaeToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaMolestiaeToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaMolestiaeToProductVariationConnection connection
"""
input PaMolestiaeToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paMolestiae type and the Taxonomy type"""
type PaMolestiaeToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paNihil type"""
type PaNihil implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paNihil type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNihilToContentNodeConnectionWhereArgs
  ): PaNihilToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paNihilId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaNihil type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNihilToProductConnectionWhereArgs
  ): PaNihilToProductConnection

  """The Yoast SEO data of the Product Nihil taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paNihil type and the Taxonomy type"""
  taxonomy: PaNihilToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaNihil type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNihilToProductVariationConnectionWhereArgs
  ): PaNihilToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaNihilIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paNihil type and the ContentNode type"""
type PaNihilToContentNodeConnection {
  """Edges for the PaNihilToContentNodeConnection connection"""
  edges: [PaNihilToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNihilToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaNihilToContentNodeConnection connection"""
input PaNihilToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaNihil type and the Product type"""
type PaNihilToProductConnection {
  """Edges for the PaNihilToProductConnection connection"""
  edges: [PaNihilToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNihilToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaNihilToProductConnection connection"""
input PaNihilToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaNihil type and the ProductVariation type"""
type PaNihilToProductVariationConnection {
  """Edges for the PaNihilToProductVariationConnection connection"""
  edges: [PaNihilToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNihilToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaNihilToProductVariationConnection connection
"""
input PaNihilToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paNihil type and the Taxonomy type"""
type PaNihilToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paNon type"""
type PaNon implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paNon type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNonToContentNodeConnectionWhereArgs
  ): PaNonToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paNonId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaNon type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNonToProductConnectionWhereArgs
  ): PaNonToProductConnection

  """The Yoast SEO data of the Product Non taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paNon type and the Taxonomy type"""
  taxonomy: PaNonToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaNon type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNonToProductVariationConnectionWhereArgs
  ): PaNonToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaNonIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paNon type and the ContentNode type"""
type PaNonToContentNodeConnection {
  """Edges for the PaNonToContentNodeConnection connection"""
  edges: [PaNonToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNonToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaNonToContentNodeConnection connection"""
input PaNonToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaNon type and the Product type"""
type PaNonToProductConnection {
  """Edges for the PaNonToProductConnection connection"""
  edges: [PaNonToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNonToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaNonToProductConnection connection"""
input PaNonToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaNon type and the ProductVariation type"""
type PaNonToProductVariationConnection {
  """Edges for the PaNonToProductVariationConnection connection"""
  edges: [PaNonToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNonToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaNonToProductVariationConnection connection
"""
input PaNonToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paNon type and the Taxonomy type"""
type PaNonToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paNulla type"""
type PaNulla implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paNulla type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNullaToContentNodeConnectionWhereArgs
  ): PaNullaToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paNullaId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaNulla type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNullaToProductConnectionWhereArgs
  ): PaNullaToProductConnection

  """The Yoast SEO data of the Product Nulla taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paNulla type and the Taxonomy type"""
  taxonomy: PaNullaToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaNulla type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNullaToProductVariationConnectionWhereArgs
  ): PaNullaToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaNullaIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paNulla type and the ContentNode type"""
type PaNullaToContentNodeConnection {
  """Edges for the PaNullaToContentNodeConnection connection"""
  edges: [PaNullaToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNullaToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaNullaToContentNodeConnection connection"""
input PaNullaToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaNulla type and the Product type"""
type PaNullaToProductConnection {
  """Edges for the PaNullaToProductConnection connection"""
  edges: [PaNullaToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNullaToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaNullaToProductConnection connection"""
input PaNullaToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaNulla type and the ProductVariation type"""
type PaNullaToProductVariationConnection {
  """Edges for the PaNullaToProductVariationConnection connection"""
  edges: [PaNullaToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNullaToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaNullaToProductVariationConnection connection
"""
input PaNullaToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paNulla type and the Taxonomy type"""
type PaNullaToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paNumericSize type"""
type PaNumericSize implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paNumericSize type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNumericSizeToContentNodeConnectionWhereArgs
  ): PaNumericSizeToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paNumericSizeId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaNumericSize type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNumericSizeToProductConnectionWhereArgs
  ): PaNumericSizeToProductConnection

  """The Yoast SEO data of the Product Numeric Size taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paNumericSize type and the Taxonomy type"""
  taxonomy: PaNumericSizeToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """
  Connection between the PaNumericSize type and the ProductVariation type
  """
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaNumericSizeToProductVariationConnectionWhereArgs
  ): PaNumericSizeToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaNumericSizeIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paNumericSize type and the ContentNode type"""
type PaNumericSizeToContentNodeConnection {
  """Edges for the PaNumericSizeToContentNodeConnection connection"""
  edges: [PaNumericSizeToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNumericSizeToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaNumericSizeToContentNodeConnection connection
"""
input PaNumericSizeToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaNumericSize type and the Product type"""
type PaNumericSizeToProductConnection {
  """Edges for the PaNumericSizeToProductConnection connection"""
  edges: [PaNumericSizeToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNumericSizeToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the PaNumericSizeToProductConnection connection
"""
input PaNumericSizeToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the PaNumericSize type and the ProductVariation type
"""
type PaNumericSizeToProductVariationConnection {
  """Edges for the PaNumericSizeToProductVariationConnection connection"""
  edges: [PaNumericSizeToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaNumericSizeToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaNumericSizeToProductVariationConnection connection
"""
input PaNumericSizeToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paNumericSize type and the Taxonomy type"""
type PaNumericSizeToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paOmnis type"""
type PaOmnis implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paOmnis type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaOmnisToContentNodeConnectionWhereArgs
  ): PaOmnisToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paOmnisId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaOmnis type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaOmnisToProductConnectionWhereArgs
  ): PaOmnisToProductConnection

  """The Yoast SEO data of the Product Omnis taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paOmnis type and the Taxonomy type"""
  taxonomy: PaOmnisToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaOmnis type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaOmnisToProductVariationConnectionWhereArgs
  ): PaOmnisToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaOmnisIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paOmnis type and the ContentNode type"""
type PaOmnisToContentNodeConnection {
  """Edges for the PaOmnisToContentNodeConnection connection"""
  edges: [PaOmnisToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaOmnisToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaOmnisToContentNodeConnection connection"""
input PaOmnisToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaOmnis type and the Product type"""
type PaOmnisToProductConnection {
  """Edges for the PaOmnisToProductConnection connection"""
  edges: [PaOmnisToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaOmnisToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaOmnisToProductConnection connection"""
input PaOmnisToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaOmnis type and the ProductVariation type"""
type PaOmnisToProductVariationConnection {
  """Edges for the PaOmnisToProductVariationConnection connection"""
  edges: [PaOmnisToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaOmnisToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaOmnisToProductVariationConnection connection
"""
input PaOmnisToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paOmnis type and the Taxonomy type"""
type PaOmnisToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paOptio type"""
type PaOptio implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paOptio type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaOptioToContentNodeConnectionWhereArgs
  ): PaOptioToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paOptioId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaOptio type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaOptioToProductConnectionWhereArgs
  ): PaOptioToProductConnection

  """The Yoast SEO data of the Product Optio taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paOptio type and the Taxonomy type"""
  taxonomy: PaOptioToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaOptio type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaOptioToProductVariationConnectionWhereArgs
  ): PaOptioToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaOptioIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paOptio type and the ContentNode type"""
type PaOptioToContentNodeConnection {
  """Edges for the PaOptioToContentNodeConnection connection"""
  edges: [PaOptioToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaOptioToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaOptioToContentNodeConnection connection"""
input PaOptioToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaOptio type and the Product type"""
type PaOptioToProductConnection {
  """Edges for the PaOptioToProductConnection connection"""
  edges: [PaOptioToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaOptioToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaOptioToProductConnection connection"""
input PaOptioToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaOptio type and the ProductVariation type"""
type PaOptioToProductVariationConnection {
  """Edges for the PaOptioToProductVariationConnection connection"""
  edges: [PaOptioToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaOptioToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaOptioToProductVariationConnection connection
"""
input PaOptioToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paOptio type and the Taxonomy type"""
type PaOptioToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paPraesentium type"""
type PaPraesentium implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paPraesentium type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaPraesentiumToContentNodeConnectionWhereArgs
  ): PaPraesentiumToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paPraesentiumId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaPraesentium type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaPraesentiumToProductConnectionWhereArgs
  ): PaPraesentiumToProductConnection

  """The Yoast SEO data of the Product Praesentium taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paPraesentium type and the Taxonomy type"""
  taxonomy: PaPraesentiumToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """
  Connection between the PaPraesentium type and the ProductVariation type
  """
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaPraesentiumToProductVariationConnectionWhereArgs
  ): PaPraesentiumToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaPraesentiumIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paPraesentium type and the ContentNode type"""
type PaPraesentiumToContentNodeConnection {
  """Edges for the PaPraesentiumToContentNodeConnection connection"""
  edges: [PaPraesentiumToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaPraesentiumToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaPraesentiumToContentNodeConnection connection
"""
input PaPraesentiumToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaPraesentium type and the Product type"""
type PaPraesentiumToProductConnection {
  """Edges for the PaPraesentiumToProductConnection connection"""
  edges: [PaPraesentiumToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaPraesentiumToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the PaPraesentiumToProductConnection connection
"""
input PaPraesentiumToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the PaPraesentium type and the ProductVariation type
"""
type PaPraesentiumToProductVariationConnection {
  """Edges for the PaPraesentiumToProductVariationConnection connection"""
  edges: [PaPraesentiumToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaPraesentiumToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaPraesentiumToProductVariationConnection connection
"""
input PaPraesentiumToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paPraesentium type and the Taxonomy type"""
type PaPraesentiumToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paProvident type"""
type PaProvident implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paProvident type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaProvidentToContentNodeConnectionWhereArgs
  ): PaProvidentToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paProvidentId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaProvident type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaProvidentToProductConnectionWhereArgs
  ): PaProvidentToProductConnection

  """The Yoast SEO data of the Product Provident taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paProvident type and the Taxonomy type"""
  taxonomy: PaProvidentToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaProvident type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaProvidentToProductVariationConnectionWhereArgs
  ): PaProvidentToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaProvidentIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paProvident type and the ContentNode type"""
type PaProvidentToContentNodeConnection {
  """Edges for the PaProvidentToContentNodeConnection connection"""
  edges: [PaProvidentToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaProvidentToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaProvidentToContentNodeConnection connection
"""
input PaProvidentToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaProvident type and the Product type"""
type PaProvidentToProductConnection {
  """Edges for the PaProvidentToProductConnection connection"""
  edges: [PaProvidentToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaProvidentToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaProvidentToProductConnection connection"""
input PaProvidentToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaProvident type and the ProductVariation type"""
type PaProvidentToProductVariationConnection {
  """Edges for the PaProvidentToProductVariationConnection connection"""
  edges: [PaProvidentToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaProvidentToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaProvidentToProductVariationConnection connection
"""
input PaProvidentToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paProvident type and the Taxonomy type"""
type PaProvidentToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paQuae type"""
type PaQuae implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paQuae type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuaeToContentNodeConnectionWhereArgs
  ): PaQuaeToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paQuaeId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaQuae type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuaeToProductConnectionWhereArgs
  ): PaQuaeToProductConnection

  """The Yoast SEO data of the Product Quae taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paQuae type and the Taxonomy type"""
  taxonomy: PaQuaeToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaQuae type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuaeToProductVariationConnectionWhereArgs
  ): PaQuaeToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaQuaeIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paQuae type and the ContentNode type"""
type PaQuaeToContentNodeConnection {
  """Edges for the PaQuaeToContentNodeConnection connection"""
  edges: [PaQuaeToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuaeToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaQuaeToContentNodeConnection connection"""
input PaQuaeToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaQuae type and the Product type"""
type PaQuaeToProductConnection {
  """Edges for the PaQuaeToProductConnection connection"""
  edges: [PaQuaeToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuaeToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaQuaeToProductConnection connection"""
input PaQuaeToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaQuae type and the ProductVariation type"""
type PaQuaeToProductVariationConnection {
  """Edges for the PaQuaeToProductVariationConnection connection"""
  edges: [PaQuaeToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuaeToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaQuaeToProductVariationConnection connection
"""
input PaQuaeToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paQuae type and the Taxonomy type"""
type PaQuaeToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paQui type"""
type PaQui implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paQui type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuiToContentNodeConnectionWhereArgs
  ): PaQuiToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paQuiId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaQui type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuiToProductConnectionWhereArgs
  ): PaQuiToProductConnection

  """The Yoast SEO data of the Product Qui taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paQui type and the Taxonomy type"""
  taxonomy: PaQuiToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaQui type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuiToProductVariationConnectionWhereArgs
  ): PaQuiToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaQuiIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paQui type and the ContentNode type"""
type PaQuiToContentNodeConnection {
  """Edges for the PaQuiToContentNodeConnection connection"""
  edges: [PaQuiToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuiToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaQuiToContentNodeConnection connection"""
input PaQuiToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaQui type and the Product type"""
type PaQuiToProductConnection {
  """Edges for the PaQuiToProductConnection connection"""
  edges: [PaQuiToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuiToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaQuiToProductConnection connection"""
input PaQuiToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaQui type and the ProductVariation type"""
type PaQuiToProductVariationConnection {
  """Edges for the PaQuiToProductVariationConnection connection"""
  edges: [PaQuiToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuiToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaQuiToProductVariationConnection connection
"""
input PaQuiToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paQui type and the Taxonomy type"""
type PaQuiToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paQuia type"""
type PaQuia implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paQuia type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuiaToContentNodeConnectionWhereArgs
  ): PaQuiaToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paQuiaId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaQuia type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuiaToProductConnectionWhereArgs
  ): PaQuiaToProductConnection

  """The Yoast SEO data of the Product Quia taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paQuia type and the Taxonomy type"""
  taxonomy: PaQuiaToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaQuia type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuiaToProductVariationConnectionWhereArgs
  ): PaQuiaToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaQuiaIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paQuia type and the ContentNode type"""
type PaQuiaToContentNodeConnection {
  """Edges for the PaQuiaToContentNodeConnection connection"""
  edges: [PaQuiaToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuiaToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaQuiaToContentNodeConnection connection"""
input PaQuiaToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaQuia type and the Product type"""
type PaQuiaToProductConnection {
  """Edges for the PaQuiaToProductConnection connection"""
  edges: [PaQuiaToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuiaToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaQuiaToProductConnection connection"""
input PaQuiaToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaQuia type and the ProductVariation type"""
type PaQuiaToProductVariationConnection {
  """Edges for the PaQuiaToProductVariationConnection connection"""
  edges: [PaQuiaToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuiaToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaQuiaToProductVariationConnection connection
"""
input PaQuiaToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paQuia type and the Taxonomy type"""
type PaQuiaToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paQuidem type"""
type PaQuidem implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paQuidem type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuidemToContentNodeConnectionWhereArgs
  ): PaQuidemToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paQuidemId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaQuidem type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuidemToProductConnectionWhereArgs
  ): PaQuidemToProductConnection

  """The Yoast SEO data of the Product Quidem taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paQuidem type and the Taxonomy type"""
  taxonomy: PaQuidemToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaQuidem type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuidemToProductVariationConnectionWhereArgs
  ): PaQuidemToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaQuidemIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paQuidem type and the ContentNode type"""
type PaQuidemToContentNodeConnection {
  """Edges for the PaQuidemToContentNodeConnection connection"""
  edges: [PaQuidemToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuidemToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaQuidemToContentNodeConnection connection"""
input PaQuidemToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaQuidem type and the Product type"""
type PaQuidemToProductConnection {
  """Edges for the PaQuidemToProductConnection connection"""
  edges: [PaQuidemToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuidemToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaQuidemToProductConnection connection"""
input PaQuidemToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaQuidem type and the ProductVariation type"""
type PaQuidemToProductVariationConnection {
  """Edges for the PaQuidemToProductVariationConnection connection"""
  edges: [PaQuidemToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuidemToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaQuidemToProductVariationConnection connection
"""
input PaQuidemToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paQuidem type and the Taxonomy type"""
type PaQuidemToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paQuis type"""
type PaQuis implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paQuis type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuisToContentNodeConnectionWhereArgs
  ): PaQuisToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paQuisId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaQuis type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuisToProductConnectionWhereArgs
  ): PaQuisToProductConnection

  """The Yoast SEO data of the Product Quis taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paQuis type and the Taxonomy type"""
  taxonomy: PaQuisToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaQuis type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuisToProductVariationConnectionWhereArgs
  ): PaQuisToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaQuisIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paQuis type and the ContentNode type"""
type PaQuisToContentNodeConnection {
  """Edges for the PaQuisToContentNodeConnection connection"""
  edges: [PaQuisToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuisToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaQuisToContentNodeConnection connection"""
input PaQuisToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaQuis type and the Product type"""
type PaQuisToProductConnection {
  """Edges for the PaQuisToProductConnection connection"""
  edges: [PaQuisToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuisToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaQuisToProductConnection connection"""
input PaQuisToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaQuis type and the ProductVariation type"""
type PaQuisToProductVariationConnection {
  """Edges for the PaQuisToProductVariationConnection connection"""
  edges: [PaQuisToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuisToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaQuisToProductVariationConnection connection
"""
input PaQuisToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paQuis type and the Taxonomy type"""
type PaQuisToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paQuo type"""
type PaQuo implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paQuo type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuoToContentNodeConnectionWhereArgs
  ): PaQuoToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paQuoId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaQuo type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuoToProductConnectionWhereArgs
  ): PaQuoToProductConnection

  """The Yoast SEO data of the Product Quo taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paQuo type and the Taxonomy type"""
  taxonomy: PaQuoToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaQuo type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaQuoToProductVariationConnectionWhereArgs
  ): PaQuoToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaQuoIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paQuo type and the ContentNode type"""
type PaQuoToContentNodeConnection {
  """Edges for the PaQuoToContentNodeConnection connection"""
  edges: [PaQuoToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuoToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaQuoToContentNodeConnection connection"""
input PaQuoToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaQuo type and the Product type"""
type PaQuoToProductConnection {
  """Edges for the PaQuoToProductConnection connection"""
  edges: [PaQuoToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuoToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaQuoToProductConnection connection"""
input PaQuoToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaQuo type and the ProductVariation type"""
type PaQuoToProductVariationConnection {
  """Edges for the PaQuoToProductVariationConnection connection"""
  edges: [PaQuoToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaQuoToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaQuoToProductVariationConnection connection
"""
input PaQuoToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paQuo type and the Taxonomy type"""
type PaQuoToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paRepellendus type"""
type PaRepellendus implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paRepellendus type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaRepellendusToContentNodeConnectionWhereArgs
  ): PaRepellendusToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paRepellendusId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaRepellendus type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaRepellendusToProductConnectionWhereArgs
  ): PaRepellendusToProductConnection

  """The Yoast SEO data of the Product Repellendus taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paRepellendus type and the Taxonomy type"""
  taxonomy: PaRepellendusToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """
  Connection between the PaRepellendus type and the ProductVariation type
  """
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaRepellendusToProductVariationConnectionWhereArgs
  ): PaRepellendusToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaRepellendusIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paRepellendus type and the ContentNode type"""
type PaRepellendusToContentNodeConnection {
  """Edges for the PaRepellendusToContentNodeConnection connection"""
  edges: [PaRepellendusToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaRepellendusToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaRepellendusToContentNodeConnection connection
"""
input PaRepellendusToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaRepellendus type and the Product type"""
type PaRepellendusToProductConnection {
  """Edges for the PaRepellendusToProductConnection connection"""
  edges: [PaRepellendusToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaRepellendusToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the PaRepellendusToProductConnection connection
"""
input PaRepellendusToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the PaRepellendus type and the ProductVariation type
"""
type PaRepellendusToProductVariationConnection {
  """Edges for the PaRepellendusToProductVariationConnection connection"""
  edges: [PaRepellendusToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaRepellendusToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaRepellendusToProductVariationConnection connection
"""
input PaRepellendusToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paRepellendus type and the Taxonomy type"""
type PaRepellendusToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paReprehenderit type"""
type PaReprehenderit implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paReprehenderit type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaReprehenderitToContentNodeConnectionWhereArgs
  ): PaReprehenderitToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paReprehenderitId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaReprehenderit type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaReprehenderitToProductConnectionWhereArgs
  ): PaReprehenderitToProductConnection

  """The Yoast SEO data of the Product Reprehenderit taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paReprehenderit type and the Taxonomy type"""
  taxonomy: PaReprehenderitToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """
  Connection between the PaReprehenderit type and the ProductVariation type
  """
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaReprehenderitToProductVariationConnectionWhereArgs
  ): PaReprehenderitToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaReprehenderitIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paReprehenderit type and the ContentNode type"""
type PaReprehenderitToContentNodeConnection {
  """Edges for the PaReprehenderitToContentNodeConnection connection"""
  edges: [PaReprehenderitToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaReprehenderitToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaReprehenderitToContentNodeConnection connection
"""
input PaReprehenderitToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaReprehenderit type and the Product type"""
type PaReprehenderitToProductConnection {
  """Edges for the PaReprehenderitToProductConnection connection"""
  edges: [PaReprehenderitToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaReprehenderitToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the PaReprehenderitToProductConnection connection
"""
input PaReprehenderitToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the PaReprehenderit type and the ProductVariation type
"""
type PaReprehenderitToProductVariationConnection {
  """Edges for the PaReprehenderitToProductVariationConnection connection"""
  edges: [PaReprehenderitToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaReprehenderitToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaReprehenderitToProductVariationConnection connection
"""
input PaReprehenderitToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paReprehenderit type and the Taxonomy type"""
type PaReprehenderitToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paRerum type"""
type PaRerum implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paRerum type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaRerumToContentNodeConnectionWhereArgs
  ): PaRerumToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paRerumId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaRerum type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaRerumToProductConnectionWhereArgs
  ): PaRerumToProductConnection

  """The Yoast SEO data of the Product Rerum taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paRerum type and the Taxonomy type"""
  taxonomy: PaRerumToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaRerum type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaRerumToProductVariationConnectionWhereArgs
  ): PaRerumToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaRerumIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paRerum type and the ContentNode type"""
type PaRerumToContentNodeConnection {
  """Edges for the PaRerumToContentNodeConnection connection"""
  edges: [PaRerumToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaRerumToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaRerumToContentNodeConnection connection"""
input PaRerumToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaRerum type and the Product type"""
type PaRerumToProductConnection {
  """Edges for the PaRerumToProductConnection connection"""
  edges: [PaRerumToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaRerumToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaRerumToProductConnection connection"""
input PaRerumToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaRerum type and the ProductVariation type"""
type PaRerumToProductVariationConnection {
  """Edges for the PaRerumToProductVariationConnection connection"""
  edges: [PaRerumToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaRerumToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaRerumToProductVariationConnection connection
"""
input PaRerumToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paRerum type and the Taxonomy type"""
type PaRerumToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paSit type"""
type PaSit implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paSit type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaSitToContentNodeConnectionWhereArgs
  ): PaSitToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paSitId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaSit type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaSitToProductConnectionWhereArgs
  ): PaSitToProductConnection

  """The Yoast SEO data of the Product Sit taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paSit type and the Taxonomy type"""
  taxonomy: PaSitToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaSit type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaSitToProductVariationConnectionWhereArgs
  ): PaSitToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaSitIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paSit type and the ContentNode type"""
type PaSitToContentNodeConnection {
  """Edges for the PaSitToContentNodeConnection connection"""
  edges: [PaSitToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaSitToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaSitToContentNodeConnection connection"""
input PaSitToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaSit type and the Product type"""
type PaSitToProductConnection {
  """Edges for the PaSitToProductConnection connection"""
  edges: [PaSitToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaSitToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaSitToProductConnection connection"""
input PaSitToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaSit type and the ProductVariation type"""
type PaSitToProductVariationConnection {
  """Edges for the PaSitToProductVariationConnection connection"""
  edges: [PaSitToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaSitToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaSitToProductVariationConnection connection
"""
input PaSitToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paSit type and the Taxonomy type"""
type PaSitToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paSize type"""
type PaSize implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paSize type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaSizeToContentNodeConnectionWhereArgs
  ): PaSizeToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paSizeId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaSize type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaSizeToProductConnectionWhereArgs
  ): PaSizeToProductConnection

  """The Yoast SEO data of the Product Size taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paSize type and the Taxonomy type"""
  taxonomy: PaSizeToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaSize type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaSizeToProductVariationConnectionWhereArgs
  ): PaSizeToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaSizeIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paSize type and the ContentNode type"""
type PaSizeToContentNodeConnection {
  """Edges for the PaSizeToContentNodeConnection connection"""
  edges: [PaSizeToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaSizeToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaSizeToContentNodeConnection connection"""
input PaSizeToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaSize type and the Product type"""
type PaSizeToProductConnection {
  """Edges for the PaSizeToProductConnection connection"""
  edges: [PaSizeToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaSizeToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaSizeToProductConnection connection"""
input PaSizeToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaSize type and the ProductVariation type"""
type PaSizeToProductVariationConnection {
  """Edges for the PaSizeToProductVariationConnection connection"""
  edges: [PaSizeToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaSizeToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaSizeToProductVariationConnection connection
"""
input PaSizeToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paSize type and the Taxonomy type"""
type PaSizeToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paTenetur type"""
type PaTenetur implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paTenetur type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaTeneturToContentNodeConnectionWhereArgs
  ): PaTeneturToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paTeneturId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaTenetur type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaTeneturToProductConnectionWhereArgs
  ): PaTeneturToProductConnection

  """The Yoast SEO data of the Product Tenetur taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paTenetur type and the Taxonomy type"""
  taxonomy: PaTeneturToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaTenetur type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaTeneturToProductVariationConnectionWhereArgs
  ): PaTeneturToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaTeneturIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paTenetur type and the ContentNode type"""
type PaTeneturToContentNodeConnection {
  """Edges for the PaTeneturToContentNodeConnection connection"""
  edges: [PaTeneturToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaTeneturToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PaTeneturToContentNodeConnection connection
"""
input PaTeneturToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaTenetur type and the Product type"""
type PaTeneturToProductConnection {
  """Edges for the PaTeneturToProductConnection connection"""
  edges: [PaTeneturToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaTeneturToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaTeneturToProductConnection connection"""
input PaTeneturToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaTenetur type and the ProductVariation type"""
type PaTeneturToProductVariationConnection {
  """Edges for the PaTeneturToProductVariationConnection connection"""
  edges: [PaTeneturToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaTeneturToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaTeneturToProductVariationConnection connection
"""
input PaTeneturToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paTenetur type and the Taxonomy type"""
type PaTeneturToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The paVel type"""
type PaVel implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the paVel type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaVelToContentNodeConnectionWhereArgs
  ): PaVelToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  paVelId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the PaVel type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaVelToProductConnectionWhereArgs
  ): PaVelToProductConnection

  """The Yoast SEO data of the Product Vel taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the paVel type and the Taxonomy type"""
  taxonomy: PaVelToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """Connection between the PaVel type and the ProductVariation type"""
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PaVelToProductVariationConnectionWhereArgs
  ): PaVelToProductVariationConnection
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PaVelIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the paVel type and the ContentNode type"""
type PaVelToContentNodeConnection {
  """Edges for the PaVelToContentNodeConnection connection"""
  edges: [PaVelToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaVelToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the PaVelToContentNodeConnection connection"""
input PaVelToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the PaVel type and the Product type"""
type PaVelToProductConnection {
  """Edges for the PaVelToProductConnection connection"""
  edges: [PaVelToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaVelToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the PaVelToProductConnection connection"""
input PaVelToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the PaVel type and the ProductVariation type"""
type PaVelToProductVariationConnection {
  """Edges for the PaVelToProductVariationConnection connection"""
  edges: [PaVelToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PaVelToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the PaVelToProductVariationConnection connection
"""
input PaVelToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the paVel type and the Taxonomy type"""
type PaVelToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The page type"""
type Page implements BlockEditorContentNode & ContentNode & DatabaseIdentifier & HierarchicalContentNode & MenuItemLinkable & Node & NodeWithAuthor & NodeWithComments & NodeWithContentEditor & NodeWithFeaturedImage & NodeWithPageAttributes & NodeWithRevisions & NodeWithTemplate & NodeWithTitle & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / Slick&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSlick: Page_Acfblocksliderslick

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: Page_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: Page_Acfblockstaff

  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: HierarchicalContentNodeToContentNodeAncestorsConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the NodeWithAuthor type and the User type"""
  author: NodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """Gutenberg blocks"""
  blocks: [Block!]

  """Gutenberg blocks as json string"""
  blocksJSON: String

  """bodyClasses"""
  bodyClasses: String

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  children(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: HierarchicalContentNodeToContentNodeChildrenConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeChildrenConnection

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the page type and the Comment type"""
  comments(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PageToCommentConnectionWhereArgs
  ): PageToCommentConnection

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier of the page object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether this page is set to the static front page."""
  isFrontPage: Boolean!

  """Whether this page is set to the blog posts page."""
  isPostsPage: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether this page is set to the privacy page."""
  isPrivacyPage: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """The id field matches the WP_Post-&gt;ID field."""
  pageId: Int! @deprecated(reason: "Deprecated in favor of the databaseId field")

  """The parent of the node. The parent object can be of various types"""
  parent: HierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """Connection between the page type and the page type"""
  preview: PageToPreviewConnectionEdge

  """Previewed gutenberg blocks"""
  previewBlocks: [Block!]

  """Previewed Gutenberg blocks as json string"""
  previewBlocksJSON: String

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge

  """Connection between the page type and the page type"""
  revisions(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PageToRevisionConnectionWhereArgs
  ): PageToRevisionConnection

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: ContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PageIdType {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """Identify a resource by the URI."""
  URI
}

"""Connection between the page type and the Comment type"""
type PageToCommentConnection {
  """Edges for the PageToCommentConnection connection"""
  edges: [PageToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PageToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the PageToCommentConnection connection"""
input PageToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Connection between the page type and the page type"""
type PageToPreviewConnectionEdge {
  """The node of the connection, without the edges"""
  node: Page
}

"""Connection between the page type and the page type"""
type PageToRevisionConnection {
  """Edges for the pageToRevisionConnection connection"""
  edges: [PageToRevisionConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Page]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PageToRevisionConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Page
}

"""Arguments for filtering the pageToRevisionConnection connection"""
input PageToRevisionConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Field Group"""
type Page_Acfblocksliderslick implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [Page_Acfblocksliderslick_slides]
}

"""Field Group"""
type Page_Acfblocksliderslick_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type Page_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [Page_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type Page_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type Page_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""A payment gateway object"""
type PaymentGateway {
  """gateway&#039;s description"""
  description: String

  """gateway&#039;s icon"""
  icon: String

  """gateway&#039;s title"""
  id: String!

  """gateway&#039;s title"""
  title: String
}

"""An plugin object"""
type Plugin implements Node {
  """Name of the plugin author(s), may also be a company name."""
  author: String

  """URI for the related author(s)/company website."""
  authorUri: String

  """Description of the plugin."""
  description: String

  """The globally unique identifier of the plugin object."""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Display name of the plugin."""
  name: String

  """Plugin path."""
  path: String

  """
  URI for the plugin website. This is useful for directing users for support requests etc.
  """
  pluginUri: String

  """Current version of the plugin."""
  version: String
}

"""The status of the WordPress plugin."""
enum PluginStatusEnum {
  """The plugin is currently active."""
  ACTIVE

  """The plugin is a drop-in plugin."""
  DROP_IN

  """The plugin is currently inactive."""
  INACTIVE

  """The plugin is a must-use plugin."""
  MUST_USE

  """The plugin is technically active but was paused while loading."""
  PAUSED

  """The plugin was active recently."""
  RECENTLY_ACTIVE

  """The plugin has an upgrade available."""
  UPGRADE
}

"""The post type"""
type Post implements BlockEditorContentNode & ContentNode & DatabaseIdentifier & MenuItemLinkable & Node & NodeWithAuthor & NodeWithComments & NodeWithContentEditor & NodeWithExcerpt & NodeWithFeaturedImage & NodeWithRevisions & NodeWithTemplate & NodeWithTitle & NodeWithTrackbacks & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / Slick&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSlick: Post_Acfblocksliderslick

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: Post_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: Post_Acfblockstaff

  """Connection between the NodeWithAuthor type and the User type"""
  author: NodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """Gutenberg blocks"""
  blocks: [Block!]

  """Gutenberg blocks as json string"""
  blocksJSON: String

  """bodyClasses"""
  bodyClasses: String

  """Connection between the post type and the category type"""
  categories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostToCategoryConnectionWhereArgs
  ): PostToCategoryConnection

  """Co Authors"""
  coAuthors: String

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the post type and the Comment type"""
  comments(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostToCommentConnectionWhereArgs
  ): PostToCommentConnection

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """The excerpt of the post."""
  excerpt(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier of the post object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether this page is sticky"""
  isSticky: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Whether the pings are open or closed for this particular post."""
  pingStatus: String

  """URLs that have been pinged."""
  pinged: [String]

  """Connection between the post type and the postFormat type"""
  postFormats(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostToPostFormatConnectionWhereArgs
  ): PostToPostFormatConnection

  """The id field matches the WP_Post-&gt;ID field."""
  postId: Int! @deprecated(reason: "Deprecated in favor of the databaseId field")

  """Connection between the post type and the post type"""
  preview: PostToPreviewConnectionEdge

  """Previewed gutenberg blocks"""
  previewBlocks: [Block!]

  """Previewed Gutenberg blocks as json string"""
  previewBlocksJSON: String

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge

  """Connection between the post type and the post type"""
  revisions(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostToRevisionConnectionWhereArgs
  ): PostToRevisionConnection

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the post type and the tag type"""
  tags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostToTagConnectionWhereArgs
  ): PostToTagConnection

  """The template assigned to a node of content"""
  template: ContentTemplate

  """Connection between the post type and the TermNode type"""
  terms(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostToTermNodeConnectionWhereArgs
  ): PostToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """URLs queued to be pinged."""
  toPing: [String]

  """The unique resource identifier path"""
  uri: String
}

"""Set relationships between the post to categories"""
input PostCategoriesInput {
  """
  If true, this will append the category to existing related categories. If false, this will replace existing relationships. Default true.
  """
  append: Boolean

  """The input list of items to set."""
  nodes: [PostCategoriesNodeInput]
}

"""
List of categories to connect the post to. If an ID is set, it will be used to create the connection. If not, it will look for a slug. If neither are valid existing terms, and the site is configured to allow terms to be created during post mutations, a term will be created using the Name if it exists in the input, then fallback to the slug if it exists.
"""
input PostCategoriesNodeInput {
  """
  The description of the category. This field is used to set a description of the category if a new one is created during the mutation.
  """
  description: String

  """
  The ID of the category. If present, this will be used to connect to the post. If no existing category exists with this ID, no connection will be made.
  """
  id: ID

  """
  The name of the category. This field is used to create a new term, if term creation is enabled in nested mutations, and if one does not already exist with the provided slug or ID or if a slug or ID is not provided. If no name is included and a term is created, the creation will fallback to the slug field.
  """
  name: String

  """
  The slug of the category. If no ID is present, this field will be used to make a connection. If no existing term exists with this slug, this field will be used as a fallback to the Name field when creating a new term to connect to, if term creation is enabled as a nested mutation.
  """
  slug: String
}

"""The postFormat type"""
type PostFormat implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the postFormat type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostFormatToContentNodeConnectionWhereArgs
  ): PostFormatToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  postFormatId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the postFormat type and the post type"""
  posts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: PostFormatToPostConnectionWhereArgs
  ): PostFormatToPostConnection

  """The Yoast SEO data of the Formats taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the postFormat type and the Taxonomy type"""
  taxonomy: PostFormatToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PostFormatIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the postFormat type and the ContentNode type"""
type PostFormatToContentNodeConnection {
  """Edges for the PostFormatToContentNodeConnection connection"""
  edges: [PostFormatToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostFormatToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the PostFormatToContentNodeConnection connection
"""
input PostFormatToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypesOfPostFormatEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the postFormat type and the post type"""
type PostFormatToPostConnection {
  """Edges for the PostFormatToPostConnection connection"""
  edges: [PostFormatToPostConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Post]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostFormatToPostConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Post
}

"""Arguments for filtering the PostFormatToPostConnection connection"""
input PostFormatToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Category ID"""
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """Use Category Slug"""
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Tag Slug"""
  tag: String

  """Use Tag ID"""
  tagId: String

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagIn: [ID]

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagNotIn: [ID]

  """Array of tag slugs, used to display objects from one tag OR another"""
  tagSlugAnd: [String]

  """Array of tag slugs, used to exclude objects in specified tags"""
  tagSlugIn: [String]

  """Title of the object"""
  title: String
}

"""Connection between the postFormat type and the Taxonomy type"""
type PostFormatToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum PostIdType {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG

  """Identify a resource by the URI."""
  URI
}

"""The format of post field data."""
enum PostObjectFieldFormatEnum {
  """
  Provide the field value directly from database. Null on unauthenticated requests.
  """
  RAW

  """Provide the field value as rendered by WordPress. Default."""
  RENDERED
}

"""The column to use when filtering by date"""
enum PostObjectsConnectionDateColumnEnum {
  """The date the comment was created in local time."""
  DATE

  """The most recent modification date of the comment."""
  MODIFIED
}

"""Field to order the connection by"""
enum PostObjectsConnectionOrderbyEnum {
  """Order by author"""
  AUTHOR

  """Order by the number of comments it has acquired"""
  COMMENT_COUNT

  """Order by publish date"""
  DATE

  """Preserve the ID order given in the IN array"""
  IN

  """Order by the menu order value"""
  MENU_ORDER

  """Order by last modified date"""
  MODIFIED

  """Preserve slug order given in the NAME_IN array"""
  NAME_IN

  """Order by parent ID"""
  PARENT

  """Order by slug"""
  SLUG

  """Order by title"""
  TITLE
}

"""Options for ordering the connection"""
input PostObjectsConnectionOrderbyInput {
  """The field to order the connection by"""
  field: PostObjectsConnectionOrderbyEnum!

  """Possible directions in which to order a list of items"""
  order: OrderEnum!
}

"""Set relationships between the post to postFormats"""
input PostPostFormatsInput {
  """
  If true, this will append the postFormat to existing related postFormats. If false, this will replace existing relationships. Default true.
  """
  append: Boolean

  """The input list of items to set."""
  nodes: [PostPostFormatsNodeInput]
}

"""
List of postFormats to connect the post to. If an ID is set, it will be used to create the connection. If not, it will look for a slug. If neither are valid existing terms, and the site is configured to allow terms to be created during post mutations, a term will be created using the Name if it exists in the input, then fallback to the slug if it exists.
"""
input PostPostFormatsNodeInput {
  """
  The description of the postFormat. This field is used to set a description of the postFormat if a new one is created during the mutation.
  """
  description: String

  """
  The ID of the postFormat. If present, this will be used to connect to the post. If no existing postFormat exists with this ID, no connection will be made.
  """
  id: ID

  """
  The name of the postFormat. This field is used to create a new term, if term creation is enabled in nested mutations, and if one does not already exist with the provided slug or ID or if a slug or ID is not provided. If no name is included and a term is created, the creation will fallback to the slug field.
  """
  name: String

  """
  The slug of the postFormat. If no ID is present, this field will be used to make a connection. If no existing term exists with this slug, this field will be used as a fallback to the Name field when creating a new term to connect to, if term creation is enabled as a nested mutation.
  """
  slug: String
}

"""The status of the object."""
enum PostStatusEnum {
  """Objects with the acf-disabled status"""
  ACF_DISABLED

  """Objects with the auto-draft status"""
  AUTO_DRAFT

  """Objects with the draft status"""
  DRAFT

  """Objects with the future status"""
  FUTURE

  """Objects with the inherit status"""
  INHERIT

  """Objects with the pending status"""
  PENDING

  """Objects with the private status"""
  PRIVATE

  """Objects with the publish status"""
  PUBLISH

  """Objects with the request-completed status"""
  REQUEST_COMPLETED

  """Objects with the request-confirmed status"""
  REQUEST_CONFIRMED

  """Objects with the request-failed status"""
  REQUEST_FAILED

  """Objects with the request-pending status"""
  REQUEST_PENDING

  """Objects with the trash status"""
  TRASH

  """Objects with the wc-cancelled status"""
  WC_CANCELLED

  """Objects with the wc-checkout-draft status"""
  WC_CHECKOUT_DRAFT

  """Objects with the wc-completed status"""
  WC_COMPLETED

  """Objects with the wc-failed status"""
  WC_FAILED

  """Objects with the wc-on-hold status"""
  WC_ON_HOLD

  """Objects with the wc-pending status"""
  WC_PENDING

  """Objects with the wc-processing status"""
  WC_PROCESSING

  """Objects with the wc-refunded status"""
  WC_REFUNDED
}

"""Set relationships between the post to tags"""
input PostTagsInput {
  """
  If true, this will append the tag to existing related tags. If false, this will replace existing relationships. Default true.
  """
  append: Boolean

  """The input list of items to set."""
  nodes: [PostTagsNodeInput]
}

"""
List of tags to connect the post to. If an ID is set, it will be used to create the connection. If not, it will look for a slug. If neither are valid existing terms, and the site is configured to allow terms to be created during post mutations, a term will be created using the Name if it exists in the input, then fallback to the slug if it exists.
"""
input PostTagsNodeInput {
  """
  The description of the tag. This field is used to set a description of the tag if a new one is created during the mutation.
  """
  description: String

  """
  The ID of the tag. If present, this will be used to connect to the post. If no existing tag exists with this ID, no connection will be made.
  """
  id: ID

  """
  The name of the tag. This field is used to create a new term, if term creation is enabled in nested mutations, and if one does not already exist with the provided slug or ID or if a slug or ID is not provided. If no name is included and a term is created, the creation will fallback to the slug field.
  """
  name: String

  """
  The slug of the tag. If no ID is present, this field will be used to make a connection. If no existing term exists with this slug, this field will be used as a fallback to the Name field when creating a new term to connect to, if term creation is enabled as a nested mutation.
  """
  slug: String
}

"""Connection between the post type and the category type"""
type PostToCategoryConnection {
  """Edges for the PostToCategoryConnection connection"""
  edges: [PostToCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Category]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostToCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary category"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: Category
}

"""Arguments for filtering the PostToCategoryConnection connection"""
input PostToCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the post type and the Comment type"""
type PostToCommentConnection {
  """Edges for the PostToCommentConnection connection"""
  edges: [PostToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the PostToCommentConnection connection"""
input PostToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Connection between the post type and the postFormat type"""
type PostToPostFormatConnection {
  """Edges for the PostToPostFormatConnection connection"""
  edges: [PostToPostFormatConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PostFormat]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostToPostFormatConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary post_format"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PostFormat
}

"""Arguments for filtering the PostToPostFormatConnection connection"""
input PostToPostFormatConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the post type and the post type"""
type PostToPreviewConnectionEdge {
  """The node of the connection, without the edges"""
  node: Post
}

"""Connection between the post type and the post type"""
type PostToRevisionConnection {
  """Edges for the postToRevisionConnection connection"""
  edges: [PostToRevisionConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Post]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostToRevisionConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Post
}

"""Arguments for filtering the postToRevisionConnection connection"""
input PostToRevisionConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Category ID"""
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """Use Category Slug"""
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Tag Slug"""
  tag: String

  """Use Tag ID"""
  tagId: String

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagIn: [ID]

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagNotIn: [ID]

  """Array of tag slugs, used to display objects from one tag OR another"""
  tagSlugAnd: [String]

  """Array of tag slugs, used to exclude objects in specified tags"""
  tagSlugIn: [String]

  """Title of the object"""
  title: String
}

"""Connection between the post type and the tag type"""
type PostToTagConnection {
  """Edges for the PostToTagConnection connection"""
  edges: [PostToTagConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Tag]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostToTagConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary post_tag"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: Tag
}

"""Arguments for filtering the PostToTagConnection connection"""
input PostToTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the post type and the TermNode type"""
type PostToTermNodeConnection {
  """Edges for the PostToTermNodeConnection connection"""
  edges: [PostToTermNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [TermNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type PostToTermNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: TermNode
}

"""Arguments for filtering the PostToTermNodeConnection connection"""
input PostToTermNodeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """The Taxonomy to filter terms by"""
  taxonomies: [TaxonomyEnum]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Details for labels of the PostType"""
type PostTypeLabelDetails {
  """Default is ‘Add New’ for both hierarchical and non-hierarchical types."""
  addNew: String

  """Label for adding a new singular item."""
  addNewItem: String

  """Label to signify all items in a submenu link."""
  allItems: String

  """Label for archives in nav menus"""
  archives: String

  """Label for the attributes meta box."""
  attributes: String

  """Label for editing a singular item."""
  editItem: String

  """Label for the Featured Image meta box title."""
  featuredImage: String

  """Label for the table views hidden heading."""
  filterItemsList: String

  """Label for the media frame button."""
  insertIntoItem: String

  """Label for the table hidden heading."""
  itemsList: String

  """Label for the table pagination hidden heading."""
  itemsListNavigation: String

  """Label for the menu name."""
  menuName: String

  """General name for the post type, usually plural."""
  name: String

  """Label for the new item page title."""
  newItem: String

  """Label used when no items are found."""
  notFound: String

  """Label used when no items are in the trash."""
  notFoundInTrash: String

  """Label used to prefix parents of hierarchical items."""
  parentItemColon: String

  """Label for removing the featured image."""
  removeFeaturedImage: String

  """Label for searching plural items."""
  searchItems: String

  """Label for setting the featured image."""
  setFeaturedImage: String

  """Name for one object of this post type."""
  singularName: String

  """Label for the media frame filter."""
  uploadedToThisItem: String

  """Label in the media frame for using a featured image."""
  useFeaturedImage: String

  """Label for viewing a singular item."""
  viewItem: String

  """Label for viewing post type archives."""
  viewItems: String
}

"""Fields to order the PostType connection by"""
enum PostTypeOrderByEnum {
  """Order by publish date"""
  DATE

  """Preserve the ID order given in the IN array"""
  IN

  """Order by the menu order value"""
  MENU_ORDER

  """Order by last modified date"""
  MODIFIED

  """Preserve slug order given in the NAME_IN array"""
  NAME_IN

  """Order by parent ID"""
  PARENT

  """Order by slug"""
  SLUG
}

"""Options for ordering the connection"""
input PostTypeOrderbyInput {
  field: PostTypeOrderByEnum!
  order: OrderEnum
}

""""""
type PostTypeSEO {
  """"""
  breadcrumbs: [SEOPostTypeBreadcrumbs]

  """"""
  canonical: String

  """"""
  cornerstone: Boolean

  """"""
  focuskw: String

  """"""
  fullHead: String

  """"""
  metaDesc: String

  """"""
  metaKeywords: String

  """"""
  metaRobotsNofollow: String

  """"""
  metaRobotsNoindex: String

  """"""
  opengraphAuthor: String

  """"""
  opengraphDescription: String

  """"""
  opengraphImage: MediaItem

  """"""
  opengraphModifiedTime: String

  """"""
  opengraphPublishedTime: String

  """"""
  opengraphPublisher: String

  """"""
  opengraphSiteName: String

  """"""
  opengraphTitle: String

  """"""
  opengraphType: String

  """"""
  opengraphUrl: String

  """"""
  readingTime: Float

  """"""
  schema: SEOPostTypeSchema

  """Yoast SEO Schema"""
  schemaDetails: String

  """"""
  title: String

  """"""
  twitterDescription: String

  """"""
  twitterImage: MediaItem

  """"""
  twitterTitle: String
}

"""Field Group"""
type Post_Acfblocksliderslick implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [Post_Acfblocksliderslick_slides]
}

"""Field Group"""
type Post_Acfblocksliderslick_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type Post_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [Post_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type Post_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type Post_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""Pricing field format enumeration"""
enum PricingFieldFormatEnum {
  FORMATTED
  RAW
}

"""Product object"""
interface Product {
  """Connection between the Product type and the paArchitecto type"""
  allPaArchitecto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaArchitectoConnectionWhereArgs
  ): ProductToPaArchitectoConnection

  """Connection between the Product type and the paAspernatur type"""
  allPaAspernatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAspernaturConnectionWhereArgs
  ): ProductToPaAspernaturConnection

  """Connection between the Product type and the paAtque type"""
  allPaAtque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAtqueConnectionWhereArgs
  ): ProductToPaAtqueConnection

  """Connection between the Product type and the paColor type"""
  allPaColor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaColorConnectionWhereArgs
  ): ProductToPaColorConnection

  """Connection between the Product type and the paConsequatur type"""
  allPaConsequatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaConsequaturConnectionWhereArgs
  ): ProductToPaConsequaturConnection

  """Connection between the Product type and the paCum type"""
  allPaCum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaCumConnectionWhereArgs
  ): ProductToPaCumConnection

  """Connection between the Product type and the paDolor type"""
  allPaDolor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorConnectionWhereArgs
  ): ProductToPaDolorConnection

  """Connection between the Product type and the paDoloremque type"""
  allPaDoloremque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloremqueConnectionWhereArgs
  ): ProductToPaDoloremqueConnection

  """Connection between the Product type and the paDolores type"""
  allPaDolores(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloresConnectionWhereArgs
  ): ProductToPaDoloresConnection

  """Connection between the Product type and the paDolorum type"""
  allPaDolorum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorumConnectionWhereArgs
  ): ProductToPaDolorumConnection

  """Connection between the Product type and the paEa type"""
  allPaEa(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEaConnectionWhereArgs
  ): ProductToPaEaConnection

  """Connection between the Product type and the paEos type"""
  allPaEos(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEosConnectionWhereArgs
  ): ProductToPaEosConnection

  """Connection between the Product type and the paEt type"""
  allPaEt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEtConnectionWhereArgs
  ): ProductToPaEtConnection

  """Connection between the Product type and the paExcepturi type"""
  allPaExcepturi(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExcepturiConnectionWhereArgs
  ): ProductToPaExcepturiConnection

  """Connection between the Product type and the paExplicabo type"""
  allPaExplicabo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExplicaboConnectionWhereArgs
  ): ProductToPaExplicaboConnection

  """Connection between the Product type and the paFacere type"""
  allPaFacere(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaFacereConnectionWhereArgs
  ): ProductToPaFacereConnection

  """Connection between the Product type and the paHarum type"""
  allPaHarum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaHarumConnectionWhereArgs
  ): ProductToPaHarumConnection

  """Connection between the Product type and the paIncidunt type"""
  allPaIncidunt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaInciduntConnectionWhereArgs
  ): ProductToPaInciduntConnection

  """Connection between the Product type and the paIpsam type"""
  allPaIpsam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIpsamConnectionWhereArgs
  ): ProductToPaIpsamConnection

  """Connection between the Product type and the paIusto type"""
  allPaIusto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIustoConnectionWhereArgs
  ): ProductToPaIustoConnection

  """Connection between the Product type and the paLaudantium type"""
  allPaLaudantium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaLaudantiumConnectionWhereArgs
  ): ProductToPaLaudantiumConnection

  """Connection between the Product type and the paMagnam type"""
  allPaMagnam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagnamConnectionWhereArgs
  ): ProductToPaMagnamConnection

  """Connection between the Product type and the paMagni type"""
  allPaMagni(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagniConnectionWhereArgs
  ): ProductToPaMagniConnection

  """Connection between the Product type and the paMinima type"""
  allPaMinima(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMinimaConnectionWhereArgs
  ): ProductToPaMinimaConnection

  """Connection between the Product type and the paMolestiae type"""
  allPaMolestiae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMolestiaeConnectionWhereArgs
  ): ProductToPaMolestiaeConnection

  """Connection between the Product type and the paNihil type"""
  allPaNihil(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNihilConnectionWhereArgs
  ): ProductToPaNihilConnection

  """Connection between the Product type and the paNon type"""
  allPaNon(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNonConnectionWhereArgs
  ): ProductToPaNonConnection

  """Connection between the Product type and the paNulla type"""
  allPaNulla(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNullaConnectionWhereArgs
  ): ProductToPaNullaConnection

  """Connection between the Product type and the paNumericSize type"""
  allPaNumericSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNumericSizeConnectionWhereArgs
  ): ProductToPaNumericSizeConnection

  """Connection between the Product type and the paOmnis type"""
  allPaOmnis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOmnisConnectionWhereArgs
  ): ProductToPaOmnisConnection

  """Connection between the Product type and the paOptio type"""
  allPaOptio(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOptioConnectionWhereArgs
  ): ProductToPaOptioConnection

  """Connection between the Product type and the paPraesentium type"""
  allPaPraesentium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaPraesentiumConnectionWhereArgs
  ): ProductToPaPraesentiumConnection

  """Connection between the Product type and the paProvident type"""
  allPaProvident(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaProvidentConnectionWhereArgs
  ): ProductToPaProvidentConnection

  """Connection between the Product type and the paQuae type"""
  allPaQuae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuaeConnectionWhereArgs
  ): ProductToPaQuaeConnection

  """Connection between the Product type and the paQui type"""
  allPaQui(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiConnectionWhereArgs
  ): ProductToPaQuiConnection

  """Connection between the Product type and the paQuia type"""
  allPaQuia(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiaConnectionWhereArgs
  ): ProductToPaQuiaConnection

  """Connection between the Product type and the paQuidem type"""
  allPaQuidem(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuidemConnectionWhereArgs
  ): ProductToPaQuidemConnection

  """Connection between the Product type and the paQuis type"""
  allPaQuis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuisConnectionWhereArgs
  ): ProductToPaQuisConnection

  """Connection between the Product type and the paQuo type"""
  allPaQuo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuoConnectionWhereArgs
  ): ProductToPaQuoConnection

  """Connection between the Product type and the paRepellendus type"""
  allPaRepellendus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRepellendusConnectionWhereArgs
  ): ProductToPaRepellendusConnection

  """Connection between the Product type and the paReprehenderit type"""
  allPaReprehenderit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaReprehenderitConnectionWhereArgs
  ): ProductToPaReprehenderitConnection

  """Connection between the Product type and the paRerum type"""
  allPaRerum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRerumConnectionWhereArgs
  ): ProductToPaRerumConnection

  """Connection between the Product type and the paSit type"""
  allPaSit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSitConnectionWhereArgs
  ): ProductToPaSitConnection

  """Connection between the Product type and the paSize type"""
  allPaSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSizeConnectionWhereArgs
  ): ProductToPaSizeConnection

  """Connection between the Product type and the paTenetur type"""
  allPaTenetur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaTeneturConnectionWhereArgs
  ): ProductToPaTeneturConnection

  """Connection between the Product type and the paVel type"""
  allPaVel(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaVelConnectionWhereArgs
  ): ProductToPaVelConnection

  """Connection between the Product type and the ProductAttribute type"""
  attributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection

  """Product average count"""
  averageRating: Float

  """Catalog visibility"""
  catalogVisibility: CatalogVisibilityEnum

  """The ID of the product in the database"""
  databaseId: Int!

  """Date product created"""
  date: String

  """Date on sale from"""
  dateOnSaleFrom: String

  """Date on sale to"""
  dateOnSaleTo: String

  """Product description"""
  description(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """If the product is featured"""
  featured: Boolean

  """Connection between the Product type and the MediaItem type"""
  galleryImages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection

  """The globally unique identifier for the product"""
  id: ID!

  """Main image"""
  image: MediaItem

  """The permalink of the post"""
  link: String

  """Connection between the Product type and the LocalProductAttribute type"""
  localAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection

  """Menu order"""
  menuOrder: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date product last updated"""
  modified: String

  """Product name"""
  name: String

  """Is product on sale?"""
  onSale: Boolean

  """Parent product"""
  parent: Product

  """Connection between the Product type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection

  """Product Currency"""
  productCurrency: String

  """Connection between the Product type and the productTag type"""
  productTags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection

  """Connection between the Product type and the productType type"""
  productTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection

  """Can product be purchased?"""
  purchasable: Boolean

  """Purchase note"""
  purchaseNote: String

  """Connection between the Product type and the Product type"""
  related(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """Product review count"""
  reviewCount: Int

  """Connection between the Product type and the Comment type"""
  reviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection

  """If reviews are allowed"""
  reviewsAllowed: Boolean

  """Connection between the Product type and the shippingClass type"""
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection

  """Product short description"""
  shortDescription(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Product SKU"""
  sku: String

  """Product slug"""
  slug: String

  """Product status"""
  status: String

  """Number total of sales"""
  totalSales: Int

  """Product type"""
  type: ProductTypesEnum

  """Connection between the Product type and the Product type"""
  upsell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToUpsellConnectionWhereArgs
  ): ProductToUpsellConnection

  """Connection between the Product type and the visibleProduct type"""
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection
}

"""Product attribute object"""
interface ProductAttribute {
  """Attribute ID"""
  attributeId: Int!

  """Attribute Global ID"""
  id: ID!

  """Attribute label"""
  label: String!

  """Attribute name"""
  name: String!

  """Attribute options"""
  options: [String]

  """Attribute position"""
  position: Int!

  """Product attribute scope."""
  scope: ProductAttributeTypesEnum!

  """Is attribute on product variation"""
  variation: Boolean!

  """Is attribute visible"""
  visible: Boolean!
}

"""Options for ordering the connection"""
input ProductAttributeInput {
  attributeName: String!
  attributeValue: String
}

"""A simple product attribute object"""
type ProductAttributeOutput {
  """Attribute name."""
  attributeName: String

  """Attribute value."""
  attributeValue: String
}

"""Product attribute type enumeration"""
enum ProductAttributeTypesEnum {
  """A global product attribute"""
  GLOBAL

  """A local product attribute"""
  LOCAL
}

"""The productCategory type"""
type ProductCategory implements DatabaseIdentifier & HierarchicalTermNode & MenuItemLinkable & Node & TermNode & UniformResourceIdentifiable {
  """
  The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ProductCategoryToAncestorsProductCategoryConnection

  """
  Connection between the productCategory type and the productCategory type
  """
  children(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductCategoryToProductCategoryConnectionWhereArgs
  ): ProductCategoryToProductCategoryConnection

  """Connection between the productCategory type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductCategoryToContentNodeConnectionWhereArgs
  ): ProductCategoryToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Product category display type"""
  display: ProductCategoryDisplay

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Product category image"""
  image: MediaItem

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """Product category menu order"""
  menuOrder: Int

  """The human friendly name of the object."""
  name: String

  """
  Connection between the productCategory type and the productCategory type
  """
  parent: ProductCategoryToParentProductCategoryConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The id field matches the WP_Post-&gt;ID field."""
  productCategoryId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the ProductCategory type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductCategoryToProductConnectionWhereArgs
  ): ProductCategoryToProductConnection

  """The Yoast SEO data of the Product categories taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the productCategory type and the Taxonomy type"""
  taxonomy: ProductCategoryToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""Product category display type enumeration"""
enum ProductCategoryDisplay {
  """Display both products and subcategories of this category."""
  BOTH

  """Display default content connected to this category."""
  DEFAULT

  """Display products associated with this category."""
  PRODUCTS

  """Display subcategories of this category."""
  SUBCATEGORIES
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum ProductCategoryIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""
Connection between the productCategory type and the productCategory type
"""
type ProductCategoryToAncestorsProductCategoryConnection {
  """
  Edges for the ProductCategoryToAncestorsProductCategoryConnection connection
  """
  edges: [ProductCategoryToAncestorsProductCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductCategory]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductCategoryToAncestorsProductCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductCategory
}

"""Connection between the productCategory type and the ContentNode type"""
type ProductCategoryToContentNodeConnection {
  """Edges for the ProductCategoryToContentNodeConnection connection"""
  edges: [ProductCategoryToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductCategoryToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the ProductCategoryToContentNodeConnection connection
"""
input ProductCategoryToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""
Connection between the productCategory type and the productCategory type
"""
type ProductCategoryToParentProductCategoryConnectionEdge {
  """The node of the connection, without the edges"""
  node: ProductCategory
}

"""
Connection between the productCategory type and the productCategory type
"""
type ProductCategoryToProductCategoryConnection {
  """Edges for the ProductCategoryToProductCategoryConnection connection"""
  edges: [ProductCategoryToProductCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductCategory]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductCategoryToProductCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductCategory
}

"""
Arguments for filtering the ProductCategoryToProductCategoryConnection connection
"""
input ProductCategoryToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the ProductCategory type and the Product type"""
type ProductCategoryToProductConnection {
  """Edges for the ProductCategoryToProductConnection connection"""
  edges: [ProductCategoryToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductCategoryToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the ProductCategoryToProductConnection connection
"""
input ProductCategoryToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the productCategory type and the Taxonomy type"""
type ProductCategoryToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""A product object"""
type ProductDownload {
  """Is file allowed"""
  allowedFileType: Boolean

  """Product download ID"""
  downloadId: String!

  """Download file"""
  file: String

  """Validate file exists"""
  fileExists: Boolean

  """File extension"""
  fileExt: String

  """Type of file path set"""
  filePathType: String

  """File type"""
  fileType: String

  """Product download name"""
  name: String
}

"""The Type of Identifier used to fetch a single Product. Default is ID."""
enum ProductIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """Unique store identifier for product."""
  SKU

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG
}

"""The productTag type"""
type ProductTag implements DatabaseIdentifier & MenuItemLinkable & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the productTag type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductTagToContentNodeConnectionWhereArgs
  ): ProductTagToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  productTagId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the ProductTag type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductTagToProductConnectionWhereArgs
  ): ProductTagToProductConnection

  """The Yoast SEO data of the Product tags taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the productTag type and the Taxonomy type"""
  taxonomy: ProductTagToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum ProductTagIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the productTag type and the ContentNode type"""
type ProductTagToContentNodeConnection {
  """Edges for the ProductTagToContentNodeConnection connection"""
  edges: [ProductTagToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductTagToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the ProductTagToContentNodeConnection connection
"""
input ProductTagToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the ProductTag type and the Product type"""
type ProductTagToProductConnection {
  """Edges for the ProductTagToProductConnection connection"""
  edges: [ProductTagToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductTagToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the ProductTagToProductConnection connection"""
input ProductTagToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the productTag type and the Taxonomy type"""
type ProductTagToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""Product taxonomies"""
enum ProductTaxonomyEnum {
  PAARCHITECTO
  PAASPERNATUR
  PAATQUE
  PACOLOR
  PACONSEQUATUR
  PACUM
  PADOLOR
  PADOLOREMQUE
  PADOLORES
  PADOLORUM
  PAEA
  PAEOS
  PAET
  PAEXCEPTURI
  PAEXPLICABO
  PAFACERE
  PAHARUM
  PAINCIDUNT
  PAIPSAM
  PAIUSTO
  PALAUDANTIUM
  PAMAGNAM
  PAMAGNI
  PAMINIMA
  PAMOLESTIAE
  PANIHIL
  PANON
  PANULLA
  PANUMERICSIZE
  PAOMNIS
  PAOPTIO
  PAPRAESENTIUM
  PAPROVIDENT
  PAQUAE
  PAQUI
  PAQUIA
  PAQUIDEM
  PAQUIS
  PAQUO
  PAREPELLENDUS
  PAREPREHENDERIT
  PARERUM
  PASIT
  PASIZE
  PATENETUR
  PAVEL
  PRODUCTCATEGORY
  PRODUCTTAG
  PRODUCTTYPE
  SHIPPINGCLASS
  VISIBLEPRODUCT
}

"""Product filter"""
input ProductTaxonomyFilterInput {
  """A list of term ids"""
  ids: [Int]

  """Filter operation type"""
  operator: TaxonomyOperatorEnum

  """Which field to select taxonomy term by."""
  taxonomy: ProductTaxonomyEnum!

  """A list of term slugs"""
  terms: [String]
}

"""Product taxonomy filter type"""
input ProductTaxonomyInput {
  """Product taxonomy rules to be filter results by"""
  filters: [ProductTaxonomyFilterInput]

  """Logic relation between each filter."""
  relation: RelationEnum
}

"""Connection between the Product type and the Comment type"""
type ProductToCommentConnection {
  """Average review rating for this product."""
  averageRating: Float

  """Edges for the ProductToCommentConnection connection"""
  edges: [ProductToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment

  """Review rating"""
  rating: Float
}

"""Arguments for filtering the ProductToCommentConnection connection"""
input ProductToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""
Connection between the Product type and the GlobalProductAttribute type
"""
type ProductToGlobalProductAttributeConnection {
  """Edges for the ProductToGlobalProductAttributeConnection connection"""
  edges: [ProductToGlobalProductAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [GlobalProductAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToGlobalProductAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: GlobalProductAttribute
}

"""
Arguments for filtering the ProductToGlobalProductAttributeConnection connection
"""
input ProductToGlobalProductAttributeConnectionWhereArgs {
  """Filter results by attribute scope."""
  type: ProductAttributeTypesEnum
}

"""Connection between the Product type and the LocalProductAttribute type"""
type ProductToLocalProductAttributeConnection {
  """Edges for the ProductToLocalProductAttributeConnection connection"""
  edges: [ProductToLocalProductAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [LocalProductAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToLocalProductAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: LocalProductAttribute
}

"""
Arguments for filtering the ProductToLocalProductAttributeConnection connection
"""
input ProductToLocalProductAttributeConnectionWhereArgs {
  """Filter results by attribute scope."""
  type: ProductAttributeTypesEnum
}

"""Connection between the Product type and the MediaItem type"""
type ProductToMediaItemConnection {
  """Edges for the ProductToMediaItemConnection connection"""
  edges: [ProductToMediaItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [MediaItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToMediaItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: MediaItem
}

"""Arguments for filtering the ProductToMediaItemConnection connection"""
input ProductToMediaItemConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the Product type and the paArchitecto type"""
type ProductToPaArchitectoConnection {
  """Edges for the ProductToPaArchitectoConnection connection"""
  edges: [ProductToPaArchitectoConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaArchitecto]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaArchitectoConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_architecto"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaArchitecto
}

"""Arguments for filtering the ProductToPaArchitectoConnection connection"""
input ProductToPaArchitectoConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paAspernatur type"""
type ProductToPaAspernaturConnection {
  """Edges for the ProductToPaAspernaturConnection connection"""
  edges: [ProductToPaAspernaturConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaAspernatur]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaAspernaturConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_aspernatur"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaAspernatur
}

"""Arguments for filtering the ProductToPaAspernaturConnection connection"""
input ProductToPaAspernaturConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paAtque type"""
type ProductToPaAtqueConnection {
  """Edges for the ProductToPaAtqueConnection connection"""
  edges: [ProductToPaAtqueConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaAtque]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaAtqueConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_atque"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaAtque
}

"""Arguments for filtering the ProductToPaAtqueConnection connection"""
input ProductToPaAtqueConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paColor type"""
type ProductToPaColorConnection {
  """Edges for the ProductToPaColorConnection connection"""
  edges: [ProductToPaColorConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaColor]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaColorConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_color"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaColor
}

"""Arguments for filtering the ProductToPaColorConnection connection"""
input ProductToPaColorConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paConsequatur type"""
type ProductToPaConsequaturConnection {
  """Edges for the ProductToPaConsequaturConnection connection"""
  edges: [ProductToPaConsequaturConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaConsequatur]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaConsequaturConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_consequatur"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaConsequatur
}

"""
Arguments for filtering the ProductToPaConsequaturConnection connection
"""
input ProductToPaConsequaturConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paCum type"""
type ProductToPaCumConnection {
  """Edges for the ProductToPaCumConnection connection"""
  edges: [ProductToPaCumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaCum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaCumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_cum"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaCum
}

"""Arguments for filtering the ProductToPaCumConnection connection"""
input ProductToPaCumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paDolor type"""
type ProductToPaDolorConnection {
  """Edges for the ProductToPaDolorConnection connection"""
  edges: [ProductToPaDolorConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDolor]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaDolorConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_dolor"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaDolor
}

"""Arguments for filtering the ProductToPaDolorConnection connection"""
input ProductToPaDolorConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paDoloremque type"""
type ProductToPaDoloremqueConnection {
  """Edges for the ProductToPaDoloremqueConnection connection"""
  edges: [ProductToPaDoloremqueConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDoloremque]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaDoloremqueConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_doloremque"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaDoloremque
}

"""Arguments for filtering the ProductToPaDoloremqueConnection connection"""
input ProductToPaDoloremqueConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paDolores type"""
type ProductToPaDoloresConnection {
  """Edges for the ProductToPaDoloresConnection connection"""
  edges: [ProductToPaDoloresConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDolores]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaDoloresConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_dolores"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaDolores
}

"""Arguments for filtering the ProductToPaDoloresConnection connection"""
input ProductToPaDoloresConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paDolorum type"""
type ProductToPaDolorumConnection {
  """Edges for the ProductToPaDolorumConnection connection"""
  edges: [ProductToPaDolorumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDolorum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaDolorumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_dolorum"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaDolorum
}

"""Arguments for filtering the ProductToPaDolorumConnection connection"""
input ProductToPaDolorumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paEa type"""
type ProductToPaEaConnection {
  """Edges for the ProductToPaEaConnection connection"""
  edges: [ProductToPaEaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaEa]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaEaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_ea"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaEa
}

"""Arguments for filtering the ProductToPaEaConnection connection"""
input ProductToPaEaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paEos type"""
type ProductToPaEosConnection {
  """Edges for the ProductToPaEosConnection connection"""
  edges: [ProductToPaEosConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaEos]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaEosConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_eos"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaEos
}

"""Arguments for filtering the ProductToPaEosConnection connection"""
input ProductToPaEosConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paEt type"""
type ProductToPaEtConnection {
  """Edges for the ProductToPaEtConnection connection"""
  edges: [ProductToPaEtConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaEt]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaEtConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_et"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaEt
}

"""Arguments for filtering the ProductToPaEtConnection connection"""
input ProductToPaEtConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paExcepturi type"""
type ProductToPaExcepturiConnection {
  """Edges for the ProductToPaExcepturiConnection connection"""
  edges: [ProductToPaExcepturiConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaExcepturi]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaExcepturiConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_excepturi"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaExcepturi
}

"""Arguments for filtering the ProductToPaExcepturiConnection connection"""
input ProductToPaExcepturiConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paExplicabo type"""
type ProductToPaExplicaboConnection {
  """Edges for the ProductToPaExplicaboConnection connection"""
  edges: [ProductToPaExplicaboConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaExplicabo]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaExplicaboConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_explicabo"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaExplicabo
}

"""Arguments for filtering the ProductToPaExplicaboConnection connection"""
input ProductToPaExplicaboConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paFacere type"""
type ProductToPaFacereConnection {
  """Edges for the ProductToPaFacereConnection connection"""
  edges: [ProductToPaFacereConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaFacere]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaFacereConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_facere"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaFacere
}

"""Arguments for filtering the ProductToPaFacereConnection connection"""
input ProductToPaFacereConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paHarum type"""
type ProductToPaHarumConnection {
  """Edges for the ProductToPaHarumConnection connection"""
  edges: [ProductToPaHarumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaHarum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaHarumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_harum"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaHarum
}

"""Arguments for filtering the ProductToPaHarumConnection connection"""
input ProductToPaHarumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paIncidunt type"""
type ProductToPaInciduntConnection {
  """Edges for the ProductToPaInciduntConnection connection"""
  edges: [ProductToPaInciduntConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaIncidunt]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaInciduntConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_incidunt"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaIncidunt
}

"""Arguments for filtering the ProductToPaInciduntConnection connection"""
input ProductToPaInciduntConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paIpsam type"""
type ProductToPaIpsamConnection {
  """Edges for the ProductToPaIpsamConnection connection"""
  edges: [ProductToPaIpsamConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaIpsam]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaIpsamConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_ipsam"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaIpsam
}

"""Arguments for filtering the ProductToPaIpsamConnection connection"""
input ProductToPaIpsamConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paIusto type"""
type ProductToPaIustoConnection {
  """Edges for the ProductToPaIustoConnection connection"""
  edges: [ProductToPaIustoConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaIusto]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaIustoConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_iusto"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaIusto
}

"""Arguments for filtering the ProductToPaIustoConnection connection"""
input ProductToPaIustoConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paLaudantium type"""
type ProductToPaLaudantiumConnection {
  """Edges for the ProductToPaLaudantiumConnection connection"""
  edges: [ProductToPaLaudantiumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaLaudantium]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaLaudantiumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_laudantium"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaLaudantium
}

"""Arguments for filtering the ProductToPaLaudantiumConnection connection"""
input ProductToPaLaudantiumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paMagnam type"""
type ProductToPaMagnamConnection {
  """Edges for the ProductToPaMagnamConnection connection"""
  edges: [ProductToPaMagnamConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMagnam]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaMagnamConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_magnam"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaMagnam
}

"""Arguments for filtering the ProductToPaMagnamConnection connection"""
input ProductToPaMagnamConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paMagni type"""
type ProductToPaMagniConnection {
  """Edges for the ProductToPaMagniConnection connection"""
  edges: [ProductToPaMagniConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMagni]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaMagniConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_magni"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaMagni
}

"""Arguments for filtering the ProductToPaMagniConnection connection"""
input ProductToPaMagniConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paMinima type"""
type ProductToPaMinimaConnection {
  """Edges for the ProductToPaMinimaConnection connection"""
  edges: [ProductToPaMinimaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMinima]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaMinimaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_minima"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaMinima
}

"""Arguments for filtering the ProductToPaMinimaConnection connection"""
input ProductToPaMinimaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paMolestiae type"""
type ProductToPaMolestiaeConnection {
  """Edges for the ProductToPaMolestiaeConnection connection"""
  edges: [ProductToPaMolestiaeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMolestiae]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaMolestiaeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_molestiae"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaMolestiae
}

"""Arguments for filtering the ProductToPaMolestiaeConnection connection"""
input ProductToPaMolestiaeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paNihil type"""
type ProductToPaNihilConnection {
  """Edges for the ProductToPaNihilConnection connection"""
  edges: [ProductToPaNihilConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNihil]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaNihilConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_nihil"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaNihil
}

"""Arguments for filtering the ProductToPaNihilConnection connection"""
input ProductToPaNihilConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paNon type"""
type ProductToPaNonConnection {
  """Edges for the ProductToPaNonConnection connection"""
  edges: [ProductToPaNonConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNon]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaNonConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_non"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaNon
}

"""Arguments for filtering the ProductToPaNonConnection connection"""
input ProductToPaNonConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paNulla type"""
type ProductToPaNullaConnection {
  """Edges for the ProductToPaNullaConnection connection"""
  edges: [ProductToPaNullaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNulla]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaNullaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_nulla"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaNulla
}

"""Arguments for filtering the ProductToPaNullaConnection connection"""
input ProductToPaNullaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paNumericSize type"""
type ProductToPaNumericSizeConnection {
  """Edges for the ProductToPaNumericSizeConnection connection"""
  edges: [ProductToPaNumericSizeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNumericSize]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaNumericSizeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_numeric-size"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaNumericSize
}

"""
Arguments for filtering the ProductToPaNumericSizeConnection connection
"""
input ProductToPaNumericSizeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paOmnis type"""
type ProductToPaOmnisConnection {
  """Edges for the ProductToPaOmnisConnection connection"""
  edges: [ProductToPaOmnisConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaOmnis]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaOmnisConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_omnis"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaOmnis
}

"""Arguments for filtering the ProductToPaOmnisConnection connection"""
input ProductToPaOmnisConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paOptio type"""
type ProductToPaOptioConnection {
  """Edges for the ProductToPaOptioConnection connection"""
  edges: [ProductToPaOptioConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaOptio]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaOptioConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_optio"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaOptio
}

"""Arguments for filtering the ProductToPaOptioConnection connection"""
input ProductToPaOptioConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paPraesentium type"""
type ProductToPaPraesentiumConnection {
  """Edges for the ProductToPaPraesentiumConnection connection"""
  edges: [ProductToPaPraesentiumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaPraesentium]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaPraesentiumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_praesentium"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaPraesentium
}

"""
Arguments for filtering the ProductToPaPraesentiumConnection connection
"""
input ProductToPaPraesentiumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paProvident type"""
type ProductToPaProvidentConnection {
  """Edges for the ProductToPaProvidentConnection connection"""
  edges: [ProductToPaProvidentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaProvident]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaProvidentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_provident"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaProvident
}

"""Arguments for filtering the ProductToPaProvidentConnection connection"""
input ProductToPaProvidentConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paQuae type"""
type ProductToPaQuaeConnection {
  """Edges for the ProductToPaQuaeConnection connection"""
  edges: [ProductToPaQuaeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuae]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaQuaeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_quae"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaQuae
}

"""Arguments for filtering the ProductToPaQuaeConnection connection"""
input ProductToPaQuaeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paQui type"""
type ProductToPaQuiConnection {
  """Edges for the ProductToPaQuiConnection connection"""
  edges: [ProductToPaQuiConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQui]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaQuiConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_qui"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaQui
}

"""Arguments for filtering the ProductToPaQuiConnection connection"""
input ProductToPaQuiConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paQuia type"""
type ProductToPaQuiaConnection {
  """Edges for the ProductToPaQuiaConnection connection"""
  edges: [ProductToPaQuiaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuia]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaQuiaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_quia"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaQuia
}

"""Arguments for filtering the ProductToPaQuiaConnection connection"""
input ProductToPaQuiaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paQuidem type"""
type ProductToPaQuidemConnection {
  """Edges for the ProductToPaQuidemConnection connection"""
  edges: [ProductToPaQuidemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuidem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaQuidemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_quidem"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaQuidem
}

"""Arguments for filtering the ProductToPaQuidemConnection connection"""
input ProductToPaQuidemConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paQuis type"""
type ProductToPaQuisConnection {
  """Edges for the ProductToPaQuisConnection connection"""
  edges: [ProductToPaQuisConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuis]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaQuisConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_quis"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaQuis
}

"""Arguments for filtering the ProductToPaQuisConnection connection"""
input ProductToPaQuisConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paQuo type"""
type ProductToPaQuoConnection {
  """Edges for the ProductToPaQuoConnection connection"""
  edges: [ProductToPaQuoConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuo]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaQuoConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_quo"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaQuo
}

"""Arguments for filtering the ProductToPaQuoConnection connection"""
input ProductToPaQuoConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paRepellendus type"""
type ProductToPaRepellendusConnection {
  """Edges for the ProductToPaRepellendusConnection connection"""
  edges: [ProductToPaRepellendusConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaRepellendus]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaRepellendusConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_repellendus"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaRepellendus
}

"""
Arguments for filtering the ProductToPaRepellendusConnection connection
"""
input ProductToPaRepellendusConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paReprehenderit type"""
type ProductToPaReprehenderitConnection {
  """Edges for the ProductToPaReprehenderitConnection connection"""
  edges: [ProductToPaReprehenderitConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaReprehenderit]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaReprehenderitConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_reprehenderit"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaReprehenderit
}

"""
Arguments for filtering the ProductToPaReprehenderitConnection connection
"""
input ProductToPaReprehenderitConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paRerum type"""
type ProductToPaRerumConnection {
  """Edges for the ProductToPaRerumConnection connection"""
  edges: [ProductToPaRerumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaRerum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaRerumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_rerum"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaRerum
}

"""Arguments for filtering the ProductToPaRerumConnection connection"""
input ProductToPaRerumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paSit type"""
type ProductToPaSitConnection {
  """Edges for the ProductToPaSitConnection connection"""
  edges: [ProductToPaSitConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaSit]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaSitConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_sit"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaSit
}

"""Arguments for filtering the ProductToPaSitConnection connection"""
input ProductToPaSitConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paSize type"""
type ProductToPaSizeConnection {
  """Edges for the ProductToPaSizeConnection connection"""
  edges: [ProductToPaSizeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaSize]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaSizeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_size"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaSize
}

"""Arguments for filtering the ProductToPaSizeConnection connection"""
input ProductToPaSizeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paTenetur type"""
type ProductToPaTeneturConnection {
  """Edges for the ProductToPaTeneturConnection connection"""
  edges: [ProductToPaTeneturConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaTenetur]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaTeneturConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_tenetur"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaTenetur
}

"""Arguments for filtering the ProductToPaTeneturConnection connection"""
input ProductToPaTeneturConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the paVel type"""
type ProductToPaVelConnection {
  """Edges for the ProductToPaVelConnection connection"""
  edges: [ProductToPaVelConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaVel]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToPaVelConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary pa_vel"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: PaVel
}

"""Arguments for filtering the ProductToPaVelConnection connection"""
input ProductToPaVelConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the ProductAttribute type"""
type ProductToProductAttributeConnection {
  """Edges for the ProductToProductAttributeConnection connection"""
  edges: [ProductToProductAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToProductAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductAttribute
}

"""
Arguments for filtering the ProductToProductAttributeConnection connection
"""
input ProductToProductAttributeConnectionWhereArgs {
  """Filter results by attribute scope."""
  type: ProductAttributeTypesEnum
}

"""Connection between the Product type and the productCategory type"""
type ProductToProductCategoryConnection {
  """Edges for the ProductToProductCategoryConnection connection"""
  edges: [ProductToProductCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductCategory]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToProductCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary product_cat"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: ProductCategory
}

"""
Arguments for filtering the ProductToProductCategoryConnection connection
"""
input ProductToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the Product type"""
type ProductToProductConnection {
  """Edges for the ProductToProductConnection connection"""
  edges: [ProductToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the ProductToProductConnection connection"""
input ProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """Shuffle results? (Pagination currently not support by this argument)"""
  shuffle: Boolean

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the Product type and the productTag type"""
type ProductToProductTagConnection {
  """Edges for the ProductToProductTagConnection connection"""
  edges: [ProductToProductTagConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductTag]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToProductTagConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary product_tag"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: ProductTag
}

"""Arguments for filtering the ProductToProductTagConnection connection"""
input ProductToProductTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the productType type"""
type ProductToProductTypeConnection {
  """Edges for the ProductToProductTypeConnection connection"""
  edges: [ProductToProductTypeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductType]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToProductTypeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary product_type"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: ProductType
}

"""Arguments for filtering the ProductToProductTypeConnection connection"""
input ProductToProductTypeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the shippingClass type"""
type ProductToShippingClassConnection {
  """Edges for the ProductToShippingClassConnection connection"""
  edges: [ProductToShippingClassConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ShippingClass]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToShippingClassConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary product_shipping_class"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: ShippingClass
}

"""
Arguments for filtering the ProductToShippingClassConnection connection
"""
input ProductToShippingClassConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the Product type and the Product type"""
type ProductToUpsellConnection {
  """Edges for the ProductToUpsellConnection connection"""
  edges: [ProductToUpsellConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToUpsellConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the ProductToUpsellConnection connection"""
input ProductToUpsellConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the Product type and the visibleProduct type"""
type ProductToVisibleProductConnection {
  """Edges for the ProductToVisibleProductConnection connection"""
  edges: [ProductToVisibleProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VisibleProduct]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductToVisibleProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The Yoast SEO Primary product_visibility"""
  isPrimary: Boolean

  """The item at the end of the edge"""
  node: VisibleProduct
}

"""
Arguments for filtering the ProductToVisibleProductConnection connection
"""
input ProductToVisibleProductConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""The productType type"""
type ProductType implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the productType type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductTypeToContentNodeConnectionWhereArgs
  ): ProductTypeToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The id field matches the WP_Post-&gt;ID field."""
  productTypeId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """The Yoast SEO data of the Product type taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the productType type and the Taxonomy type"""
  taxonomy: ProductTypeToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum ProductTypeIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the productType type and the ContentNode type"""
type ProductTypeToContentNodeConnection {
  """Edges for the ProductTypeToContentNodeConnection connection"""
  edges: [ProductTypeToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductTypeToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the ProductTypeToContentNodeConnection connection
"""
input ProductTypeToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the productType type and the Taxonomy type"""
type ProductTypeToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""Product type enumeration"""
enum ProductTypesEnum {
  """An external product"""
  EXTERNAL

  """A product group"""
  GROUPED

  """A simple product"""
  SIMPLE

  """A variable product"""
  VARIABLE

  """A product variation"""
  VARIATION
}

"""A product variation object"""
type ProductVariation implements ContentNode & DatabaseIdentifier & Node & NodeWithFeaturedImage & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: ProductVariation_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: ProductVariation_Acfblockstaff

  """
  Connection between the ProductVariation type and the VariationAttribute type
  """
  attributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ProductVariationToVariationAttributeConnection

  """Product variation backorders"""
  backorders: BackordersEnum

  """Can product be backordered?"""
  backordersAllowed: Boolean

  """Product variation catalog visibility"""
  catalogVisibility: CatalogVisibilityEnum

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The ID of the refund in the database"""
  databaseId: Int!

  """Date variation created"""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """Date on sale from"""
  dateOnSaleFrom: String

  """Date on sale to"""
  dateOnSaleTo: String

  """Product description"""
  description: String

  """The desired slug of the post"""
  desiredSlug: String

  """Download expiry"""
  downloadExpiry: Int

  """Download limit"""
  downloadLimit: Int

  """Is downloadable?"""
  downloadable: Boolean

  """Product downloads"""
  downloads: [ProductDownload]

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """Does product variation have any visible attributes"""
  hasAttributes: Boolean

  """Product variation height"""
  height: String

  """The globally unique identifier for the product variation"""
  id: ID!

  """Product variation main image"""
  image: MediaItem

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """Product variation length"""
  length: String

  """The permalink of the post"""
  link: String

  """if/how product variation stock is managed"""
  manageStock: ManageStockEnum

  """Menu order"""
  menuOrder: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date variation last updated"""
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Product name"""
  name: String

  """Is variation on sale?"""
  onSale: Boolean

  """The parent of the node. The parent object can be of various types"""
  parent: ProductVariationToVariableProductConnectionEdge

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """Product variation&#039;s active price"""
  price(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """If product variation can be bought"""
  purchasable: Boolean

  """Product variation purchase_note"""
  purchaseNote: String

  """Product variation&#039;s regular price"""
  regularPrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Product variation&#039;s sale price"""
  salePrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """Product variation shipping class"""
  shippingClass: String

  """
  Connection between the ProductVariation type and the shippingClass type
  """
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductVariationToShippingClassConnectionWhereArgs
  ): ProductVariationToShippingClassConnection

  """Product variation SKU (Stock-keeping unit)"""
  sku: String

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """Variation status"""
  status: String

  """Product variation stock quantity"""
  stockQuantity: Int

  """Product stock status"""
  stockStatus: StockStatusEnum

  """Product variation tax class"""
  taxClass: TaxClassEnum

  """Tax status"""
  taxStatus: TaxStatusEnum

  """The template assigned to a node of content"""
  template: ContentTemplate

  """Product type"""
  type: ProductTypesEnum

  """The unique resource identifier path"""
  uri: String

  """Is product virtual?"""
  virtual: Boolean

  """
  Connection between the ProductVariation type and the visibleProduct type
  """
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductVariationToVisibleProductConnectionWhereArgs
  ): ProductVariationToVisibleProductConnection

  """Product variation weight"""
  weight: String

  """Product variation width"""
  width: String
}

"""
The Type of Identifier used to fetch a single ProductVariation. Default is ID.
"""
enum ProductVariationIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""
Connection between the ProductVariation type and the shippingClass type
"""
type ProductVariationToShippingClassConnection {
  """Edges for the ProductVariationToShippingClassConnection connection"""
  edges: [ProductVariationToShippingClassConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ShippingClass]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductVariationToShippingClassConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ShippingClass
}

"""
Arguments for filtering the ProductVariationToShippingClassConnection connection
"""
input ProductVariationToShippingClassConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""
Connection between the ProductVariation type and the VariableProduct type
"""
type ProductVariationToVariableProductConnectionEdge {
  """The node of the connection, without the edges"""
  node: VariableProduct
}

"""
Connection between the ProductVariation type and the VariationAttribute type
"""
type ProductVariationToVariationAttributeConnection {
  """
  Edges for the ProductVariationToVariationAttributeConnection connection
  """
  edges: [ProductVariationToVariationAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VariationAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductVariationToVariationAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VariationAttribute
}

"""
Connection between the ProductVariation type and the visibleProduct type
"""
type ProductVariationToVisibleProductConnection {
  """Edges for the ProductVariationToVisibleProductConnection connection"""
  edges: [ProductVariationToVisibleProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VisibleProduct]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ProductVariationToVisibleProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VisibleProduct
}

"""
Arguments for filtering the ProductVariationToVisibleProductConnection connection
"""
input ProductVariationToVisibleProductConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Field Group"""
type ProductVariation_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [ProductVariation_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type ProductVariation_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type ProductVariation_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""Fields to order the Products connection by"""
enum ProductsOrderByEnum {
  """Order by publish date"""
  DATE

  """Preserve the ID order given in the IN array"""
  IN

  """Order by the menu order value"""
  MENU_ORDER

  """Order by last modified date"""
  MODIFIED

  """Preserve slug order given in the NAME_IN array"""
  NAME_IN

  """Order by date product sale starts"""
  ON_SALE_FROM

  """Order by date product sale ends"""
  ON_SALE_TO

  """Order by parent ID"""
  PARENT

  """Order by product's current price"""
  PRICE

  """Order by product average rating"""
  RATING

  """Order by product's regular price"""
  REGULAR_PRICE

  """Order by number of reviews on product"""
  REVIEW_COUNT

  """Order by product's sale price"""
  SALE_PRICE

  """Order by slug"""
  SLUG

  """Order by total sales of products sold"""
  TOTAL_SALES
}

"""Options for ordering the connection"""
input ProductsOrderbyInput {
  field: ProductsOrderByEnum!
  order: OrderEnum
}

"""The reading setting type"""
type ReadingSettings {
  """The ID of the page that should display the latest posts"""
  pageForPosts: Int

  """The ID of the page that should be displayed on the front page"""
  pageOnFront: Int

  """Blog pages show at most."""
  postsPerPage: Int

  """What to show on the front page"""
  showOnFront: String
}

"""Input for the refreshJwtAuthToken mutation"""
input RefreshJwtAuthTokenInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """
  A valid, previously issued JWT refresh token. If valid a new Auth token will be provided. If invalid, expired, revoked or otherwise invalid, a new AuthToken will not be provided.
  """
  jwtRefreshToken: String!
}

"""The payload for the refreshJwtAuthToken mutation"""
type RefreshJwtAuthTokenPayload {
  """JWT Token that can be used in future requests for Authentication"""
  authToken: String

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""A refund object"""
type Refund implements Node {
  """Refunded amount"""
  amount: Float

  """The ID of the refund in the database"""
  databaseId: Int

  """The date of the refund"""
  date: String

  """The globally unique identifier for the refund"""
  id: ID!

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Reason for refund"""
  reason: String

  """User who completed the refund"""
  refundedBy: User

  """A title for the new post type"""
  title: String
}

"""The Type of Identifier used to fetch a single Refund. Default is ID."""
enum RefundIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""Input for the registerCustomer mutation"""
input RegisterCustomerInput {
  """User's AOL IM account."""
  aim: String

  """Customer billing information"""
  billing: CustomerAddressInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """A string containing content about the user."""
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """A string containing the user's email address."""
  email: String

  """	The user's first name."""
  firstName: String

  """User's Jabber account."""
  jabber: String

  """The user's last name."""
  lastName: String

  """User's locale."""
  locale: String

  """Meta data."""
  metaData: [MetaDataInput]

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """The user's nickname, defaults to the user's username."""
  nickname: String

  """A string that contains the plain text password for the user."""
  password: String

  """The date the user registered. Format is Y-m-d H:i:s."""
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """Customer shipping address"""
  shipping: CustomerAddressInput

  """Customer shipping is identical to billing address"""
  shippingSameAsBilling: Boolean

  """A string that contains the user's username."""
  username: String

  """A string containing the user's URL for the user's web site."""
  websiteUrl: String

  """User's Yahoo IM account."""
  yim: String
}

"""The payload for the registerCustomer mutation"""
type RegisterCustomerPayload {
  """JWT Token that can be used in future requests for Authentication"""
  authToken: String

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  customer: Customer

  """
  A JWT token that can be used in future requests to get a refreshed jwtAuthToken. If the refresh token used in a request is revoked or otherwise invalid, a valid Auth token will NOT be issued in the response headers.
  """
  refreshToken: String

  """"""
  viewer: User
}

"""Input for the registerUser mutation"""
input RegisterUserInput {
  """User's AOL IM account."""
  aim: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """A string containing content about the user."""
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """A string containing the user's email address."""
  email: String

  """	The user's first name."""
  firstName: String

  """User's Jabber account."""
  jabber: String

  """The user's last name."""
  lastName: String

  """User's locale."""
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """The user's nickname, defaults to the user's username."""
  nickname: String

  """A string that contains the plain text password for the user."""
  password: String

  """If true, this will refresh the users JWT secret."""
  refreshJwtUserSecret: Boolean

  """The date the user registered. Format is Y-m-d H:i:s."""
  registered: String

  """
  If true, this will revoke the users JWT secret. If false, this will unrevoke the JWT secret AND issue a new one. To revoke, the user must have proper capabilities to edit users JWT secrets.
  """
  revokeJwtUserSecret: Boolean

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """A string that contains the user's username."""
  username: String!

  """A string containing the user's URL for the user's web site."""
  websiteUrl: String

  """User's Yahoo IM account."""
  yim: String
}

"""The payload for the registerUser mutation"""
type RegisterUserPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The User object mutation type."""
  user: User
}

"""
The logical relation between each item in the array when there are more than one.
"""
enum RelationEnum {
  """
  The logical AND condition returns true if both operands are true, otherwise, it returns false.
  """
  AND

  """
  The logical OR condition returns false if both operands are false, otherwise, it returns true.
  """
  OR
}

"""Input for the removeCoupons mutation"""
input RemoveCouponsInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Code of coupon being applied"""
  codes: [String]
}

"""The payload for the removeCoupons mutation"""
type RemoveCouponsPayload {
  """"""
  cart: Cart

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the removeFromWishlist mutation"""
input RemoveFromWishlistInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Product id"""
  productId: Int
}

"""The payload for the removeFromWishlist mutation"""
type RemoveFromWishlistPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Description of the error"""
  error: String

  """The Product id that was deleted"""
  productId: Int

  """True if the product is removed, false otherwise"""
  removed: Boolean

  """The Product ids in the wishlist"""
  wishlistProductIds: [Int]
}

"""Input for the removeItemsFromCart mutation"""
input RemoveItemsFromCartInput {
  """Remove all cart items"""
  all: Boolean

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Item keys of the items being removed"""
  keys: [ID]
}

"""The payload for the removeItemsFromCart mutation"""
type RemoveItemsFromCartPayload {
  """"""
  cart: Cart

  """"""
  cartItems: [CartItem]

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the resetUserPassword mutation"""
input ResetUserPasswordInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Password reset key"""
  key: String

  """The user's login (username)."""
  login: String

  """The new password."""
  password: String
}

"""The payload for the resetUserPassword mutation"""
type ResetUserPasswordPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The User object mutation type."""
  user: User
}

"""Input for the restoreCartItems mutation"""
input RestoreCartItemsInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Cart item key of the item being removed"""
  keys: [ID]
}

"""The payload for the restoreCartItems mutation"""
type RestoreCartItemsPayload {
  """"""
  cart: Cart

  """"""
  cartItems: [CartItem]

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the restoreComment mutation"""
input RestoreCommentInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the comment to be restored"""
  id: ID!
}

"""The payload for the restoreComment mutation"""
type RestoreCommentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The restored comment object"""
  comment: Comment

  """The ID of the restored comment"""
  restoredId: ID
}

"""Input for the restoreReview mutation"""
input RestoreReviewInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The ID of the target product review"""
  id: ID!
}

"""The payload for the restoreReview mutation"""
type RestoreReviewPayload {
  """The affected product review ID"""
  affectedId: ID

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The product rating of the affected product review"""
  rating: Float

  """The affected product review"""
  review: Comment
}

"""The ReusableBlock type"""
type ReusableBlock implements BlockEditorContentNode & ContentNode & DatabaseIdentifier & MenuItemLinkable & Node & NodeWithContentEditor & NodeWithRevisions & NodeWithTemplate & NodeWithTitle & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: ReusableBlock_Acfblocksliderswiperjs

  """Gutenberg blocks"""
  blocks: [Block!]

  """Gutenberg blocks as json string"""
  blocksJSON: String

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """The globally unique identifier of the wp_block object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Connection between the ReusableBlock type and the ReusableBlock type"""
  preview: ReusableBlockToPreviewConnectionEdge

  """Previewed gutenberg blocks"""
  previewBlocks: [Block!]

  """Previewed gutenberg blocks"""
  previewBlocksFrom(databaseId: Int!): [Block!]

  """Previewed gutenberg blocks as json string"""
  previewBlocksFromJSON(databaseId: Int!): String

  """Previewed Gutenberg blocks as json string"""
  previewBlocksJSON: String

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """The id field matches the WP_Post-&gt;ID field."""
  reusableBlockId: Int! @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge

  """Connection between the ReusableBlock type and the ReusableBlock type"""
  revisions(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ReusableBlockToRevisionConnectionWhereArgs
  ): ReusableBlockToRevisionConnection

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: ContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum ReusableBlockIdType {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG

  """Identify a resource by the URI."""
  URI
}

"""Connection between the ReusableBlock type and the ReusableBlock type"""
type ReusableBlockToPreviewConnectionEdge {
  """The node of the connection, without the edges"""
  node: ReusableBlock
}

"""Connection between the ReusableBlock type and the ReusableBlock type"""
type ReusableBlockToRevisionConnection {
  """Edges for the ReusableBlockToRevisionConnection connection"""
  edges: [ReusableBlockToRevisionConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ReusableBlock]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ReusableBlockToRevisionConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ReusableBlock
}

"""
Arguments for filtering the ReusableBlockToRevisionConnection connection
"""
input ReusableBlockToRevisionConnectionWhereArgs {
  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Field Group"""
type ReusableBlock_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [ReusableBlock_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type ReusableBlock_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""The root mutation"""
type RootMutation {
  """The payload for the addCartItems mutation"""
  addCartItems(
    """Input for the addCartItems mutation"""
    input: AddCartItemsInput!
  ): AddCartItemsPayload

  """The payload for the addFee mutation"""
  addFee(
    """Input for the addFee mutation"""
    input: AddFeeInput!
  ): AddFeePayload

  """The payload for the addToCart mutation"""
  addToCart(
    """Input for the addToCart mutation"""
    input: AddToCartInput!
  ): AddToCartPayload

  """The payload for the addToWishlist mutation"""
  addToWishlist(
    """Input for the addToWishlist mutation"""
    input: AddToWishlistInput!
  ): AddToWishlistPayload

  """The payload for the applyCoupon mutation"""
  applyCoupon(
    """Input for the applyCoupon mutation"""
    input: ApplyCouponInput!
  ): ApplyCouponPayload

  """The payload for the checkout mutation"""
  checkout(
    """Input for the checkout mutation"""
    input: CheckoutInput!
  ): CheckoutPayload

  """The payload for the createCategory mutation"""
  createCategory(
    """Input for the createCategory mutation"""
    input: CreateCategoryInput!
  ): CreateCategoryPayload

  """The payload for the createComment mutation"""
  createComment(
    """Input for the createComment mutation"""
    input: CreateCommentInput!
  ): CreateCommentPayload

  """The payload for the createCoupon mutation"""
  createCoupon(
    """Input for the createCoupon mutation"""
    input: CreateCouponInput!
  ): CreateCouponPayload

  """The payload for the createMediaItem mutation"""
  createMediaItem(
    """Input for the createMediaItem mutation"""
    input: CreateMediaItemInput!
  ): CreateMediaItemPayload

  """The payload for the createOrder mutation"""
  createOrder(
    """Input for the createOrder mutation"""
    input: CreateOrderInput!
  ): CreateOrderPayload

  """The payload for the createPaArchitecto mutation"""
  createPaArchitecto(
    """Input for the createPaArchitecto mutation"""
    input: CreatePaArchitectoInput!
  ): CreatePaArchitectoPayload

  """The payload for the createPaAspernatur mutation"""
  createPaAspernatur(
    """Input for the createPaAspernatur mutation"""
    input: CreatePaAspernaturInput!
  ): CreatePaAspernaturPayload

  """The payload for the createPaAtque mutation"""
  createPaAtque(
    """Input for the createPaAtque mutation"""
    input: CreatePaAtqueInput!
  ): CreatePaAtquePayload

  """The payload for the createPaColor mutation"""
  createPaColor(
    """Input for the createPaColor mutation"""
    input: CreatePaColorInput!
  ): CreatePaColorPayload

  """The payload for the createPaConsequatur mutation"""
  createPaConsequatur(
    """Input for the createPaConsequatur mutation"""
    input: CreatePaConsequaturInput!
  ): CreatePaConsequaturPayload

  """The payload for the createPaCum mutation"""
  createPaCum(
    """Input for the createPaCum mutation"""
    input: CreatePaCumInput!
  ): CreatePaCumPayload

  """The payload for the createPaDolor mutation"""
  createPaDolor(
    """Input for the createPaDolor mutation"""
    input: CreatePaDolorInput!
  ): CreatePaDolorPayload

  """The payload for the createPaDoloremque mutation"""
  createPaDoloremque(
    """Input for the createPaDoloremque mutation"""
    input: CreatePaDoloremqueInput!
  ): CreatePaDoloremquePayload

  """The payload for the createPaDolores mutation"""
  createPaDolores(
    """Input for the createPaDolores mutation"""
    input: CreatePaDoloresInput!
  ): CreatePaDoloresPayload

  """The payload for the createPaDolorum mutation"""
  createPaDolorum(
    """Input for the createPaDolorum mutation"""
    input: CreatePaDolorumInput!
  ): CreatePaDolorumPayload

  """The payload for the createPaEa mutation"""
  createPaEa(
    """Input for the createPaEa mutation"""
    input: CreatePaEaInput!
  ): CreatePaEaPayload

  """The payload for the createPaEos mutation"""
  createPaEos(
    """Input for the createPaEos mutation"""
    input: CreatePaEosInput!
  ): CreatePaEosPayload

  """The payload for the createPaEt mutation"""
  createPaEt(
    """Input for the createPaEt mutation"""
    input: CreatePaEtInput!
  ): CreatePaEtPayload

  """The payload for the createPaExcepturi mutation"""
  createPaExcepturi(
    """Input for the createPaExcepturi mutation"""
    input: CreatePaExcepturiInput!
  ): CreatePaExcepturiPayload

  """The payload for the createPaExplicabo mutation"""
  createPaExplicabo(
    """Input for the createPaExplicabo mutation"""
    input: CreatePaExplicaboInput!
  ): CreatePaExplicaboPayload

  """The payload for the createPaFacere mutation"""
  createPaFacere(
    """Input for the createPaFacere mutation"""
    input: CreatePaFacereInput!
  ): CreatePaFacerePayload

  """The payload for the createPaHarum mutation"""
  createPaHarum(
    """Input for the createPaHarum mutation"""
    input: CreatePaHarumInput!
  ): CreatePaHarumPayload

  """The payload for the createPaIncidunt mutation"""
  createPaIncidunt(
    """Input for the createPaIncidunt mutation"""
    input: CreatePaInciduntInput!
  ): CreatePaInciduntPayload

  """The payload for the createPaIpsam mutation"""
  createPaIpsam(
    """Input for the createPaIpsam mutation"""
    input: CreatePaIpsamInput!
  ): CreatePaIpsamPayload

  """The payload for the createPaIusto mutation"""
  createPaIusto(
    """Input for the createPaIusto mutation"""
    input: CreatePaIustoInput!
  ): CreatePaIustoPayload

  """The payload for the createPaLaudantium mutation"""
  createPaLaudantium(
    """Input for the createPaLaudantium mutation"""
    input: CreatePaLaudantiumInput!
  ): CreatePaLaudantiumPayload

  """The payload for the createPaMagnam mutation"""
  createPaMagnam(
    """Input for the createPaMagnam mutation"""
    input: CreatePaMagnamInput!
  ): CreatePaMagnamPayload

  """The payload for the createPaMagni mutation"""
  createPaMagni(
    """Input for the createPaMagni mutation"""
    input: CreatePaMagniInput!
  ): CreatePaMagniPayload

  """The payload for the createPaMinima mutation"""
  createPaMinima(
    """Input for the createPaMinima mutation"""
    input: CreatePaMinimaInput!
  ): CreatePaMinimaPayload

  """The payload for the createPaMolestiae mutation"""
  createPaMolestiae(
    """Input for the createPaMolestiae mutation"""
    input: CreatePaMolestiaeInput!
  ): CreatePaMolestiaePayload

  """The payload for the createPaNihil mutation"""
  createPaNihil(
    """Input for the createPaNihil mutation"""
    input: CreatePaNihilInput!
  ): CreatePaNihilPayload

  """The payload for the createPaNon mutation"""
  createPaNon(
    """Input for the createPaNon mutation"""
    input: CreatePaNonInput!
  ): CreatePaNonPayload

  """The payload for the createPaNulla mutation"""
  createPaNulla(
    """Input for the createPaNulla mutation"""
    input: CreatePaNullaInput!
  ): CreatePaNullaPayload

  """The payload for the createPaNumericSize mutation"""
  createPaNumericSize(
    """Input for the createPaNumericSize mutation"""
    input: CreatePaNumericSizeInput!
  ): CreatePaNumericSizePayload

  """The payload for the createPaOmnis mutation"""
  createPaOmnis(
    """Input for the createPaOmnis mutation"""
    input: CreatePaOmnisInput!
  ): CreatePaOmnisPayload

  """The payload for the createPaOptio mutation"""
  createPaOptio(
    """Input for the createPaOptio mutation"""
    input: CreatePaOptioInput!
  ): CreatePaOptioPayload

  """The payload for the createPaPraesentium mutation"""
  createPaPraesentium(
    """Input for the createPaPraesentium mutation"""
    input: CreatePaPraesentiumInput!
  ): CreatePaPraesentiumPayload

  """The payload for the createPaProvident mutation"""
  createPaProvident(
    """Input for the createPaProvident mutation"""
    input: CreatePaProvidentInput!
  ): CreatePaProvidentPayload

  """The payload for the createPaQuae mutation"""
  createPaQuae(
    """Input for the createPaQuae mutation"""
    input: CreatePaQuaeInput!
  ): CreatePaQuaePayload

  """The payload for the createPaQui mutation"""
  createPaQui(
    """Input for the createPaQui mutation"""
    input: CreatePaQuiInput!
  ): CreatePaQuiPayload

  """The payload for the createPaQuia mutation"""
  createPaQuia(
    """Input for the createPaQuia mutation"""
    input: CreatePaQuiaInput!
  ): CreatePaQuiaPayload

  """The payload for the createPaQuidem mutation"""
  createPaQuidem(
    """Input for the createPaQuidem mutation"""
    input: CreatePaQuidemInput!
  ): CreatePaQuidemPayload

  """The payload for the createPaQuis mutation"""
  createPaQuis(
    """Input for the createPaQuis mutation"""
    input: CreatePaQuisInput!
  ): CreatePaQuisPayload

  """The payload for the createPaQuo mutation"""
  createPaQuo(
    """Input for the createPaQuo mutation"""
    input: CreatePaQuoInput!
  ): CreatePaQuoPayload

  """The payload for the createPaRepellendus mutation"""
  createPaRepellendus(
    """Input for the createPaRepellendus mutation"""
    input: CreatePaRepellendusInput!
  ): CreatePaRepellendusPayload

  """The payload for the createPaReprehenderit mutation"""
  createPaReprehenderit(
    """Input for the createPaReprehenderit mutation"""
    input: CreatePaReprehenderitInput!
  ): CreatePaReprehenderitPayload

  """The payload for the createPaRerum mutation"""
  createPaRerum(
    """Input for the createPaRerum mutation"""
    input: CreatePaRerumInput!
  ): CreatePaRerumPayload

  """The payload for the createPaSit mutation"""
  createPaSit(
    """Input for the createPaSit mutation"""
    input: CreatePaSitInput!
  ): CreatePaSitPayload

  """The payload for the createPaSize mutation"""
  createPaSize(
    """Input for the createPaSize mutation"""
    input: CreatePaSizeInput!
  ): CreatePaSizePayload

  """The payload for the createPaTenetur mutation"""
  createPaTenetur(
    """Input for the createPaTenetur mutation"""
    input: CreatePaTeneturInput!
  ): CreatePaTeneturPayload

  """The payload for the createPaVel mutation"""
  createPaVel(
    """Input for the createPaVel mutation"""
    input: CreatePaVelInput!
  ): CreatePaVelPayload

  """The payload for the createPage mutation"""
  createPage(
    """Input for the createPage mutation"""
    input: CreatePageInput!
  ): CreatePagePayload

  """The payload for the createPost mutation"""
  createPost(
    """Input for the createPost mutation"""
    input: CreatePostInput!
  ): CreatePostPayload

  """The payload for the createPostFormat mutation"""
  createPostFormat(
    """Input for the createPostFormat mutation"""
    input: CreatePostFormatInput!
  ): CreatePostFormatPayload

  """The payload for the createProductCategory mutation"""
  createProductCategory(
    """Input for the createProductCategory mutation"""
    input: CreateProductCategoryInput!
  ): CreateProductCategoryPayload

  """The payload for the createProductTag mutation"""
  createProductTag(
    """Input for the createProductTag mutation"""
    input: CreateProductTagInput!
  ): CreateProductTagPayload

  """The payload for the createProductType mutation"""
  createProductType(
    """Input for the createProductType mutation"""
    input: CreateProductTypeInput!
  ): CreateProductTypePayload

  """The payload for the createReusableBlock mutation"""
  createReusableBlock(
    """Input for the createReusableBlock mutation"""
    input: CreateReusableBlockInput!
  ): CreateReusableBlockPayload

  """The payload for the createShippingClass mutation"""
  createShippingClass(
    """Input for the createShippingClass mutation"""
    input: CreateShippingClassInput!
  ): CreateShippingClassPayload

  """The payload for the createTag mutation"""
  createTag(
    """Input for the createTag mutation"""
    input: CreateTagInput!
  ): CreateTagPayload

  """The payload for the createUser mutation"""
  createUser(
    """Input for the createUser mutation"""
    input: CreateUserInput!
  ): CreateUserPayload

  """The payload for the createVisibleProduct mutation"""
  createVisibleProduct(
    """Input for the createVisibleProduct mutation"""
    input: CreateVisibleProductInput!
  ): CreateVisibleProductPayload

  """The payload for the deleteCategory mutation"""
  deleteCategory(
    """Input for the deleteCategory mutation"""
    input: DeleteCategoryInput!
  ): DeleteCategoryPayload

  """The payload for the deleteComment mutation"""
  deleteComment(
    """Input for the deleteComment mutation"""
    input: DeleteCommentInput!
  ): DeleteCommentPayload

  """The payload for the deleteCoupon mutation"""
  deleteCoupon(
    """Input for the deleteCoupon mutation"""
    input: DeleteCouponInput!
  ): DeleteCouponPayload

  """The payload for the deleteMediaItem mutation"""
  deleteMediaItem(
    """Input for the deleteMediaItem mutation"""
    input: DeleteMediaItemInput!
  ): DeleteMediaItemPayload

  """The payload for the deleteOrder mutation"""
  deleteOrder(
    """Input for the deleteOrder mutation"""
    input: DeleteOrderInput!
  ): DeleteOrderPayload

  """The payload for the deleteOrderItems mutation"""
  deleteOrderItems(
    """Input for the deleteOrderItems mutation"""
    input: DeleteOrderItemsInput!
  ): DeleteOrderItemsPayload

  """The payload for the deletePaArchitecto mutation"""
  deletePaArchitecto(
    """Input for the deletePaArchitecto mutation"""
    input: DeletePaArchitectoInput!
  ): DeletePaArchitectoPayload

  """The payload for the deletePaAspernatur mutation"""
  deletePaAspernatur(
    """Input for the deletePaAspernatur mutation"""
    input: DeletePaAspernaturInput!
  ): DeletePaAspernaturPayload

  """The payload for the deletePaAtque mutation"""
  deletePaAtque(
    """Input for the deletePaAtque mutation"""
    input: DeletePaAtqueInput!
  ): DeletePaAtquePayload

  """The payload for the deletePaColor mutation"""
  deletePaColor(
    """Input for the deletePaColor mutation"""
    input: DeletePaColorInput!
  ): DeletePaColorPayload

  """The payload for the deletePaConsequatur mutation"""
  deletePaConsequatur(
    """Input for the deletePaConsequatur mutation"""
    input: DeletePaConsequaturInput!
  ): DeletePaConsequaturPayload

  """The payload for the deletePaCum mutation"""
  deletePaCum(
    """Input for the deletePaCum mutation"""
    input: DeletePaCumInput!
  ): DeletePaCumPayload

  """The payload for the deletePaDolor mutation"""
  deletePaDolor(
    """Input for the deletePaDolor mutation"""
    input: DeletePaDolorInput!
  ): DeletePaDolorPayload

  """The payload for the deletePaDoloremque mutation"""
  deletePaDoloremque(
    """Input for the deletePaDoloremque mutation"""
    input: DeletePaDoloremqueInput!
  ): DeletePaDoloremquePayload

  """The payload for the deletePaDolores mutation"""
  deletePaDolores(
    """Input for the deletePaDolores mutation"""
    input: DeletePaDoloresInput!
  ): DeletePaDoloresPayload

  """The payload for the deletePaDolorum mutation"""
  deletePaDolorum(
    """Input for the deletePaDolorum mutation"""
    input: DeletePaDolorumInput!
  ): DeletePaDolorumPayload

  """The payload for the deletePaEa mutation"""
  deletePaEa(
    """Input for the deletePaEa mutation"""
    input: DeletePaEaInput!
  ): DeletePaEaPayload

  """The payload for the deletePaEos mutation"""
  deletePaEos(
    """Input for the deletePaEos mutation"""
    input: DeletePaEosInput!
  ): DeletePaEosPayload

  """The payload for the deletePaEt mutation"""
  deletePaEt(
    """Input for the deletePaEt mutation"""
    input: DeletePaEtInput!
  ): DeletePaEtPayload

  """The payload for the deletePaExcepturi mutation"""
  deletePaExcepturi(
    """Input for the deletePaExcepturi mutation"""
    input: DeletePaExcepturiInput!
  ): DeletePaExcepturiPayload

  """The payload for the deletePaExplicabo mutation"""
  deletePaExplicabo(
    """Input for the deletePaExplicabo mutation"""
    input: DeletePaExplicaboInput!
  ): DeletePaExplicaboPayload

  """The payload for the deletePaFacere mutation"""
  deletePaFacere(
    """Input for the deletePaFacere mutation"""
    input: DeletePaFacereInput!
  ): DeletePaFacerePayload

  """The payload for the deletePaHarum mutation"""
  deletePaHarum(
    """Input for the deletePaHarum mutation"""
    input: DeletePaHarumInput!
  ): DeletePaHarumPayload

  """The payload for the deletePaIncidunt mutation"""
  deletePaIncidunt(
    """Input for the deletePaIncidunt mutation"""
    input: DeletePaInciduntInput!
  ): DeletePaInciduntPayload

  """The payload for the deletePaIpsam mutation"""
  deletePaIpsam(
    """Input for the deletePaIpsam mutation"""
    input: DeletePaIpsamInput!
  ): DeletePaIpsamPayload

  """The payload for the deletePaIusto mutation"""
  deletePaIusto(
    """Input for the deletePaIusto mutation"""
    input: DeletePaIustoInput!
  ): DeletePaIustoPayload

  """The payload for the deletePaLaudantium mutation"""
  deletePaLaudantium(
    """Input for the deletePaLaudantium mutation"""
    input: DeletePaLaudantiumInput!
  ): DeletePaLaudantiumPayload

  """The payload for the deletePaMagnam mutation"""
  deletePaMagnam(
    """Input for the deletePaMagnam mutation"""
    input: DeletePaMagnamInput!
  ): DeletePaMagnamPayload

  """The payload for the deletePaMagni mutation"""
  deletePaMagni(
    """Input for the deletePaMagni mutation"""
    input: DeletePaMagniInput!
  ): DeletePaMagniPayload

  """The payload for the deletePaMinima mutation"""
  deletePaMinima(
    """Input for the deletePaMinima mutation"""
    input: DeletePaMinimaInput!
  ): DeletePaMinimaPayload

  """The payload for the deletePaMolestiae mutation"""
  deletePaMolestiae(
    """Input for the deletePaMolestiae mutation"""
    input: DeletePaMolestiaeInput!
  ): DeletePaMolestiaePayload

  """The payload for the deletePaNihil mutation"""
  deletePaNihil(
    """Input for the deletePaNihil mutation"""
    input: DeletePaNihilInput!
  ): DeletePaNihilPayload

  """The payload for the deletePaNon mutation"""
  deletePaNon(
    """Input for the deletePaNon mutation"""
    input: DeletePaNonInput!
  ): DeletePaNonPayload

  """The payload for the deletePaNulla mutation"""
  deletePaNulla(
    """Input for the deletePaNulla mutation"""
    input: DeletePaNullaInput!
  ): DeletePaNullaPayload

  """The payload for the deletePaNumericSize mutation"""
  deletePaNumericSize(
    """Input for the deletePaNumericSize mutation"""
    input: DeletePaNumericSizeInput!
  ): DeletePaNumericSizePayload

  """The payload for the deletePaOmnis mutation"""
  deletePaOmnis(
    """Input for the deletePaOmnis mutation"""
    input: DeletePaOmnisInput!
  ): DeletePaOmnisPayload

  """The payload for the deletePaOptio mutation"""
  deletePaOptio(
    """Input for the deletePaOptio mutation"""
    input: DeletePaOptioInput!
  ): DeletePaOptioPayload

  """The payload for the deletePaPraesentium mutation"""
  deletePaPraesentium(
    """Input for the deletePaPraesentium mutation"""
    input: DeletePaPraesentiumInput!
  ): DeletePaPraesentiumPayload

  """The payload for the deletePaProvident mutation"""
  deletePaProvident(
    """Input for the deletePaProvident mutation"""
    input: DeletePaProvidentInput!
  ): DeletePaProvidentPayload

  """The payload for the deletePaQuae mutation"""
  deletePaQuae(
    """Input for the deletePaQuae mutation"""
    input: DeletePaQuaeInput!
  ): DeletePaQuaePayload

  """The payload for the deletePaQui mutation"""
  deletePaQui(
    """Input for the deletePaQui mutation"""
    input: DeletePaQuiInput!
  ): DeletePaQuiPayload

  """The payload for the deletePaQuia mutation"""
  deletePaQuia(
    """Input for the deletePaQuia mutation"""
    input: DeletePaQuiaInput!
  ): DeletePaQuiaPayload

  """The payload for the deletePaQuidem mutation"""
  deletePaQuidem(
    """Input for the deletePaQuidem mutation"""
    input: DeletePaQuidemInput!
  ): DeletePaQuidemPayload

  """The payload for the deletePaQuis mutation"""
  deletePaQuis(
    """Input for the deletePaQuis mutation"""
    input: DeletePaQuisInput!
  ): DeletePaQuisPayload

  """The payload for the deletePaQuo mutation"""
  deletePaQuo(
    """Input for the deletePaQuo mutation"""
    input: DeletePaQuoInput!
  ): DeletePaQuoPayload

  """The payload for the deletePaRepellendus mutation"""
  deletePaRepellendus(
    """Input for the deletePaRepellendus mutation"""
    input: DeletePaRepellendusInput!
  ): DeletePaRepellendusPayload

  """The payload for the deletePaReprehenderit mutation"""
  deletePaReprehenderit(
    """Input for the deletePaReprehenderit mutation"""
    input: DeletePaReprehenderitInput!
  ): DeletePaReprehenderitPayload

  """The payload for the deletePaRerum mutation"""
  deletePaRerum(
    """Input for the deletePaRerum mutation"""
    input: DeletePaRerumInput!
  ): DeletePaRerumPayload

  """The payload for the deletePaSit mutation"""
  deletePaSit(
    """Input for the deletePaSit mutation"""
    input: DeletePaSitInput!
  ): DeletePaSitPayload

  """The payload for the deletePaSize mutation"""
  deletePaSize(
    """Input for the deletePaSize mutation"""
    input: DeletePaSizeInput!
  ): DeletePaSizePayload

  """The payload for the deletePaTenetur mutation"""
  deletePaTenetur(
    """Input for the deletePaTenetur mutation"""
    input: DeletePaTeneturInput!
  ): DeletePaTeneturPayload

  """The payload for the deletePaVel mutation"""
  deletePaVel(
    """Input for the deletePaVel mutation"""
    input: DeletePaVelInput!
  ): DeletePaVelPayload

  """The payload for the deletePage mutation"""
  deletePage(
    """Input for the deletePage mutation"""
    input: DeletePageInput!
  ): DeletePagePayload

  """The payload for the deletePost mutation"""
  deletePost(
    """Input for the deletePost mutation"""
    input: DeletePostInput!
  ): DeletePostPayload

  """The payload for the deletePostFormat mutation"""
  deletePostFormat(
    """Input for the deletePostFormat mutation"""
    input: DeletePostFormatInput!
  ): DeletePostFormatPayload

  """The payload for the deleteProductCategory mutation"""
  deleteProductCategory(
    """Input for the deleteProductCategory mutation"""
    input: DeleteProductCategoryInput!
  ): DeleteProductCategoryPayload

  """The payload for the deleteProductTag mutation"""
  deleteProductTag(
    """Input for the deleteProductTag mutation"""
    input: DeleteProductTagInput!
  ): DeleteProductTagPayload

  """The payload for the deleteProductType mutation"""
  deleteProductType(
    """Input for the deleteProductType mutation"""
    input: DeleteProductTypeInput!
  ): DeleteProductTypePayload

  """The payload for the deleteReusableBlock mutation"""
  deleteReusableBlock(
    """Input for the deleteReusableBlock mutation"""
    input: DeleteReusableBlockInput!
  ): DeleteReusableBlockPayload

  """The payload for the deleteReview mutation"""
  deleteReview(
    """Input for the deleteReview mutation"""
    input: DeleteReviewInput!
  ): DeleteReviewPayload

  """The payload for the deleteShippingClass mutation"""
  deleteShippingClass(
    """Input for the deleteShippingClass mutation"""
    input: DeleteShippingClassInput!
  ): DeleteShippingClassPayload

  """The payload for the deleteTag mutation"""
  deleteTag(
    """Input for the deleteTag mutation"""
    input: DeleteTagInput!
  ): DeleteTagPayload

  """The payload for the deleteUser mutation"""
  deleteUser(
    """Input for the deleteUser mutation"""
    input: DeleteUserInput!
  ): DeleteUserPayload

  """The payload for the deleteVisibleProduct mutation"""
  deleteVisibleProduct(
    """Input for the deleteVisibleProduct mutation"""
    input: DeleteVisibleProductInput!
  ): DeleteVisibleProductPayload

  """The payload for the emptyCart mutation"""
  emptyCart(
    """Input for the emptyCart mutation"""
    input: EmptyCartInput!
  ): EmptyCartPayload

  """The payload for the fillCart mutation"""
  fillCart(
    """Input for the fillCart mutation"""
    input: FillCartInput!
  ): FillCartPayload

  """Increase the count."""
  increaseCount(
    """The count to increase"""
    count: Int
  ): Int

  """The payload for the login mutation"""
  login(
    """Input for the login mutation"""
    input: LoginInput!
  ): LoginPayload

  """The payload for the refreshJwtAuthToken mutation"""
  refreshJwtAuthToken(
    """Input for the refreshJwtAuthToken mutation"""
    input: RefreshJwtAuthTokenInput!
  ): RefreshJwtAuthTokenPayload

  """The payload for the registerCustomer mutation"""
  registerCustomer(
    """Input for the registerCustomer mutation"""
    input: RegisterCustomerInput!
  ): RegisterCustomerPayload

  """The payload for the registerUser mutation"""
  registerUser(
    """Input for the registerUser mutation"""
    input: RegisterUserInput!
  ): RegisterUserPayload

  """The payload for the removeCoupons mutation"""
  removeCoupons(
    """Input for the removeCoupons mutation"""
    input: RemoveCouponsInput!
  ): RemoveCouponsPayload

  """The payload for the removeFromWishlist mutation"""
  removeFromWishlist(
    """Input for the removeFromWishlist mutation"""
    input: RemoveFromWishlistInput!
  ): RemoveFromWishlistPayload

  """The payload for the removeItemsFromCart mutation"""
  removeItemsFromCart(
    """Input for the removeItemsFromCart mutation"""
    input: RemoveItemsFromCartInput!
  ): RemoveItemsFromCartPayload

  """The payload for the resetUserPassword mutation"""
  resetUserPassword(
    """Input for the resetUserPassword mutation"""
    input: ResetUserPasswordInput!
  ): ResetUserPasswordPayload

  """The payload for the restoreCartItems mutation"""
  restoreCartItems(
    """Input for the restoreCartItems mutation"""
    input: RestoreCartItemsInput!
  ): RestoreCartItemsPayload

  """The payload for the restoreComment mutation"""
  restoreComment(
    """Input for the restoreComment mutation"""
    input: RestoreCommentInput!
  ): RestoreCommentPayload

  """The payload for the restoreReview mutation"""
  restoreReview(
    """Input for the restoreReview mutation"""
    input: RestoreReviewInput!
  ): RestoreReviewPayload

  """The payload for the sendPasswordResetEmail mutation"""
  sendPasswordResetEmail(
    """Input for the sendPasswordResetEmail mutation"""
    input: SendPasswordResetEmailInput!
  ): SendPasswordResetEmailPayload

  """The payload for the UpdateCategory mutation"""
  updateCategory(
    """Input for the UpdateCategory mutation"""
    input: UpdateCategoryInput!
  ): UpdateCategoryPayload

  """The payload for the updateComment mutation"""
  updateComment(
    """Input for the updateComment mutation"""
    input: UpdateCommentInput!
  ): UpdateCommentPayload

  """The payload for the updateCoupon mutation"""
  updateCoupon(
    """Input for the updateCoupon mutation"""
    input: UpdateCouponInput!
  ): UpdateCouponPayload

  """The payload for the updateCustomer mutation"""
  updateCustomer(
    """Input for the updateCustomer mutation"""
    input: UpdateCustomerInput!
  ): UpdateCustomerPayload

  """The payload for the updateItemQuantities mutation"""
  updateItemQuantities(
    """Input for the updateItemQuantities mutation"""
    input: UpdateItemQuantitiesInput!
  ): UpdateItemQuantitiesPayload

  """The payload for the updateMediaItem mutation"""
  updateMediaItem(
    """Input for the updateMediaItem mutation"""
    input: UpdateMediaItemInput!
  ): UpdateMediaItemPayload

  """The payload for the updateOrder mutation"""
  updateOrder(
    """Input for the updateOrder mutation"""
    input: UpdateOrderInput!
  ): UpdateOrderPayload

  """The payload for the UpdatePaArchitecto mutation"""
  updatePaArchitecto(
    """Input for the UpdatePaArchitecto mutation"""
    input: UpdatePaArchitectoInput!
  ): UpdatePaArchitectoPayload

  """The payload for the UpdatePaAspernatur mutation"""
  updatePaAspernatur(
    """Input for the UpdatePaAspernatur mutation"""
    input: UpdatePaAspernaturInput!
  ): UpdatePaAspernaturPayload

  """The payload for the UpdatePaAtque mutation"""
  updatePaAtque(
    """Input for the UpdatePaAtque mutation"""
    input: UpdatePaAtqueInput!
  ): UpdatePaAtquePayload

  """The payload for the UpdatePaColor mutation"""
  updatePaColor(
    """Input for the UpdatePaColor mutation"""
    input: UpdatePaColorInput!
  ): UpdatePaColorPayload

  """The payload for the UpdatePaConsequatur mutation"""
  updatePaConsequatur(
    """Input for the UpdatePaConsequatur mutation"""
    input: UpdatePaConsequaturInput!
  ): UpdatePaConsequaturPayload

  """The payload for the UpdatePaCum mutation"""
  updatePaCum(
    """Input for the UpdatePaCum mutation"""
    input: UpdatePaCumInput!
  ): UpdatePaCumPayload

  """The payload for the UpdatePaDolor mutation"""
  updatePaDolor(
    """Input for the UpdatePaDolor mutation"""
    input: UpdatePaDolorInput!
  ): UpdatePaDolorPayload

  """The payload for the UpdatePaDoloremque mutation"""
  updatePaDoloremque(
    """Input for the UpdatePaDoloremque mutation"""
    input: UpdatePaDoloremqueInput!
  ): UpdatePaDoloremquePayload

  """The payload for the UpdatePaDolores mutation"""
  updatePaDolores(
    """Input for the UpdatePaDolores mutation"""
    input: UpdatePaDoloresInput!
  ): UpdatePaDoloresPayload

  """The payload for the UpdatePaDolorum mutation"""
  updatePaDolorum(
    """Input for the UpdatePaDolorum mutation"""
    input: UpdatePaDolorumInput!
  ): UpdatePaDolorumPayload

  """The payload for the UpdatePaEa mutation"""
  updatePaEa(
    """Input for the UpdatePaEa mutation"""
    input: UpdatePaEaInput!
  ): UpdatePaEaPayload

  """The payload for the UpdatePaEos mutation"""
  updatePaEos(
    """Input for the UpdatePaEos mutation"""
    input: UpdatePaEosInput!
  ): UpdatePaEosPayload

  """The payload for the UpdatePaEt mutation"""
  updatePaEt(
    """Input for the UpdatePaEt mutation"""
    input: UpdatePaEtInput!
  ): UpdatePaEtPayload

  """The payload for the UpdatePaExcepturi mutation"""
  updatePaExcepturi(
    """Input for the UpdatePaExcepturi mutation"""
    input: UpdatePaExcepturiInput!
  ): UpdatePaExcepturiPayload

  """The payload for the UpdatePaExplicabo mutation"""
  updatePaExplicabo(
    """Input for the UpdatePaExplicabo mutation"""
    input: UpdatePaExplicaboInput!
  ): UpdatePaExplicaboPayload

  """The payload for the UpdatePaFacere mutation"""
  updatePaFacere(
    """Input for the UpdatePaFacere mutation"""
    input: UpdatePaFacereInput!
  ): UpdatePaFacerePayload

  """The payload for the UpdatePaHarum mutation"""
  updatePaHarum(
    """Input for the UpdatePaHarum mutation"""
    input: UpdatePaHarumInput!
  ): UpdatePaHarumPayload

  """The payload for the UpdatePaIncidunt mutation"""
  updatePaIncidunt(
    """Input for the UpdatePaIncidunt mutation"""
    input: UpdatePaInciduntInput!
  ): UpdatePaInciduntPayload

  """The payload for the UpdatePaIpsam mutation"""
  updatePaIpsam(
    """Input for the UpdatePaIpsam mutation"""
    input: UpdatePaIpsamInput!
  ): UpdatePaIpsamPayload

  """The payload for the UpdatePaIusto mutation"""
  updatePaIusto(
    """Input for the UpdatePaIusto mutation"""
    input: UpdatePaIustoInput!
  ): UpdatePaIustoPayload

  """The payload for the UpdatePaLaudantium mutation"""
  updatePaLaudantium(
    """Input for the UpdatePaLaudantium mutation"""
    input: UpdatePaLaudantiumInput!
  ): UpdatePaLaudantiumPayload

  """The payload for the UpdatePaMagnam mutation"""
  updatePaMagnam(
    """Input for the UpdatePaMagnam mutation"""
    input: UpdatePaMagnamInput!
  ): UpdatePaMagnamPayload

  """The payload for the UpdatePaMagni mutation"""
  updatePaMagni(
    """Input for the UpdatePaMagni mutation"""
    input: UpdatePaMagniInput!
  ): UpdatePaMagniPayload

  """The payload for the UpdatePaMinima mutation"""
  updatePaMinima(
    """Input for the UpdatePaMinima mutation"""
    input: UpdatePaMinimaInput!
  ): UpdatePaMinimaPayload

  """The payload for the UpdatePaMolestiae mutation"""
  updatePaMolestiae(
    """Input for the UpdatePaMolestiae mutation"""
    input: UpdatePaMolestiaeInput!
  ): UpdatePaMolestiaePayload

  """The payload for the UpdatePaNihil mutation"""
  updatePaNihil(
    """Input for the UpdatePaNihil mutation"""
    input: UpdatePaNihilInput!
  ): UpdatePaNihilPayload

  """The payload for the UpdatePaNon mutation"""
  updatePaNon(
    """Input for the UpdatePaNon mutation"""
    input: UpdatePaNonInput!
  ): UpdatePaNonPayload

  """The payload for the UpdatePaNulla mutation"""
  updatePaNulla(
    """Input for the UpdatePaNulla mutation"""
    input: UpdatePaNullaInput!
  ): UpdatePaNullaPayload

  """The payload for the UpdatePaNumericSize mutation"""
  updatePaNumericSize(
    """Input for the UpdatePaNumericSize mutation"""
    input: UpdatePaNumericSizeInput!
  ): UpdatePaNumericSizePayload

  """The payload for the UpdatePaOmnis mutation"""
  updatePaOmnis(
    """Input for the UpdatePaOmnis mutation"""
    input: UpdatePaOmnisInput!
  ): UpdatePaOmnisPayload

  """The payload for the UpdatePaOptio mutation"""
  updatePaOptio(
    """Input for the UpdatePaOptio mutation"""
    input: UpdatePaOptioInput!
  ): UpdatePaOptioPayload

  """The payload for the UpdatePaPraesentium mutation"""
  updatePaPraesentium(
    """Input for the UpdatePaPraesentium mutation"""
    input: UpdatePaPraesentiumInput!
  ): UpdatePaPraesentiumPayload

  """The payload for the UpdatePaProvident mutation"""
  updatePaProvident(
    """Input for the UpdatePaProvident mutation"""
    input: UpdatePaProvidentInput!
  ): UpdatePaProvidentPayload

  """The payload for the UpdatePaQuae mutation"""
  updatePaQuae(
    """Input for the UpdatePaQuae mutation"""
    input: UpdatePaQuaeInput!
  ): UpdatePaQuaePayload

  """The payload for the UpdatePaQui mutation"""
  updatePaQui(
    """Input for the UpdatePaQui mutation"""
    input: UpdatePaQuiInput!
  ): UpdatePaQuiPayload

  """The payload for the UpdatePaQuia mutation"""
  updatePaQuia(
    """Input for the UpdatePaQuia mutation"""
    input: UpdatePaQuiaInput!
  ): UpdatePaQuiaPayload

  """The payload for the UpdatePaQuidem mutation"""
  updatePaQuidem(
    """Input for the UpdatePaQuidem mutation"""
    input: UpdatePaQuidemInput!
  ): UpdatePaQuidemPayload

  """The payload for the UpdatePaQuis mutation"""
  updatePaQuis(
    """Input for the UpdatePaQuis mutation"""
    input: UpdatePaQuisInput!
  ): UpdatePaQuisPayload

  """The payload for the UpdatePaQuo mutation"""
  updatePaQuo(
    """Input for the UpdatePaQuo mutation"""
    input: UpdatePaQuoInput!
  ): UpdatePaQuoPayload

  """The payload for the UpdatePaRepellendus mutation"""
  updatePaRepellendus(
    """Input for the UpdatePaRepellendus mutation"""
    input: UpdatePaRepellendusInput!
  ): UpdatePaRepellendusPayload

  """The payload for the UpdatePaReprehenderit mutation"""
  updatePaReprehenderit(
    """Input for the UpdatePaReprehenderit mutation"""
    input: UpdatePaReprehenderitInput!
  ): UpdatePaReprehenderitPayload

  """The payload for the UpdatePaRerum mutation"""
  updatePaRerum(
    """Input for the UpdatePaRerum mutation"""
    input: UpdatePaRerumInput!
  ): UpdatePaRerumPayload

  """The payload for the UpdatePaSit mutation"""
  updatePaSit(
    """Input for the UpdatePaSit mutation"""
    input: UpdatePaSitInput!
  ): UpdatePaSitPayload

  """The payload for the UpdatePaSize mutation"""
  updatePaSize(
    """Input for the UpdatePaSize mutation"""
    input: UpdatePaSizeInput!
  ): UpdatePaSizePayload

  """The payload for the UpdatePaTenetur mutation"""
  updatePaTenetur(
    """Input for the UpdatePaTenetur mutation"""
    input: UpdatePaTeneturInput!
  ): UpdatePaTeneturPayload

  """The payload for the UpdatePaVel mutation"""
  updatePaVel(
    """Input for the UpdatePaVel mutation"""
    input: UpdatePaVelInput!
  ): UpdatePaVelPayload

  """The payload for the updatePage mutation"""
  updatePage(
    """Input for the updatePage mutation"""
    input: UpdatePageInput!
  ): UpdatePagePayload

  """The payload for the updatePost mutation"""
  updatePost(
    """Input for the updatePost mutation"""
    input: UpdatePostInput!
  ): UpdatePostPayload

  """The payload for the UpdatePostFormat mutation"""
  updatePostFormat(
    """Input for the UpdatePostFormat mutation"""
    input: UpdatePostFormatInput!
  ): UpdatePostFormatPayload

  """The payload for the UpdateProductCategory mutation"""
  updateProductCategory(
    """Input for the UpdateProductCategory mutation"""
    input: UpdateProductCategoryInput!
  ): UpdateProductCategoryPayload

  """The payload for the UpdateProductTag mutation"""
  updateProductTag(
    """Input for the UpdateProductTag mutation"""
    input: UpdateProductTagInput!
  ): UpdateProductTagPayload

  """The payload for the UpdateProductType mutation"""
  updateProductType(
    """Input for the UpdateProductType mutation"""
    input: UpdateProductTypeInput!
  ): UpdateProductTypePayload

  """The payload for the updateReusableBlock mutation"""
  updateReusableBlock(
    """Input for the updateReusableBlock mutation"""
    input: UpdateReusableBlockInput!
  ): UpdateReusableBlockPayload

  """The payload for the updateReview mutation"""
  updateReview(
    """Input for the updateReview mutation"""
    input: UpdateReviewInput!
  ): UpdateReviewPayload

  """The payload for the updateSettings mutation"""
  updateSettings(
    """Input for the updateSettings mutation"""
    input: UpdateSettingsInput!
  ): UpdateSettingsPayload

  """The payload for the UpdateShippingClass mutation"""
  updateShippingClass(
    """Input for the UpdateShippingClass mutation"""
    input: UpdateShippingClassInput!
  ): UpdateShippingClassPayload

  """The payload for the updateShippingMethod mutation"""
  updateShippingMethod(
    """Input for the updateShippingMethod mutation"""
    input: UpdateShippingMethodInput!
  ): UpdateShippingMethodPayload

  """The payload for the UpdateTag mutation"""
  updateTag(
    """Input for the UpdateTag mutation"""
    input: UpdateTagInput!
  ): UpdateTagPayload

  """The payload for the updateUser mutation"""
  updateUser(
    """Input for the updateUser mutation"""
    input: UpdateUserInput!
  ): UpdateUserPayload

  """The payload for the UpdateVisibleProduct mutation"""
  updateVisibleProduct(
    """Input for the UpdateVisibleProduct mutation"""
    input: UpdateVisibleProductInput!
  ): UpdateVisibleProductPayload

  """The payload for the writeReview mutation"""
  writeReview(
    """Input for the writeReview mutation"""
    input: WriteReviewInput!
  ): WriteReviewPayload
}

"""The root entry point into the Graph"""
type RootQuery {
  """Connection between the RootQuery type and the paArchitecto type"""
  allPaArchitecto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaArchitectoConnectionWhereArgs
  ): RootQueryToPaArchitectoConnection

  """Connection between the RootQuery type and the paAspernatur type"""
  allPaAspernatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaAspernaturConnectionWhereArgs
  ): RootQueryToPaAspernaturConnection

  """Connection between the RootQuery type and the paAtque type"""
  allPaAtque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaAtqueConnectionWhereArgs
  ): RootQueryToPaAtqueConnection

  """Connection between the RootQuery type and the paColor type"""
  allPaColor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaColorConnectionWhereArgs
  ): RootQueryToPaColorConnection

  """Connection between the RootQuery type and the paConsequatur type"""
  allPaConsequatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaConsequaturConnectionWhereArgs
  ): RootQueryToPaConsequaturConnection

  """Connection between the RootQuery type and the paCum type"""
  allPaCum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaCumConnectionWhereArgs
  ): RootQueryToPaCumConnection

  """Connection between the RootQuery type and the paDolor type"""
  allPaDolor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaDolorConnectionWhereArgs
  ): RootQueryToPaDolorConnection

  """Connection between the RootQuery type and the paDoloremque type"""
  allPaDoloremque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaDoloremqueConnectionWhereArgs
  ): RootQueryToPaDoloremqueConnection

  """Connection between the RootQuery type and the paDolores type"""
  allPaDolores(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaDoloresConnectionWhereArgs
  ): RootQueryToPaDoloresConnection

  """Connection between the RootQuery type and the paDolorum type"""
  allPaDolorum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaDolorumConnectionWhereArgs
  ): RootQueryToPaDolorumConnection

  """Connection between the RootQuery type and the paEa type"""
  allPaEa(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaEaConnectionWhereArgs
  ): RootQueryToPaEaConnection

  """Connection between the RootQuery type and the paEos type"""
  allPaEos(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaEosConnectionWhereArgs
  ): RootQueryToPaEosConnection

  """Connection between the RootQuery type and the paEt type"""
  allPaEt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaEtConnectionWhereArgs
  ): RootQueryToPaEtConnection

  """Connection between the RootQuery type and the paExcepturi type"""
  allPaExcepturi(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaExcepturiConnectionWhereArgs
  ): RootQueryToPaExcepturiConnection

  """Connection between the RootQuery type and the paExplicabo type"""
  allPaExplicabo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaExplicaboConnectionWhereArgs
  ): RootQueryToPaExplicaboConnection

  """Connection between the RootQuery type and the paFacere type"""
  allPaFacere(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaFacereConnectionWhereArgs
  ): RootQueryToPaFacereConnection

  """Connection between the RootQuery type and the paHarum type"""
  allPaHarum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaHarumConnectionWhereArgs
  ): RootQueryToPaHarumConnection

  """Connection between the RootQuery type and the paIncidunt type"""
  allPaIncidunt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaInciduntConnectionWhereArgs
  ): RootQueryToPaInciduntConnection

  """Connection between the RootQuery type and the paIpsam type"""
  allPaIpsam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaIpsamConnectionWhereArgs
  ): RootQueryToPaIpsamConnection

  """Connection between the RootQuery type and the paIusto type"""
  allPaIusto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaIustoConnectionWhereArgs
  ): RootQueryToPaIustoConnection

  """Connection between the RootQuery type and the paLaudantium type"""
  allPaLaudantium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaLaudantiumConnectionWhereArgs
  ): RootQueryToPaLaudantiumConnection

  """Connection between the RootQuery type and the paMagnam type"""
  allPaMagnam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaMagnamConnectionWhereArgs
  ): RootQueryToPaMagnamConnection

  """Connection between the RootQuery type and the paMagni type"""
  allPaMagni(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaMagniConnectionWhereArgs
  ): RootQueryToPaMagniConnection

  """Connection between the RootQuery type and the paMinima type"""
  allPaMinima(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaMinimaConnectionWhereArgs
  ): RootQueryToPaMinimaConnection

  """Connection between the RootQuery type and the paMolestiae type"""
  allPaMolestiae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaMolestiaeConnectionWhereArgs
  ): RootQueryToPaMolestiaeConnection

  """Connection between the RootQuery type and the paNihil type"""
  allPaNihil(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaNihilConnectionWhereArgs
  ): RootQueryToPaNihilConnection

  """Connection between the RootQuery type and the paNon type"""
  allPaNon(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaNonConnectionWhereArgs
  ): RootQueryToPaNonConnection

  """Connection between the RootQuery type and the paNulla type"""
  allPaNulla(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaNullaConnectionWhereArgs
  ): RootQueryToPaNullaConnection

  """Connection between the RootQuery type and the paNumericSize type"""
  allPaNumericSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaNumericSizeConnectionWhereArgs
  ): RootQueryToPaNumericSizeConnection

  """Connection between the RootQuery type and the paOmnis type"""
  allPaOmnis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaOmnisConnectionWhereArgs
  ): RootQueryToPaOmnisConnection

  """Connection between the RootQuery type and the paOptio type"""
  allPaOptio(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaOptioConnectionWhereArgs
  ): RootQueryToPaOptioConnection

  """Connection between the RootQuery type and the paPraesentium type"""
  allPaPraesentium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaPraesentiumConnectionWhereArgs
  ): RootQueryToPaPraesentiumConnection

  """Connection between the RootQuery type and the paProvident type"""
  allPaProvident(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaProvidentConnectionWhereArgs
  ): RootQueryToPaProvidentConnection

  """Connection between the RootQuery type and the paQuae type"""
  allPaQuae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaQuaeConnectionWhereArgs
  ): RootQueryToPaQuaeConnection

  """Connection between the RootQuery type and the paQui type"""
  allPaQui(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaQuiConnectionWhereArgs
  ): RootQueryToPaQuiConnection

  """Connection between the RootQuery type and the paQuia type"""
  allPaQuia(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaQuiaConnectionWhereArgs
  ): RootQueryToPaQuiaConnection

  """Connection between the RootQuery type and the paQuidem type"""
  allPaQuidem(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaQuidemConnectionWhereArgs
  ): RootQueryToPaQuidemConnection

  """Connection between the RootQuery type and the paQuis type"""
  allPaQuis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaQuisConnectionWhereArgs
  ): RootQueryToPaQuisConnection

  """Connection between the RootQuery type and the paQuo type"""
  allPaQuo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaQuoConnectionWhereArgs
  ): RootQueryToPaQuoConnection

  """Connection between the RootQuery type and the paRepellendus type"""
  allPaRepellendus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaRepellendusConnectionWhereArgs
  ): RootQueryToPaRepellendusConnection

  """Connection between the RootQuery type and the paReprehenderit type"""
  allPaReprehenderit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaReprehenderitConnectionWhereArgs
  ): RootQueryToPaReprehenderitConnection

  """Connection between the RootQuery type and the paRerum type"""
  allPaRerum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaRerumConnectionWhereArgs
  ): RootQueryToPaRerumConnection

  """Connection between the RootQuery type and the paSit type"""
  allPaSit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaSitConnectionWhereArgs
  ): RootQueryToPaSitConnection

  """Connection between the RootQuery type and the paSize type"""
  allPaSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaSizeConnectionWhereArgs
  ): RootQueryToPaSizeConnection

  """Connection between the RootQuery type and the paTenetur type"""
  allPaTenetur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaTeneturConnectionWhereArgs
  ): RootQueryToPaTeneturConnection

  """Connection between the RootQuery type and the paVel type"""
  allPaVel(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaVelConnectionWhereArgs
  ): RootQueryToPaVelConnection

  """Entry point to get all settings for the site"""
  allSettings: Settings

  """
  Connection between the RootQuery type and the BlockEditorContentNode type
  """
  blockEditorContentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: BlockEditorContentNodeConnectionWhereArgs
  ): BlockEditorContentNodeConnection

  """An object of the BlockEditorPreview Type. """
  blockEditorPreview(
    """Whether to return the node as a preview instance"""
    asPreview: Boolean

    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: BlockEditorPreviewIdType
  ): BlockEditorPreview

  """A BlockEditorPreview object"""
  blockEditorPreviewBy(
    """Get the BlockEditorPreview by its database ID"""
    blockEditorPreviewId: Int

    """Get the object by its global ID"""
    id: ID

    """
    Get the BlockEditorPreview by its slug (only available for non-hierarchical types)
    """
    slug: String

    """Get the BlockEditorPreview by its uri"""
    uri: String
  ): BlockEditorPreview @deprecated(reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)")

  """Connection between the RootQuery type and the BlockEditorPreview type"""
  blockEditorPreviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToBlockEditorPreviewConnectionWhereArgs
  ): RootQueryToBlockEditorPreviewConnection

  """The cart object"""
  cart(
    """Should cart totals be recalculated."""
    recalculateTotals: Boolean
  ): Cart

  """The cart object"""
  cartFee(id: ID!): CartFee

  """The cart object"""
  cartItem(key: ID!): CartItem

  """Connection between the RootQuery type and the category type"""
  categories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToCategoryConnectionWhereArgs
  ): RootQueryToCategoryConnection

  """A 0bject"""
  category(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: CategoryIdType
  ): Category

  """Returns a Comment"""
  comment(
    """Unique identifier for the comment node."""
    id: ID!

    """Type of unique identifier to fetch a comment by. Default is Global ID"""
    idType: CommentNodeIdTypeEnum
  ): Comment

  """Connection between the RootQuery type and the Comment type"""
  comments(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToCommentConnectionWhereArgs
  ): RootQueryToCommentConnection

  """A node used to manage content"""
  contentNode(
    """Whether to return the node as a preview instance"""
    asPreview: Boolean

    """
    The content type the node is used for. Required when idType is set to "name" or "slug"
    """
    contentType: ContentTypeEnum

    """Unique identifier for the content node."""
    id: ID!

    """
    Type of unique identifier to fetch a content node by. Default is Global ID
    """
    idType: ContentNodeIdTypeEnum
  ): ContentNode

  """Connection between the RootQuery type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToContentNodeConnectionWhereArgs
  ): RootQueryToContentNodeConnection

  """Fetch a Content Type node by unique Identifier"""
  contentType(
    """Unique Identifier for the Content Type node."""
    id: ID!

    """
    Type of unique identifier to fetch a content type by. Default is Global ID
    """
    idType: ContentTypeIdTypeEnum
  ): ContentType

  """Connection between the RootQuery type and the ContentType type"""
  contentTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToContentTypeConnection

  """A coupon object"""
  coupon(
    id: ID!

    """Type of ID being used identify coupon"""
    idType: CouponIdTypeEnum
  ): Coupon

  """Connection between the RootQuery type and the Coupon type"""
  coupons(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToCouponConnectionWhereArgs
  ): RootQueryToCouponConnection

  """A customer object"""
  customer(
    """Get the customer by their database ID"""
    customerId: Int

    """Get the customer by their global ID"""
    id: ID
  ): Customer

  """Connection between the RootQuery type and the Customer type"""
  customers(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToCustomerConnectionWhereArgs
  ): RootQueryToCustomerConnection

  """Fields of the &#039;DiscussionSettings&#039; settings group"""
  discussionSettings: DiscussionSettings

  """A simple product object"""
  externalProduct(
    """The ID for identifying the ExternalProduct product"""
    id: ID

    """Type of ID being used identify product"""
    idType: ProductIdTypeEnum
  ): ExternalProduct

  """Fields of the &#039;GeneralSettings&#039; settings group"""
  generalSettings: GeneralSettings

  """Get footer"""
  getFooter: HCMSFooter

  """Get header"""
  getHeader: HCMSHeader

  """States"""
  getWishList: WishlistProducts

  """A simple product object"""
  groupedProduct(
    """The ID for identifying the GroupProduct product"""
    id: ID

    """Type of ID being used identify product"""
    idType: ProductIdTypeEnum
  ): GroupProduct

  """Returns the header menu items"""
  headerMenu: [HeaderMenuType]

  """An object of the mediaItem Type. """
  mediaItem(
    """Whether to return the node as a preview instance"""
    asPreview: Boolean

    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: MediaItemIdType
  ): MediaItem

  """A mediaItem object"""
  mediaItemBy(
    """Get the object by its global ID"""
    id: ID

    """Get the mediaItem by its database ID"""
    mediaItemId: Int

    """
    Get the mediaItem by its slug (only available for non-hierarchical types)
    """
    slug: String

    """Get the mediaItem by its uri"""
    uri: String
  ): MediaItem @deprecated(reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)")

  """Connection between the RootQuery type and the mediaItem type"""
  mediaItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToMediaItemConnectionWhereArgs
  ): RootQueryToMediaItemConnection

  """A WordPress navigation menu"""
  menu(
    """The globally unique identifier of the menu."""
    id: ID!

    """Type of unique identifier to fetch a menu by. Default is Global ID"""
    idType: MenuNodeIdTypeEnum
  ): Menu

  """A WordPress navigation menu item"""
  menuItem(
    """The globally unique identifier of the menu item."""
    id: ID!

    """
    Type of unique identifier to fetch a menu item by. Default is Global ID
    """
    idType: MenuItemNodeIdTypeEnum
  ): MenuItem

  """Connection between the RootQuery type and the MenuItem type"""
  menuItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToMenuItemConnectionWhereArgs
  ): RootQueryToMenuItemConnection

  """Connection between the RootQuery type and the Menu type"""
  menus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToMenuConnectionWhereArgs
  ): RootQueryToMenuConnection

  """Fetches an object given its ID"""
  node(
    """The unique identifier of the node"""
    id: ID
  ): Node

  """Fetches an object given its Unique Resource Identifier"""
  nodeByUri(
    """
    Unique Resource Identifier in the form of a path or permalink for a node. Ex: "/hello-world"
    """
    uri: String!
  ): UniformResourceIdentifiable

  """A order object"""
  order(
    """The ID for identifying the order"""
    id: ID

    """Type of ID being used identify order"""
    idType: OrderIdTypeEnum
  ): Order

  """Connection between the RootQuery type and the Order type"""
  orders(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToOrderConnectionWhereArgs
  ): RootQueryToOrderConnection

  """A 0bject"""
  paArchitecto(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaArchitectoIdType
  ): PaArchitecto

  """A 0bject"""
  paAspernatur(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaAspernaturIdType
  ): PaAspernatur

  """A 0bject"""
  paAtque(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaAtqueIdType
  ): PaAtque

  """A 0bject"""
  paColor(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaColorIdType
  ): PaColor

  """A 0bject"""
  paConsequatur(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaConsequaturIdType
  ): PaConsequatur

  """A 0bject"""
  paCum(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaCumIdType
  ): PaCum

  """A 0bject"""
  paDolor(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaDolorIdType
  ): PaDolor

  """A 0bject"""
  paDoloremque(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaDoloremqueIdType
  ): PaDoloremque

  """A 0bject"""
  paDolores(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaDoloresIdType
  ): PaDolores

  """A 0bject"""
  paDolorum(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaDolorumIdType
  ): PaDolorum

  """A 0bject"""
  paEa(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaEaIdType
  ): PaEa

  """A 0bject"""
  paEos(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaEosIdType
  ): PaEos

  """A 0bject"""
  paEt(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaEtIdType
  ): PaEt

  """A 0bject"""
  paExcepturi(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaExcepturiIdType
  ): PaExcepturi

  """A 0bject"""
  paExplicabo(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaExplicaboIdType
  ): PaExplicabo

  """A 0bject"""
  paFacere(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaFacereIdType
  ): PaFacere

  """A 0bject"""
  paHarum(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaHarumIdType
  ): PaHarum

  """A 0bject"""
  paIncidunt(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaInciduntIdType
  ): PaIncidunt

  """A 0bject"""
  paIpsam(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaIpsamIdType
  ): PaIpsam

  """A 0bject"""
  paIusto(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaIustoIdType
  ): PaIusto

  """A 0bject"""
  paLaudantium(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaLaudantiumIdType
  ): PaLaudantium

  """A 0bject"""
  paMagnam(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaMagnamIdType
  ): PaMagnam

  """A 0bject"""
  paMagni(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaMagniIdType
  ): PaMagni

  """A 0bject"""
  paMinima(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaMinimaIdType
  ): PaMinima

  """A 0bject"""
  paMolestiae(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaMolestiaeIdType
  ): PaMolestiae

  """A 0bject"""
  paNihil(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaNihilIdType
  ): PaNihil

  """A 0bject"""
  paNon(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaNonIdType
  ): PaNon

  """A 0bject"""
  paNulla(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaNullaIdType
  ): PaNulla

  """A 0bject"""
  paNumericSize(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaNumericSizeIdType
  ): PaNumericSize

  """A 0bject"""
  paOmnis(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaOmnisIdType
  ): PaOmnis

  """A 0bject"""
  paOptio(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaOptioIdType
  ): PaOptio

  """A 0bject"""
  paPraesentium(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaPraesentiumIdType
  ): PaPraesentium

  """A 0bject"""
  paProvident(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaProvidentIdType
  ): PaProvident

  """A 0bject"""
  paQuae(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaQuaeIdType
  ): PaQuae

  """A 0bject"""
  paQui(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaQuiIdType
  ): PaQui

  """A 0bject"""
  paQuia(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaQuiaIdType
  ): PaQuia

  """A 0bject"""
  paQuidem(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaQuidemIdType
  ): PaQuidem

  """A 0bject"""
  paQuis(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaQuisIdType
  ): PaQuis

  """A 0bject"""
  paQuo(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaQuoIdType
  ): PaQuo

  """A 0bject"""
  paRepellendus(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaRepellendusIdType
  ): PaRepellendus

  """A 0bject"""
  paReprehenderit(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaReprehenderitIdType
  ): PaReprehenderit

  """A 0bject"""
  paRerum(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaRerumIdType
  ): PaRerum

  """A 0bject"""
  paSit(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaSitIdType
  ): PaSit

  """A 0bject"""
  paSize(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaSizeIdType
  ): PaSize

  """A 0bject"""
  paTenetur(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaTeneturIdType
  ): PaTenetur

  """A 0bject"""
  paVel(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PaVelIdType
  ): PaVel

  """An object of the page Type. """
  page(
    """Whether to return the node as a preview instance"""
    asPreview: Boolean

    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PageIdType
  ): Page

  """A page object"""
  pageBy(
    """Get the object by its global ID"""
    id: ID

    """Get the page by its database ID"""
    pageId: Int

    """Get the page by its uri"""
    uri: String
  ): Page @deprecated(reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)")

  """Connection between the RootQuery type and the page type"""
  pages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPageConnectionWhereArgs
  ): RootQueryToPageConnection

  """Connection between the RootQuery type and the PaymentGateway type"""
  paymentGateways(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPaymentGatewayConnectionWhereArgs
  ): RootQueryToPaymentGatewayConnection

  """A WordPress plugin"""
  plugin(
    """The globally unique identifier of the plugin."""
    id: ID!
  ): Plugin

  """Connection between the RootQuery type and the Plugin type"""
  plugins(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPluginConnectionWhereArgs
  ): RootQueryToPluginConnection

  """An object of the post Type. """
  post(
    """Whether to return the node as a preview instance"""
    asPreview: Boolean

    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PostIdType
  ): Post

  """A post object"""
  postBy(
    """Get the object by its global ID"""
    id: ID

    """Get the post by its database ID"""
    postId: Int

    """Get the post by its slug (only available for non-hierarchical types)"""
    slug: String

    """Get the post by its uri"""
    uri: String
  ): Post @deprecated(reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)")

  """A 0bject"""
  postFormat(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: PostFormatIdType
  ): PostFormat

  """Connection between the RootQuery type and the postFormat type"""
  postFormats(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPostFormatConnectionWhereArgs
  ): RootQueryToPostFormatConnection

  """Connection between the RootQuery type and the post type"""
  posts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToPostConnectionWhereArgs
  ): RootQueryToPostConnection

  """A product object"""
  product(
    """The ID for identifying the product"""
    id: ID!

    """Type of ID being used identify product"""
    idType: ProductIdTypeEnum
  ): Product

  """Connection between the RootQuery type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToProductCategoryConnectionWhereArgs
  ): RootQueryToProductCategoryConnection

  """A 0bject"""
  productCategory(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: ProductCategoryIdType
  ): ProductCategory

  """A 0bject"""
  productTag(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: ProductTagIdType
  ): ProductTag

  """Connection between the RootQuery type and the productTag type"""
  productTags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToProductTagConnectionWhereArgs
  ): RootQueryToProductTagConnection

  """A 0bject"""
  productType(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: ProductTypeIdType
  ): ProductType

  """Connection between the RootQuery type and the productType type"""
  productTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToProductTypeConnectionWhereArgs
  ): RootQueryToProductTypeConnection

  """A product variation object"""
  productVariation(
    """The ID for identifying the product variation"""
    id: ID

    """Type of ID being used identify product variation"""
    idType: ProductVariationIdTypeEnum
  ): ProductVariation

  """Connection between the RootQuery type and the Product type"""
  products(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToProductConnectionWhereArgs
  ): RootQueryToProductConnection

  """Fields of the &#039;ReadingSettings&#039; settings group"""
  readingSettings: ReadingSettings

  """A refund object"""
  refund(
    """The ID for identifying the refund"""
    id: ID!

    """Type of ID being used identify refund"""
    idType: RefundIdTypeEnum
  ): Refund

  """Connection between the RootQuery type and the Refund type"""
  refunds(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToRefundConnectionWhereArgs
  ): RootQueryToRefundConnection

  """Connection between the RootQuery type and the EnqueuedScript type"""
  registeredScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToEnqueuedScriptConnection

  """Connection between the RootQuery type and the EnqueuedStylesheet type"""
  registeredStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToEnqueuedStylesheetConnection

  """An object of the ReusableBlock Type. """
  reusableBlock(
    """Whether to return the node as a preview instance"""
    asPreview: Boolean

    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: ReusableBlockIdType
  ): ReusableBlock

  """A ReusableBlock object"""
  reusableBlockBy(
    """Get the object by its global ID"""
    id: ID

    """Get the ReusableBlock by its database ID"""
    reusableBlockId: Int

    """
    Get the ReusableBlock by its slug (only available for non-hierarchical types)
    """
    slug: String

    """Get the ReusableBlock by its uri"""
    uri: String
  ): ReusableBlock @deprecated(reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)")

  """Connection between the RootQuery type and the ReusableBlock type"""
  reusableBlocks(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToReusableBlockConnectionWhereArgs
  ): RootQueryToReusableBlockConnection

  """
  Connection between the RootQuery type and the ContentRevisionUnion type
  """
  revisions(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToContentRevisionUnionConnectionWhereArgs
  ): RootQueryToContentRevisionUnionConnection

  """Returns seo site data"""
  seo: SEOConfig

  """A 0bject"""
  shippingClass(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: ShippingClassIdType
  ): ShippingClass

  """Connection between the RootQuery type and the shippingClass type"""
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToShippingClassConnectionWhereArgs
  ): RootQueryToShippingClassConnection

  """Shipping Zones"""
  shippingInfo: ShippingInfo

  """A shipping method object"""
  shippingMethod(
    """The ID for identifying the shipping method"""
    id: ID

    """Type of ID being used identify product variation"""
    idType: ShippingMethodIdTypeEnum
  ): ShippingMethod

  """Connection between the RootQuery type and the ShippingMethod type"""
  shippingMethods(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToShippingMethodConnection

  """A simple product object"""
  simpleProduct(
    """The ID for identifying the SimpleProduct product"""
    id: ID

    """Type of ID being used identify product"""
    idType: ProductIdTypeEnum
  ): SimpleProduct

  """A 0bject"""
  tag(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: TagIdType
  ): Tag

  """Connection between the RootQuery type and the tag type"""
  tags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToTagConnectionWhereArgs
  ): RootQueryToTagConnection

  """A tax rate object"""
  taxRate(
    """The ID for identifying the tax rate"""
    id: ID

    """Type of ID being used identify tax rate"""
    idType: TaxRateIdTypeEnum
  ): TaxRate

  """Connection between the RootQuery type and the TaxRate type"""
  taxRates(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToTaxRateConnectionWhereArgs
  ): RootQueryToTaxRateConnection

  """Connection between the RootQuery type and the Taxonomy type"""
  taxonomies(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToTaxonomyConnection

  """Fetch a Taxonomy node by unique Identifier"""
  taxonomy(
    """Unique Identifier for the Taxonomy node."""
    id: ID!

    """Type of unique identifier to fetch a taxonomy by. Default is Global ID"""
    idType: TaxonomyIdTypeEnum
  ): Taxonomy

  """A node in a taxonomy used to group and relate content nodes"""
  termNode(
    """Unique identifier for the term node."""
    id: ID!

    """
    Type of unique identifier to fetch a term node by. Default is Global ID
    """
    idType: TermNodeIdTypeEnum

    """
    The taxonomy of the tern node. Required when idType is set to "name" or "slug"
    """
    taxonomy: TaxonomyEnum
  ): TermNode

  """Connection between the RootQuery type and the TermNode type"""
  terms(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToTermNodeConnectionWhereArgs
  ): RootQueryToTermNodeConnection

  """A Theme object"""
  theme(
    """The globally unique identifier of the theme."""
    id: ID!
  ): Theme

  """Connection between the RootQuery type and the Theme type"""
  themes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToThemeConnection

  """Returns a user"""
  user(
    """The globally unique identifier of the user."""
    id: ID!

    """Type of unique identifier to fetch a user by. Default is Global ID"""
    idType: UserNodeIdTypeEnum
  ): User

  """Returns a user role"""
  userRole(
    """The globally unique identifier of the user object."""
    id: ID!
  ): UserRole

  """Connection between the RootQuery type and the UserRole type"""
  userRoles(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): RootQueryToUserRoleConnection

  """Connection between the RootQuery type and the User type"""
  users(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToUserConnectionWhereArgs
  ): RootQueryToUserConnection

  """A simple product object"""
  variableProduct(
    """The ID for identifying the VariableProduct product"""
    id: ID

    """Type of ID being used identify product"""
    idType: ProductIdTypeEnum
  ): VariableProduct

  """Returns the current user"""
  viewer: User

  """A 0bject"""
  visibleProduct(
    """The globally unique identifier of the object."""
    id: ID!

    """Type of unique identifier to fetch by. Default is Global ID"""
    idType: VisibleProductIdType
  ): VisibleProduct

  """Connection between the RootQuery type and the visibleProduct type"""
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: RootQueryToVisibleProductConnectionWhereArgs
  ): RootQueryToVisibleProductConnection

  """Countries"""
  wooCountries: WooCountries

  """States"""
  wooStates(countryCode: String): WooStates

  """Fields of the &#039;WritingSettings&#039; settings group"""
  writingSettings: WritingSettings
}

"""Connection between the RootQuery type and the BlockEditorPreview type"""
type RootQueryToBlockEditorPreviewConnection {
  """Edges for the RootQueryToBlockEditorPreviewConnection connection"""
  edges: [RootQueryToBlockEditorPreviewConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [BlockEditorPreview]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToBlockEditorPreviewConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: BlockEditorPreview
}

"""
Arguments for filtering the RootQueryToBlockEditorPreviewConnection connection
"""
input RootQueryToBlockEditorPreviewConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """Paginate BlockEditorPreviews with offsets"""
  offsetPagination: OffsetPagination

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String
  previewedDatabaseId: Int
  previewedParentDatabaseId: Int

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the RootQuery type and the category type"""
type RootQueryToCategoryConnection {
  """Edges for the RootQueryToCategoryConnection connection"""
  edges: [RootQueryToCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Category]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Category
}

"""Arguments for filtering the RootQueryToCategoryConnection connection"""
input RootQueryToCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the Comment type"""
type RootQueryToCommentConnection {
  """Edges for the RootQueryToCommentConnection connection"""
  edges: [RootQueryToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the RootQueryToCommentConnection connection"""
input RootQueryToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Connection between the RootQuery type and the ContentNode type"""
type RootQueryToContentNodeConnection {
  """Edges for the RootQueryToContentNodeConnection connection"""
  edges: [RootQueryToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the RootQueryToContentNodeConnection connection
"""
input RootQueryToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """Paginate content nodes with offsets"""
  offsetPagination: OffsetPagination

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""
Connection between the RootQuery type and the ContentRevisionUnion type
"""
type RootQueryToContentRevisionUnionConnection {
  """Edges for the RootQueryToContentRevisionUnionConnection connection"""
  edges: [RootQueryToContentRevisionUnionConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentRevisionUnion]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToContentRevisionUnionConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentRevisionUnion
}

"""
Arguments for filtering the RootQueryToContentRevisionUnionConnection connection
"""
input RootQueryToContentRevisionUnionConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the RootQuery type and the ContentType type"""
type RootQueryToContentTypeConnection {
  """Edges for the RootQueryToContentTypeConnection connection"""
  edges: [RootQueryToContentTypeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentType]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToContentTypeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentType
}

"""Connection between the RootQuery type and the Coupon type"""
type RootQueryToCouponConnection {
  """Edges for the RootQueryToCouponConnection connection"""
  edges: [RootQueryToCouponConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Coupon]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToCouponConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Coupon
}

"""Arguments for filtering the RootQueryToCouponConnection connection"""
input RootQueryToCouponConnectionWhereArgs {
  """Limit result set to resources with a specific code."""
  code: String

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """What paramater to use to order the objects by."""
  orderby: [PostTypeOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit results to those matching a string."""
  search: String
}

"""Connection between the RootQuery type and the Customer type"""
type RootQueryToCustomerConnection {
  """Edges for the RootQueryToCustomerConnection connection"""
  edges: [RootQueryToCustomerConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Customer]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToCustomerConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Customer
}

"""Arguments for filtering the RootQueryToCustomerConnection connection"""
input RootQueryToCustomerConnectionWhereArgs {
  """Limit result set to resources with a specific email."""
  email: String

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """Order of results."""
  order: OrderEnum

  """Order results by a specific field."""
  orderby: CustomerConnectionOrderbyEnum

  """Limit results to those matching a string."""
  search: String
}

"""Connection between the RootQuery type and the EnqueuedScript type"""
type RootQueryToEnqueuedScriptConnection {
  """Edges for the RootQueryToEnqueuedScriptConnection connection"""
  edges: [RootQueryToEnqueuedScriptConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedScript]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToEnqueuedScriptConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedScript
}

"""Connection between the RootQuery type and the EnqueuedStylesheet type"""
type RootQueryToEnqueuedStylesheetConnection {
  """Edges for the RootQueryToEnqueuedStylesheetConnection connection"""
  edges: [RootQueryToEnqueuedStylesheetConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedStylesheet]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToEnqueuedStylesheetConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedStylesheet
}

"""Connection between the RootQuery type and the mediaItem type"""
type RootQueryToMediaItemConnection {
  """Edges for the RootQueryToMediaItemConnection connection"""
  edges: [RootQueryToMediaItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [MediaItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToMediaItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: MediaItem
}

"""Arguments for filtering the RootQueryToMediaItemConnection connection"""
input RootQueryToMediaItemConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """Paginate MediaItems with offsets"""
  offsetPagination: OffsetPagination

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the RootQuery type and the Menu type"""
type RootQueryToMenuConnection {
  """Edges for the RootQueryToMenuConnection connection"""
  edges: [RootQueryToMenuConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Menu]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToMenuConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Menu
}

"""Arguments for filtering the RootQueryToMenuConnection connection"""
input RootQueryToMenuConnectionWhereArgs {
  """The database ID of the object"""
  id: Int

  """The menu location for the menu being queried"""
  location: MenuLocationEnum

  """The slug of the menu to query items for"""
  slug: String
}

"""Connection between the RootQuery type and the MenuItem type"""
type RootQueryToMenuItemConnection {
  """Edges for the RootQueryToMenuItemConnection connection"""
  edges: [RootQueryToMenuItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [MenuItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToMenuItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: MenuItem
}

"""Arguments for filtering the RootQueryToMenuItemConnection connection"""
input RootQueryToMenuItemConnectionWhereArgs {
  """The database ID of the object"""
  id: Int

  """The menu location for the menu being queried"""
  location: MenuLocationEnum

  """The database ID of the parent menu object"""
  parentDatabaseId: Int

  """The ID of the parent menu object"""
  parentId: ID
}

"""Connection between the RootQuery type and the Order type"""
type RootQueryToOrderConnection {
  """Edges for the RootQueryToOrderConnection connection"""
  edges: [RootQueryToOrderConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Order]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToOrderConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Order
}

"""Arguments for filtering the RootQueryToOrderConnection connection"""
input RootQueryToOrderConnectionWhereArgs {
  """Limit result set to orders assigned a specific customer."""
  customerId: Int

  """Limit result set to orders assigned a specific group of customers."""
  customersIn: [Int]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """What paramater to use to order the objects by."""
  orderby: [OrdersOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to orders assigned a specific product."""
  productId: Int

  """Limit results to those matching a string."""
  search: String

  """Limit result set to orders assigned a specific status."""
  statuses: [OrderStatusEnum]
}

"""Connection between the RootQuery type and the paArchitecto type"""
type RootQueryToPaArchitectoConnection {
  """Edges for the RootQueryToPaArchitectoConnection connection"""
  edges: [RootQueryToPaArchitectoConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaArchitecto]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaArchitectoConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaArchitecto
}

"""
Arguments for filtering the RootQueryToPaArchitectoConnection connection
"""
input RootQueryToPaArchitectoConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paAspernatur type"""
type RootQueryToPaAspernaturConnection {
  """Edges for the RootQueryToPaAspernaturConnection connection"""
  edges: [RootQueryToPaAspernaturConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaAspernatur]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaAspernaturConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaAspernatur
}

"""
Arguments for filtering the RootQueryToPaAspernaturConnection connection
"""
input RootQueryToPaAspernaturConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paAtque type"""
type RootQueryToPaAtqueConnection {
  """Edges for the RootQueryToPaAtqueConnection connection"""
  edges: [RootQueryToPaAtqueConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaAtque]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaAtqueConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaAtque
}

"""Arguments for filtering the RootQueryToPaAtqueConnection connection"""
input RootQueryToPaAtqueConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paColor type"""
type RootQueryToPaColorConnection {
  """Edges for the RootQueryToPaColorConnection connection"""
  edges: [RootQueryToPaColorConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaColor]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaColorConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaColor
}

"""Arguments for filtering the RootQueryToPaColorConnection connection"""
input RootQueryToPaColorConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paConsequatur type"""
type RootQueryToPaConsequaturConnection {
  """Edges for the RootQueryToPaConsequaturConnection connection"""
  edges: [RootQueryToPaConsequaturConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaConsequatur]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaConsequaturConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaConsequatur
}

"""
Arguments for filtering the RootQueryToPaConsequaturConnection connection
"""
input RootQueryToPaConsequaturConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paCum type"""
type RootQueryToPaCumConnection {
  """Edges for the RootQueryToPaCumConnection connection"""
  edges: [RootQueryToPaCumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaCum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaCumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaCum
}

"""Arguments for filtering the RootQueryToPaCumConnection connection"""
input RootQueryToPaCumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paDolor type"""
type RootQueryToPaDolorConnection {
  """Edges for the RootQueryToPaDolorConnection connection"""
  edges: [RootQueryToPaDolorConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDolor]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaDolorConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaDolor
}

"""Arguments for filtering the RootQueryToPaDolorConnection connection"""
input RootQueryToPaDolorConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paDoloremque type"""
type RootQueryToPaDoloremqueConnection {
  """Edges for the RootQueryToPaDoloremqueConnection connection"""
  edges: [RootQueryToPaDoloremqueConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDoloremque]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaDoloremqueConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaDoloremque
}

"""
Arguments for filtering the RootQueryToPaDoloremqueConnection connection
"""
input RootQueryToPaDoloremqueConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paDolores type"""
type RootQueryToPaDoloresConnection {
  """Edges for the RootQueryToPaDoloresConnection connection"""
  edges: [RootQueryToPaDoloresConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDolores]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaDoloresConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaDolores
}

"""Arguments for filtering the RootQueryToPaDoloresConnection connection"""
input RootQueryToPaDoloresConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paDolorum type"""
type RootQueryToPaDolorumConnection {
  """Edges for the RootQueryToPaDolorumConnection connection"""
  edges: [RootQueryToPaDolorumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaDolorum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaDolorumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaDolorum
}

"""Arguments for filtering the RootQueryToPaDolorumConnection connection"""
input RootQueryToPaDolorumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paEa type"""
type RootQueryToPaEaConnection {
  """Edges for the RootQueryToPaEaConnection connection"""
  edges: [RootQueryToPaEaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaEa]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaEaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaEa
}

"""Arguments for filtering the RootQueryToPaEaConnection connection"""
input RootQueryToPaEaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paEos type"""
type RootQueryToPaEosConnection {
  """Edges for the RootQueryToPaEosConnection connection"""
  edges: [RootQueryToPaEosConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaEos]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaEosConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaEos
}

"""Arguments for filtering the RootQueryToPaEosConnection connection"""
input RootQueryToPaEosConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paEt type"""
type RootQueryToPaEtConnection {
  """Edges for the RootQueryToPaEtConnection connection"""
  edges: [RootQueryToPaEtConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaEt]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaEtConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaEt
}

"""Arguments for filtering the RootQueryToPaEtConnection connection"""
input RootQueryToPaEtConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paExcepturi type"""
type RootQueryToPaExcepturiConnection {
  """Edges for the RootQueryToPaExcepturiConnection connection"""
  edges: [RootQueryToPaExcepturiConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaExcepturi]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaExcepturiConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaExcepturi
}

"""
Arguments for filtering the RootQueryToPaExcepturiConnection connection
"""
input RootQueryToPaExcepturiConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paExplicabo type"""
type RootQueryToPaExplicaboConnection {
  """Edges for the RootQueryToPaExplicaboConnection connection"""
  edges: [RootQueryToPaExplicaboConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaExplicabo]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaExplicaboConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaExplicabo
}

"""
Arguments for filtering the RootQueryToPaExplicaboConnection connection
"""
input RootQueryToPaExplicaboConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paFacere type"""
type RootQueryToPaFacereConnection {
  """Edges for the RootQueryToPaFacereConnection connection"""
  edges: [RootQueryToPaFacereConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaFacere]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaFacereConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaFacere
}

"""Arguments for filtering the RootQueryToPaFacereConnection connection"""
input RootQueryToPaFacereConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paHarum type"""
type RootQueryToPaHarumConnection {
  """Edges for the RootQueryToPaHarumConnection connection"""
  edges: [RootQueryToPaHarumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaHarum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaHarumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaHarum
}

"""Arguments for filtering the RootQueryToPaHarumConnection connection"""
input RootQueryToPaHarumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paIncidunt type"""
type RootQueryToPaInciduntConnection {
  """Edges for the RootQueryToPaInciduntConnection connection"""
  edges: [RootQueryToPaInciduntConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaIncidunt]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaInciduntConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaIncidunt
}

"""Arguments for filtering the RootQueryToPaInciduntConnection connection"""
input RootQueryToPaInciduntConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paIpsam type"""
type RootQueryToPaIpsamConnection {
  """Edges for the RootQueryToPaIpsamConnection connection"""
  edges: [RootQueryToPaIpsamConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaIpsam]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaIpsamConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaIpsam
}

"""Arguments for filtering the RootQueryToPaIpsamConnection connection"""
input RootQueryToPaIpsamConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paIusto type"""
type RootQueryToPaIustoConnection {
  """Edges for the RootQueryToPaIustoConnection connection"""
  edges: [RootQueryToPaIustoConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaIusto]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaIustoConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaIusto
}

"""Arguments for filtering the RootQueryToPaIustoConnection connection"""
input RootQueryToPaIustoConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paLaudantium type"""
type RootQueryToPaLaudantiumConnection {
  """Edges for the RootQueryToPaLaudantiumConnection connection"""
  edges: [RootQueryToPaLaudantiumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaLaudantium]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaLaudantiumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaLaudantium
}

"""
Arguments for filtering the RootQueryToPaLaudantiumConnection connection
"""
input RootQueryToPaLaudantiumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paMagnam type"""
type RootQueryToPaMagnamConnection {
  """Edges for the RootQueryToPaMagnamConnection connection"""
  edges: [RootQueryToPaMagnamConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMagnam]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaMagnamConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaMagnam
}

"""Arguments for filtering the RootQueryToPaMagnamConnection connection"""
input RootQueryToPaMagnamConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paMagni type"""
type RootQueryToPaMagniConnection {
  """Edges for the RootQueryToPaMagniConnection connection"""
  edges: [RootQueryToPaMagniConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMagni]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaMagniConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaMagni
}

"""Arguments for filtering the RootQueryToPaMagniConnection connection"""
input RootQueryToPaMagniConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paMinima type"""
type RootQueryToPaMinimaConnection {
  """Edges for the RootQueryToPaMinimaConnection connection"""
  edges: [RootQueryToPaMinimaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMinima]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaMinimaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaMinima
}

"""Arguments for filtering the RootQueryToPaMinimaConnection connection"""
input RootQueryToPaMinimaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paMolestiae type"""
type RootQueryToPaMolestiaeConnection {
  """Edges for the RootQueryToPaMolestiaeConnection connection"""
  edges: [RootQueryToPaMolestiaeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaMolestiae]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaMolestiaeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaMolestiae
}

"""
Arguments for filtering the RootQueryToPaMolestiaeConnection connection
"""
input RootQueryToPaMolestiaeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paNihil type"""
type RootQueryToPaNihilConnection {
  """Edges for the RootQueryToPaNihilConnection connection"""
  edges: [RootQueryToPaNihilConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNihil]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaNihilConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaNihil
}

"""Arguments for filtering the RootQueryToPaNihilConnection connection"""
input RootQueryToPaNihilConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paNon type"""
type RootQueryToPaNonConnection {
  """Edges for the RootQueryToPaNonConnection connection"""
  edges: [RootQueryToPaNonConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNon]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaNonConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaNon
}

"""Arguments for filtering the RootQueryToPaNonConnection connection"""
input RootQueryToPaNonConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paNulla type"""
type RootQueryToPaNullaConnection {
  """Edges for the RootQueryToPaNullaConnection connection"""
  edges: [RootQueryToPaNullaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNulla]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaNullaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaNulla
}

"""Arguments for filtering the RootQueryToPaNullaConnection connection"""
input RootQueryToPaNullaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paNumericSize type"""
type RootQueryToPaNumericSizeConnection {
  """Edges for the RootQueryToPaNumericSizeConnection connection"""
  edges: [RootQueryToPaNumericSizeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaNumericSize]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaNumericSizeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaNumericSize
}

"""
Arguments for filtering the RootQueryToPaNumericSizeConnection connection
"""
input RootQueryToPaNumericSizeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paOmnis type"""
type RootQueryToPaOmnisConnection {
  """Edges for the RootQueryToPaOmnisConnection connection"""
  edges: [RootQueryToPaOmnisConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaOmnis]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaOmnisConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaOmnis
}

"""Arguments for filtering the RootQueryToPaOmnisConnection connection"""
input RootQueryToPaOmnisConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paOptio type"""
type RootQueryToPaOptioConnection {
  """Edges for the RootQueryToPaOptioConnection connection"""
  edges: [RootQueryToPaOptioConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaOptio]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaOptioConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaOptio
}

"""Arguments for filtering the RootQueryToPaOptioConnection connection"""
input RootQueryToPaOptioConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paPraesentium type"""
type RootQueryToPaPraesentiumConnection {
  """Edges for the RootQueryToPaPraesentiumConnection connection"""
  edges: [RootQueryToPaPraesentiumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaPraesentium]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaPraesentiumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaPraesentium
}

"""
Arguments for filtering the RootQueryToPaPraesentiumConnection connection
"""
input RootQueryToPaPraesentiumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paProvident type"""
type RootQueryToPaProvidentConnection {
  """Edges for the RootQueryToPaProvidentConnection connection"""
  edges: [RootQueryToPaProvidentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaProvident]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaProvidentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaProvident
}

"""
Arguments for filtering the RootQueryToPaProvidentConnection connection
"""
input RootQueryToPaProvidentConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paQuae type"""
type RootQueryToPaQuaeConnection {
  """Edges for the RootQueryToPaQuaeConnection connection"""
  edges: [RootQueryToPaQuaeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuae]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaQuaeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaQuae
}

"""Arguments for filtering the RootQueryToPaQuaeConnection connection"""
input RootQueryToPaQuaeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paQui type"""
type RootQueryToPaQuiConnection {
  """Edges for the RootQueryToPaQuiConnection connection"""
  edges: [RootQueryToPaQuiConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQui]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaQuiConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaQui
}

"""Arguments for filtering the RootQueryToPaQuiConnection connection"""
input RootQueryToPaQuiConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paQuia type"""
type RootQueryToPaQuiaConnection {
  """Edges for the RootQueryToPaQuiaConnection connection"""
  edges: [RootQueryToPaQuiaConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuia]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaQuiaConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaQuia
}

"""Arguments for filtering the RootQueryToPaQuiaConnection connection"""
input RootQueryToPaQuiaConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paQuidem type"""
type RootQueryToPaQuidemConnection {
  """Edges for the RootQueryToPaQuidemConnection connection"""
  edges: [RootQueryToPaQuidemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuidem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaQuidemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaQuidem
}

"""Arguments for filtering the RootQueryToPaQuidemConnection connection"""
input RootQueryToPaQuidemConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paQuis type"""
type RootQueryToPaQuisConnection {
  """Edges for the RootQueryToPaQuisConnection connection"""
  edges: [RootQueryToPaQuisConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuis]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaQuisConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaQuis
}

"""Arguments for filtering the RootQueryToPaQuisConnection connection"""
input RootQueryToPaQuisConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paQuo type"""
type RootQueryToPaQuoConnection {
  """Edges for the RootQueryToPaQuoConnection connection"""
  edges: [RootQueryToPaQuoConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaQuo]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaQuoConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaQuo
}

"""Arguments for filtering the RootQueryToPaQuoConnection connection"""
input RootQueryToPaQuoConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paRepellendus type"""
type RootQueryToPaRepellendusConnection {
  """Edges for the RootQueryToPaRepellendusConnection connection"""
  edges: [RootQueryToPaRepellendusConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaRepellendus]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaRepellendusConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaRepellendus
}

"""
Arguments for filtering the RootQueryToPaRepellendusConnection connection
"""
input RootQueryToPaRepellendusConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paReprehenderit type"""
type RootQueryToPaReprehenderitConnection {
  """Edges for the RootQueryToPaReprehenderitConnection connection"""
  edges: [RootQueryToPaReprehenderitConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaReprehenderit]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaReprehenderitConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaReprehenderit
}

"""
Arguments for filtering the RootQueryToPaReprehenderitConnection connection
"""
input RootQueryToPaReprehenderitConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paRerum type"""
type RootQueryToPaRerumConnection {
  """Edges for the RootQueryToPaRerumConnection connection"""
  edges: [RootQueryToPaRerumConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaRerum]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaRerumConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaRerum
}

"""Arguments for filtering the RootQueryToPaRerumConnection connection"""
input RootQueryToPaRerumConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paSit type"""
type RootQueryToPaSitConnection {
  """Edges for the RootQueryToPaSitConnection connection"""
  edges: [RootQueryToPaSitConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaSit]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaSitConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaSit
}

"""Arguments for filtering the RootQueryToPaSitConnection connection"""
input RootQueryToPaSitConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paSize type"""
type RootQueryToPaSizeConnection {
  """Edges for the RootQueryToPaSizeConnection connection"""
  edges: [RootQueryToPaSizeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaSize]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaSizeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaSize
}

"""Arguments for filtering the RootQueryToPaSizeConnection connection"""
input RootQueryToPaSizeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paTenetur type"""
type RootQueryToPaTeneturConnection {
  """Edges for the RootQueryToPaTeneturConnection connection"""
  edges: [RootQueryToPaTeneturConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaTenetur]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaTeneturConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaTenetur
}

"""Arguments for filtering the RootQueryToPaTeneturConnection connection"""
input RootQueryToPaTeneturConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the paVel type"""
type RootQueryToPaVelConnection {
  """Edges for the RootQueryToPaVelConnection connection"""
  edges: [RootQueryToPaVelConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaVel]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaVelConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaVel
}

"""Arguments for filtering the RootQueryToPaVelConnection connection"""
input RootQueryToPaVelConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the page type"""
type RootQueryToPageConnection {
  """Edges for the RootQueryToPageConnection connection"""
  edges: [RootQueryToPageConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Page]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPageConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Page
}

"""Arguments for filtering the RootQueryToPageConnection connection"""
input RootQueryToPageConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """Paginate Pages with offsets"""
  offsetPagination: OffsetPagination

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the RootQuery type and the PaymentGateway type"""
type RootQueryToPaymentGatewayConnection {
  """Edges for the RootQueryToPaymentGatewayConnection connection"""
  edges: [RootQueryToPaymentGatewayConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PaymentGateway]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPaymentGatewayConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PaymentGateway
}

"""
Arguments for filtering the RootQueryToPaymentGatewayConnection connection
"""
input RootQueryToPaymentGatewayConnectionWhereArgs {
  """Include disabled payment gateways?"""
  all: Boolean
}

"""Connection between the RootQuery type and the Plugin type"""
type RootQueryToPluginConnection {
  """Edges for the RootQueryToPluginConnection connection"""
  edges: [RootQueryToPluginConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Plugin]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPluginConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Plugin
}

"""Arguments for filtering the RootQueryToPluginConnection connection"""
input RootQueryToPluginConnectionWhereArgs {
  """Show plugin based on a keyword search."""
  search: String

  """Retrieve plugins where plugin status is in an array."""
  stati: [PluginStatusEnum]

  """Show plugins with a specific status."""
  status: PluginStatusEnum
}

"""Connection between the RootQuery type and the post type"""
type RootQueryToPostConnection {
  """Edges for the RootQueryToPostConnection connection"""
  edges: [RootQueryToPostConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Post]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPostConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Post
}

"""Arguments for filtering the RootQueryToPostConnection connection"""
input RootQueryToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Category ID"""
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """Use Category Slug"""
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """Paginate Posts with offsets"""
  offsetPagination: OffsetPagination

  """The ID of the post object to filter by"""
  onlySticky: Boolean

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Tag Slug"""
  tag: String

  """Use Tag ID"""
  tagId: String

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagIn: [ID]

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagNotIn: [ID]

  """Array of tag slugs, used to display objects from one tag OR another"""
  tagSlugAnd: [String]

  """Array of tag slugs, used to exclude objects in specified tags"""
  tagSlugIn: [String]

  """Title of the object"""
  title: String
}

"""Connection between the RootQuery type and the postFormat type"""
type RootQueryToPostFormatConnection {
  """Edges for the RootQueryToPostFormatConnection connection"""
  edges: [RootQueryToPostFormatConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [PostFormat]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToPostFormatConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: PostFormat
}

"""Arguments for filtering the RootQueryToPostFormatConnection connection"""
input RootQueryToPostFormatConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the productCategory type"""
type RootQueryToProductCategoryConnection {
  """Edges for the RootQueryToProductCategoryConnection connection"""
  edges: [RootQueryToProductCategoryConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductCategory]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToProductCategoryConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductCategory
}

"""
Arguments for filtering the RootQueryToProductCategoryConnection connection
"""
input RootQueryToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the Product type"""
type RootQueryToProductConnection {
  """Edges for the RootQueryToProductConnection connection"""
  edges: [RootQueryToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""Arguments for filtering the RootQueryToProductConnection connection"""
input RootQueryToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""Connection between the RootQuery type and the productTag type"""
type RootQueryToProductTagConnection {
  """Edges for the RootQueryToProductTagConnection connection"""
  edges: [RootQueryToProductTagConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductTag]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToProductTagConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductTag
}

"""Arguments for filtering the RootQueryToProductTagConnection connection"""
input RootQueryToProductTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the productType type"""
type RootQueryToProductTypeConnection {
  """Edges for the RootQueryToProductTypeConnection connection"""
  edges: [RootQueryToProductTypeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductType]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToProductTypeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductType
}

"""
Arguments for filtering the RootQueryToProductTypeConnection connection
"""
input RootQueryToProductTypeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the Refund type"""
type RootQueryToRefundConnection {
  """Edges for the RootQueryToRefundConnection connection"""
  edges: [RootQueryToRefundConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Refund]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToRefundConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Refund
}

"""Arguments for filtering the RootQueryToRefundConnection connection"""
input RootQueryToRefundConnectionWhereArgs {
  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to refunds from a specific group of order IDs."""
  orderIn: [Int]

  """What paramater to use to order the objects by."""
  orderby: [PostTypeOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit results to those matching a string."""
  search: String

  """Limit result set to refunds assigned a specific status."""
  statuses: [String]
}

"""Connection between the RootQuery type and the ReusableBlock type"""
type RootQueryToReusableBlockConnection {
  """Edges for the RootQueryToReusableBlockConnection connection"""
  edges: [RootQueryToReusableBlockConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ReusableBlock]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToReusableBlockConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ReusableBlock
}

"""
Arguments for filtering the RootQueryToReusableBlockConnection connection
"""
input RootQueryToReusableBlockConnectionWhereArgs {
  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """Paginate ReusableBlocks with offsets"""
  offsetPagination: OffsetPagination

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the RootQuery type and the shippingClass type"""
type RootQueryToShippingClassConnection {
  """Edges for the RootQueryToShippingClassConnection connection"""
  edges: [RootQueryToShippingClassConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ShippingClass]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToShippingClassConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ShippingClass
}

"""
Arguments for filtering the RootQueryToShippingClassConnection connection
"""
input RootQueryToShippingClassConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the ShippingMethod type"""
type RootQueryToShippingMethodConnection {
  """Edges for the RootQueryToShippingMethodConnection connection"""
  edges: [RootQueryToShippingMethodConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ShippingMethod]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToShippingMethodConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ShippingMethod
}

"""Connection between the RootQuery type and the tag type"""
type RootQueryToTagConnection {
  """Edges for the RootQueryToTagConnection connection"""
  edges: [RootQueryToTagConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Tag]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToTagConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Tag
}

"""Arguments for filtering the RootQueryToTagConnection connection"""
input RootQueryToTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the TaxRate type"""
type RootQueryToTaxRateConnection {
  """Edges for the RootQueryToTaxRateConnection connection"""
  edges: [RootQueryToTaxRateConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [TaxRate]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToTaxRateConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: TaxRate
}

"""Arguments for filtering the RootQueryToTaxRateConnection connection"""
input RootQueryToTaxRateConnectionWhereArgs {
  """Sort by tax class."""
  class: TaxClassEnum

  """What paramater to use to order the objects by."""
  orderby: [TaxRateConnectionOrderbyInput]

  """Filter results by a post code."""
  postCode: String

  """Filter results by a group of post codes."""
  postCodeIn: [String]
}

"""Connection between the RootQuery type and the Taxonomy type"""
type RootQueryToTaxonomyConnection {
  """Edges for the RootQueryToTaxonomyConnection connection"""
  edges: [RootQueryToTaxonomyConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Taxonomy]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToTaxonomyConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Taxonomy
}

"""Connection between the RootQuery type and the TermNode type"""
type RootQueryToTermNodeConnection {
  """Edges for the RootQueryToTermNodeConnection connection"""
  edges: [RootQueryToTermNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [TermNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToTermNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: TermNode
}

"""Arguments for filtering the RootQueryToTermNodeConnection connection"""
input RootQueryToTermNodeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """The Taxonomy to filter terms by"""
  taxonomies: [TaxonomyEnum]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""Connection between the RootQuery type and the Theme type"""
type RootQueryToThemeConnection {
  """Edges for the RootQueryToThemeConnection connection"""
  edges: [RootQueryToThemeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Theme]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToThemeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Theme
}

"""Connection between the RootQuery type and the User type"""
type RootQueryToUserConnection {
  """Edges for the RootQueryToUserConnection connection"""
  edges: [RootQueryToUserConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [User]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToUserConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: User
}

"""Arguments for filtering the RootQueryToUserConnection connection"""
input RootQueryToUserConnectionWhereArgs {
  """Array of userIds to exclude."""
  exclude: [Int]

  """
  Pass an array of post types to filter results to users who have published posts in those post types.
  """
  hasPublishedPosts: [ContentTypeEnum]

  """Array of userIds to include."""
  include: [Int]

  """The user login."""
  login: String

  """
  An array of logins to include. Users matching one of these logins will be included in results.
  """
  loginIn: [String]

  """
  An array of logins to exclude. Users matching one of these logins will not be included in results.
  """
  loginNotIn: [String]

  """The user nicename."""
  nicename: String

  """
  An array of nicenames to include. Users matching one of these nicenames will be included in results.
  """
  nicenameIn: [String]

  """
  An array of nicenames to exclude. Users matching one of these nicenames will not be included in results.
  """
  nicenameNotIn: [String]

  """Paginate users with offsets"""
  offsetPagination: OffsetPagination

  """What paramater to use to order the objects by."""
  orderby: [UsersConnectionOrderbyInput]

  """
  An array of role names that users must match to be included in results. Note that this is an inclusive list: users must match *each* role.
  """
  role: UserRoleEnum

  """
  An array of role names. Matched users must have at least one of these roles.
  """
  roleIn: [UserRoleEnum]

  """
  An array of role names to exclude. Users matching one or more of these roles will not be included in results.
  """
  roleNotIn: [UserRoleEnum]

  """
  Search keyword. Searches for possible string matches on columns. When "searchColumns" is left empty, it tries to determine which column to search in based on search string.
  """
  search: String

  """
  Array of column names to be searched. Accepts 'ID', 'login', 'nicename', 'email', 'url'.
  """
  searchColumns: [UsersConnectionSearchColumnEnum]
}

"""Connection between the RootQuery type and the UserRole type"""
type RootQueryToUserRoleConnection {
  """Edges for the RootQueryToUserRoleConnection connection"""
  edges: [RootQueryToUserRoleConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [UserRole]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToUserRoleConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: UserRole
}

"""Connection between the RootQuery type and the visibleProduct type"""
type RootQueryToVisibleProductConnection {
  """Edges for the RootQueryToVisibleProductConnection connection"""
  edges: [RootQueryToVisibleProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VisibleProduct]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type RootQueryToVisibleProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VisibleProduct
}

"""
Arguments for filtering the RootQueryToVisibleProductConnection connection
"""
input RootQueryToVisibleProductConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """Array of term ids to include. Default empty array."""
  include: [ID]

  """Array of names to return term(s) for. Default empty."""
  name: [String]

  """Retrieve terms where the name is LIKE the input value. Default empty."""
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """Direction the connection should be ordered in"""
  order: OrderEnum

  """Field(s) to order terms by. Defaults to 'name'."""
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """Parent term ID to retrieve direct-child terms of. Default empty."""
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """Array of slugs to return term(s) for. Default empty."""
  slug: [String]

  """Array of term taxonomy IDs, to match when querying terms."""
  termTaxonomId: [ID]

  """Whether to prime meta caches for matched terms. Default true."""
  updateTermMetaCache: Boolean
}

"""The Yoast SEO breadcrumb config"""
type SEOBreadcrumbs {
  """"""
  archivePrefix: String

  """"""
  boldLast: Boolean

  """"""
  enabled: Boolean

  """"""
  homeText: String

  """"""
  notFoundText: String

  """"""
  prefix: String

  """"""
  searchPrefix: String

  """"""
  separator: String

  """"""
  showBlogPage: Boolean
}

"""Types of cards"""
enum SEOCardType {
  summary
  summary_large_image
}

"""The Yoast SEO site level configuration data"""
type SEOConfig {
  """"""
  breadcrumbs: SEOBreadcrumbs

  """"""
  contentTypes: SEOContentTypes

  """"""
  openGraph: SEOOpenGraph

  """"""
  redirects: [SEORedirect]

  """"""
  schema: SEOSchema

  """"""
  social: SEOSocial

  """"""
  webmaster: SEOWebmaster
}

"""The Yoast SEO search appearance content types fields"""
type SEOContentType {
  """"""
  archive: SEOContentTypeArchive

  """"""
  metaDesc: String

  """"""
  metaRobotsNoindex: Boolean

  """"""
  schema: SEOPageInfoSchema

  """"""
  schemaType: String

  """"""
  title: String
}

"""he Yoast SEO search appearance content types fields"""
type SEOContentTypeArchive {
  """"""
  archiveLink: String

  """"""
  breadcrumbTitle: String

  """"""
  fullHead: String

  """"""
  hasArchive: Boolean

  """"""
  metaDesc: String

  """"""
  metaRobotsNoindex: Boolean

  """"""
  title: String
}

"""The Yoast SEO search appearance content types"""
type SEOContentTypes {
  """"""
  blockEditorPreview: SEOContentType

  """"""
  mediaItem: SEOContentType

  """"""
  page: SEOContentType

  """"""
  post: SEOContentType

  """"""
  product: SEOContentType

  """"""
  reusableBlock: SEOContentType
}

"""The Open Graph data"""
type SEOOpenGraph {
  """"""
  defaultImage: MediaItem

  """"""
  frontPage: SEOOpenGraphFrontPage
}

"""The Open Graph Front page data"""
type SEOOpenGraphFrontPage {
  """"""
  description: String

  """"""
  image: MediaItem

  """"""
  title: String
}

"""The Schema for post type"""
type SEOPageInfoSchema {
  """"""
  raw: String
}

""""""
type SEOPostTypeBreadcrumbs {
  """"""
  text: String

  """"""
  url: String
}

"""The page info SEO details"""
type SEOPostTypePageInfo {
  """"""
  schema: SEOPageInfoSchema
}

"""The Schema types"""
type SEOPostTypeSchema {
  """"""
  articleType: [String]

  """"""
  pageType: [String]

  """"""
  raw: String
}

"""The Yoast redirect data  (Yoast Premium only)"""
type SEORedirect {
  """"""
  format: String

  """"""
  origin: String

  """"""
  target: String

  """"""
  type: Int
}

"""The Yoast SEO schema data"""
type SEOSchema {
  """"""
  companyLogo: MediaItem

  """"""
  companyName: String

  """"""
  companyOrPerson: String

  """"""
  homeUrl: String

  """"""
  inLanguage: String

  """"""
  logo: MediaItem

  """"""
  personLogo: MediaItem

  """"""
  personName: String

  """"""
  siteName: String

  """"""
  siteUrl: String

  """"""
  wordpressSiteName: String
}

"""The Yoast SEO Social media links"""
type SEOSocial {
  """"""
  facebook: SEOSocialFacebook

  """"""
  instagram: SEOSocialInstagram

  """"""
  linkedIn: SEOSocialLinkedIn

  """"""
  mySpace: SEOSocialMySpace

  """"""
  pinterest: SEOSocialPinterest

  """"""
  twitter: SEOSocialTwitter

  """"""
  wikipedia: SEOSocialWikipedia

  """"""
  youTube: SEOSocialYoutube
}

""""""
type SEOSocialFacebook {
  """"""
  defaultImage: MediaItem

  """"""
  url: String
}

""""""
type SEOSocialInstagram {
  """"""
  url: String
}

""""""
type SEOSocialLinkedIn {
  """"""
  url: String
}

""""""
type SEOSocialMySpace {
  """"""
  url: String
}

""""""
type SEOSocialPinterest {
  """"""
  metaTag: String

  """"""
  url: String
}

""""""
type SEOSocialTwitter {
  """"""
  cardType: SEOCardType

  """"""
  username: String
}

""""""
type SEOSocialWikipedia {
  """"""
  url: String
}

""""""
type SEOSocialYoutube {
  """"""
  url: String
}

"""The Schema types for Taxonomy"""
type SEOTaxonomySchema {
  """"""
  raw: String
}

""""""
type SEOUser {
  """"""
  breadcrumbTitle: String

  """"""
  canonical: String

  """"""
  fullHead: String

  """"""
  language: String

  """"""
  metaDesc: String

  """"""
  metaRobotsNofollow: String

  """"""
  metaRobotsNoindex: String

  """"""
  opengraphDescription: String

  """"""
  opengraphImage: MediaItem

  """"""
  opengraphTitle: String

  """"""
  region: String

  """"""
  schema: SEOUserSchema

  """"""
  social: SEOUserSocial

  """"""
  title: String

  """"""
  twitterDescription: String

  """"""
  twitterImage: MediaItem

  """"""
  twitterTitle: String
}

"""The Schema types for User"""
type SEOUserSchema {
  """"""
  articleType: [String]

  """"""
  pageType: [String]

  """"""
  raw: String
}

""""""
type SEOUserSocial {
  """"""
  facebook: String

  """"""
  instagram: String

  """"""
  linkedIn: String

  """"""
  mySpace: String

  """"""
  pinterest: String

  """"""
  soundCloud: String

  """"""
  twitter: String

  """"""
  wikipedia: String

  """"""
  youTube: String
}

"""The Yoast SEO  webmaster fields"""
type SEOWebmaster {
  """"""
  baiduVerify: String

  """"""
  googleVerify: String

  """"""
  msVerify: String

  """"""
  yandexVerify: String
}

"""Input for the sendPasswordResetEmail mutation"""
input SendPasswordResetEmailInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """A string that contains the user's username or email address."""
  username: String!
}

"""The payload for the sendPasswordResetEmail mutation"""
type SendPasswordResetEmailPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The user that the password reset email was sent to"""
  user: User
}

"""All of the registered settings"""
type Settings {
  """Settings of the the string Settings Group"""
  discussionSettingsDefaultCommentStatus: String

  """Settings of the the string Settings Group"""
  discussionSettingsDefaultPingStatus: String

  """Settings of the the string Settings Group"""
  generalSettingsDateFormat: String

  """Settings of the the string Settings Group"""
  generalSettingsDescription: String

  """Settings of the the string Settings Group"""
  generalSettingsEmail: String

  """Settings of the the string Settings Group"""
  generalSettingsLanguage: String

  """Settings of the the integer Settings Group"""
  generalSettingsStartOfWeek: Int

  """Settings of the the string Settings Group"""
  generalSettingsTimeFormat: String

  """Settings of the the string Settings Group"""
  generalSettingsTimezone: String

  """Settings of the the string Settings Group"""
  generalSettingsTitle: String

  """Settings of the the string Settings Group"""
  generalSettingsUrl: String

  """Settings of the the integer Settings Group"""
  readingSettingsPageForPosts: Int

  """Settings of the the integer Settings Group"""
  readingSettingsPageOnFront: Int

  """Settings of the the integer Settings Group"""
  readingSettingsPostsPerPage: Int

  """Settings of the the string Settings Group"""
  readingSettingsShowOnFront: String

  """Settings of the the integer Settings Group"""
  writingSettingsDefaultCategory: Int

  """Settings of the the string Settings Group"""
  writingSettingsDefaultPostFormat: String

  """Settings of the the boolean Settings Group"""
  writingSettingsUseSmilies: Boolean
}

"""The shippingClass type"""
type ShippingClass implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the shippingClass type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ShippingClassToContentNodeConnectionWhereArgs
  ): ShippingClassToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The Yoast SEO data of the Product shipping classes taxonomy."""
  seo: TaxonomySEO

  """The id field matches the WP_Post-&gt;ID field."""
  shippingClassId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the shippingClass type and the Taxonomy type"""
  taxonomy: ShippingClassToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum ShippingClassIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the shippingClass type and the ContentNode type"""
type ShippingClassToContentNodeConnection {
  """Edges for the ShippingClassToContentNodeConnection connection"""
  edges: [ShippingClassToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type ShippingClassToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the ShippingClassToContentNodeConnection connection
"""
input ShippingClassToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the shippingClass type and the Taxonomy type"""
type ShippingClassToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""Shipping Zones Type"""
type ShippingInfo {
  """"""
  shippingZones: String

  """"""
  storePostCode: Int
}

"""a shipping line object"""
type ShippingLine {
  """The ID of the order item in the database"""
  databaseId: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Shipping Line&#039;s shipping method name"""
  methodTitle: String

  """The Id of the order the order item belongs to."""
  orderId: Int

  """Shipping Line&#039;s shipping method"""
  shippingMethod: ShippingMethod

  """Line tax class"""
  taxClass: TaxClassEnum

  """Line taxes"""
  taxes: [OrderItemTax]

  """Line total (after discounts)"""
  total: String

  """Line total tax (after discounts)"""
  totalTax: String
}

"""Shipping lines data."""
input ShippingLineInput {
  """Shipping Line ID"""
  id: ID

  """Shipping instance ID."""
  instanceId: String

  """Meta data."""
  metaData: [MetaDataInput]

  """Shipping method ID."""
  methodId: String!

  """Shipping method name."""
  methodTitle: String!

  """Line total (after discounts)."""
  total: String!
}

"""A shipping method object"""
type ShippingMethod implements Node {
  """The ID of the shipping method in the database"""
  databaseId: ID!

  """Shipping method description."""
  description: String

  """The globally unique identifier for the tax rate."""
  id: ID!

  """Shipping method title."""
  title: String
}

"""
The Type of Identifier used to fetch a single Shipping Method. Default is ID.
"""
enum ShippingMethodIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""Shipping package object"""
type ShippingPackage {
  """Shipping package details"""
  packageDetails: String

  """Shipping package rates"""
  rates: [ShippingRate]

  """This shipping package supports the shipping calculator."""
  supportsShippingCalculator: Boolean
}

"""Shipping rate object"""
type ShippingRate {
  """Shipping rate cost"""
  cost: String

  """Shipping rate ID"""
  id: ID!

  """Shipping instance ID"""
  instanceId: Int

  """Shipping rate label"""
  label: String

  """Shipping method ID"""
  methodId: ID!
}

"""A simple attribute object"""
type SimpleAttribute implements Attribute {
  """Name of attribute"""
  name: String

  """Selected value of attribute"""
  value: String
}

"""A product object"""
type SimpleProduct implements ContentNode & DatabaseIdentifier & Node & NodeWithComments & NodeWithContentEditor & NodeWithFeaturedImage & Product & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: SimpleProduct_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: SimpleProduct_Acfblockstaff

  """Connection between the Product type and the paArchitecto type"""
  allPaArchitecto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaArchitectoConnectionWhereArgs
  ): ProductToPaArchitectoConnection

  """Connection between the Product type and the paAspernatur type"""
  allPaAspernatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAspernaturConnectionWhereArgs
  ): ProductToPaAspernaturConnection

  """Connection between the Product type and the paAtque type"""
  allPaAtque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAtqueConnectionWhereArgs
  ): ProductToPaAtqueConnection

  """Connection between the Product type and the paColor type"""
  allPaColor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaColorConnectionWhereArgs
  ): ProductToPaColorConnection

  """Connection between the Product type and the paConsequatur type"""
  allPaConsequatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaConsequaturConnectionWhereArgs
  ): ProductToPaConsequaturConnection

  """Connection between the Product type and the paCum type"""
  allPaCum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaCumConnectionWhereArgs
  ): ProductToPaCumConnection

  """Connection between the Product type and the paDolor type"""
  allPaDolor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorConnectionWhereArgs
  ): ProductToPaDolorConnection

  """Connection between the Product type and the paDoloremque type"""
  allPaDoloremque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloremqueConnectionWhereArgs
  ): ProductToPaDoloremqueConnection

  """Connection between the Product type and the paDolores type"""
  allPaDolores(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloresConnectionWhereArgs
  ): ProductToPaDoloresConnection

  """Connection between the Product type and the paDolorum type"""
  allPaDolorum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorumConnectionWhereArgs
  ): ProductToPaDolorumConnection

  """Connection between the Product type and the paEa type"""
  allPaEa(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEaConnectionWhereArgs
  ): ProductToPaEaConnection

  """Connection between the Product type and the paEos type"""
  allPaEos(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEosConnectionWhereArgs
  ): ProductToPaEosConnection

  """Connection between the Product type and the paEt type"""
  allPaEt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEtConnectionWhereArgs
  ): ProductToPaEtConnection

  """Connection between the Product type and the paExcepturi type"""
  allPaExcepturi(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExcepturiConnectionWhereArgs
  ): ProductToPaExcepturiConnection

  """Connection between the Product type and the paExplicabo type"""
  allPaExplicabo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExplicaboConnectionWhereArgs
  ): ProductToPaExplicaboConnection

  """Connection between the Product type and the paFacere type"""
  allPaFacere(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaFacereConnectionWhereArgs
  ): ProductToPaFacereConnection

  """Connection between the Product type and the paHarum type"""
  allPaHarum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaHarumConnectionWhereArgs
  ): ProductToPaHarumConnection

  """Connection between the Product type and the paIncidunt type"""
  allPaIncidunt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaInciduntConnectionWhereArgs
  ): ProductToPaInciduntConnection

  """Connection between the Product type and the paIpsam type"""
  allPaIpsam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIpsamConnectionWhereArgs
  ): ProductToPaIpsamConnection

  """Connection between the Product type and the paIusto type"""
  allPaIusto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIustoConnectionWhereArgs
  ): ProductToPaIustoConnection

  """Connection between the Product type and the paLaudantium type"""
  allPaLaudantium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaLaudantiumConnectionWhereArgs
  ): ProductToPaLaudantiumConnection

  """Connection between the Product type and the paMagnam type"""
  allPaMagnam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagnamConnectionWhereArgs
  ): ProductToPaMagnamConnection

  """Connection between the Product type and the paMagni type"""
  allPaMagni(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagniConnectionWhereArgs
  ): ProductToPaMagniConnection

  """Connection between the Product type and the paMinima type"""
  allPaMinima(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMinimaConnectionWhereArgs
  ): ProductToPaMinimaConnection

  """Connection between the Product type and the paMolestiae type"""
  allPaMolestiae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMolestiaeConnectionWhereArgs
  ): ProductToPaMolestiaeConnection

  """Connection between the Product type and the paNihil type"""
  allPaNihil(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNihilConnectionWhereArgs
  ): ProductToPaNihilConnection

  """Connection between the Product type and the paNon type"""
  allPaNon(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNonConnectionWhereArgs
  ): ProductToPaNonConnection

  """Connection between the Product type and the paNulla type"""
  allPaNulla(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNullaConnectionWhereArgs
  ): ProductToPaNullaConnection

  """Connection between the Product type and the paNumericSize type"""
  allPaNumericSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNumericSizeConnectionWhereArgs
  ): ProductToPaNumericSizeConnection

  """Connection between the Product type and the paOmnis type"""
  allPaOmnis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOmnisConnectionWhereArgs
  ): ProductToPaOmnisConnection

  """Connection between the Product type and the paOptio type"""
  allPaOptio(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOptioConnectionWhereArgs
  ): ProductToPaOptioConnection

  """Connection between the Product type and the paPraesentium type"""
  allPaPraesentium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaPraesentiumConnectionWhereArgs
  ): ProductToPaPraesentiumConnection

  """Connection between the Product type and the paProvident type"""
  allPaProvident(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaProvidentConnectionWhereArgs
  ): ProductToPaProvidentConnection

  """Connection between the Product type and the paQuae type"""
  allPaQuae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuaeConnectionWhereArgs
  ): ProductToPaQuaeConnection

  """Connection between the Product type and the paQui type"""
  allPaQui(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiConnectionWhereArgs
  ): ProductToPaQuiConnection

  """Connection between the Product type and the paQuia type"""
  allPaQuia(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiaConnectionWhereArgs
  ): ProductToPaQuiaConnection

  """Connection between the Product type and the paQuidem type"""
  allPaQuidem(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuidemConnectionWhereArgs
  ): ProductToPaQuidemConnection

  """Connection between the Product type and the paQuis type"""
  allPaQuis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuisConnectionWhereArgs
  ): ProductToPaQuisConnection

  """Connection between the Product type and the paQuo type"""
  allPaQuo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuoConnectionWhereArgs
  ): ProductToPaQuoConnection

  """Connection between the Product type and the paRepellendus type"""
  allPaRepellendus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRepellendusConnectionWhereArgs
  ): ProductToPaRepellendusConnection

  """Connection between the Product type and the paReprehenderit type"""
  allPaReprehenderit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaReprehenderitConnectionWhereArgs
  ): ProductToPaReprehenderitConnection

  """Connection between the Product type and the paRerum type"""
  allPaRerum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRerumConnectionWhereArgs
  ): ProductToPaRerumConnection

  """Connection between the Product type and the paSit type"""
  allPaSit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSitConnectionWhereArgs
  ): ProductToPaSitConnection

  """Connection between the Product type and the paSize type"""
  allPaSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSizeConnectionWhereArgs
  ): ProductToPaSizeConnection

  """Connection between the Product type and the paTenetur type"""
  allPaTenetur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaTeneturConnectionWhereArgs
  ): ProductToPaTeneturConnection

  """Connection between the Product type and the paVel type"""
  allPaVel(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaVelConnectionWhereArgs
  ): ProductToPaVelConnection

  """Connection between the Product type and the ProductAttribute type"""
  attributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection

  """Product average count"""
  averageRating: Float

  """Product backorders status"""
  backorders: BackordersEnum

  """Can product be backordered?"""
  backordersAllowed: Boolean

  """Catalog visibility"""
  catalogVisibility: CatalogVisibilityEnum

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """Connection between the SimpleProduct type and the Product type"""
  crossSell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: SimpleProductToProductConnectionWhereArgs
  ): SimpleProductToProductConnection

  """The ID of the product in the database"""
  databaseId: Int!

  """Date product created"""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """Date on sale from"""
  dateOnSaleFrom: String

  """Date on sale to"""
  dateOnSaleTo: String

  """
  Connection between the SimpleProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): SimpleProductToVariationAttributeConnection

  """Product description"""
  description(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The desired slug of the post"""
  desiredSlug: String

  """Download expiry"""
  downloadExpiry: Int

  """Download limit"""
  downloadLimit: Int

  """Is downloadable?"""
  downloadable: Boolean

  """Product downloads"""
  downloads: [ProductDownload]

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """If the product is featured"""
  featured: Boolean

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """Connection between the Product type and the MediaItem type"""
  galleryImages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """Product&#039;s height"""
  height: String

  """The globally unique identifier for the product"""
  id: ID!

  """Main image"""
  image: MediaItem

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """Product&#039;s length"""
  length: String

  """The permalink of the post"""
  link: String

  """Connection between the Product type and the LocalProductAttribute type"""
  localAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection

  """If product manage stock"""
  manageStock: Boolean

  """Menu order"""
  menuOrder: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date product last updated"""
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Product name"""
  name: String

  """Is product on sale?"""
  onSale: Boolean

  """Parent product"""
  parent: Product

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """Product&#039;s active price"""
  price(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Product type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection

  """Product Currency"""
  productCurrency: String

  """Connection between the Product type and the productTag type"""
  productTags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection

  """Connection between the Product type and the productType type"""
  productTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection

  """Can product be purchased?"""
  purchasable: Boolean

  """Purchase note"""
  purchaseNote: String

  """Product&#039;s regular price"""
  regularPrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Product type and the Product type"""
  related(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """Product review count"""
  reviewCount: Int

  """Connection between the Product type and the Comment type"""
  reviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection

  """If reviews are allowed"""
  reviewsAllowed: Boolean

  """Product&#039;s sale price"""
  salePrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """shipping class ID"""
  shippingClassId: Int

  """Connection between the Product type and the shippingClass type"""
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection

  """Does product need to be shipped?"""
  shippingRequired: Boolean

  """Is product shipping taxable?"""
  shippingTaxable: Boolean

  """Product short description"""
  shortDescription(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Product SKU"""
  sku: String

  """Product slug"""
  slug: String

  """If should be sold individually"""
  soldIndividually: Boolean

  """Product status"""
  status: String

  """Number of items available for sale"""
  stockQuantity: Int

  """Product stock status"""
  stockStatus: StockStatusEnum

  """Tax class"""
  taxClass: TaxClassEnum

  """Tax status"""
  taxStatus: TaxStatusEnum

  """The template assigned to a node of content"""
  template: ContentTemplate

  """Number total of sales"""
  totalSales: Int

  """Product type"""
  type: ProductTypesEnum

  """Connection between the Product type and the Product type"""
  upsell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToUpsellConnectionWhereArgs
  ): ProductToUpsellConnection

  """The unique resource identifier path"""
  uri: String

  """Is product virtual?"""
  virtual: Boolean

  """Connection between the Product type and the visibleProduct type"""
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection

  """Product&#039;s weight"""
  weight: String

  """Product&#039;s width"""
  width: String
}

"""Connection between the SimpleProduct type and the Product type"""
type SimpleProductToProductConnection {
  """Edges for the SimpleProductToProductConnection connection"""
  edges: [SimpleProductToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type SimpleProductToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the SimpleProductToProductConnection connection
"""
input SimpleProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the SimpleProduct type and the VariationAttribute type
"""
type SimpleProductToVariationAttributeConnection {
  """Edges for the SimpleProductToVariationAttributeConnection connection"""
  edges: [SimpleProductToVariationAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VariationAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type SimpleProductToVariationAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VariationAttribute
}

"""Field Group"""
type SimpleProduct_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [SimpleProduct_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type SimpleProduct_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type SimpleProduct_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""Product stock status enumeration"""
enum StockStatusEnum {
  IN_STOCK
  ON_BACKORDER
  OUT_OF_STOCK
}

"""The tag type"""
type Tag implements DatabaseIdentifier & MenuItemLinkable & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the tag type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: TagToContentNodeConnectionWhereArgs
  ): TagToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """Connection between the tag type and the post type"""
  posts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: TagToPostConnectionWhereArgs
  ): TagToPostConnection

  """The Yoast SEO data of the Tags taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """The id field matches the WP_Post-&gt;ID field."""
  tagId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """Connection between the tag type and the Taxonomy type"""
  taxonomy: TagToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum TagIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the tag type and the ContentNode type"""
type TagToContentNodeConnection {
  """Edges for the TagToContentNodeConnection connection"""
  edges: [TagToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type TagToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""Arguments for filtering the TagToContentNodeConnection connection"""
input TagToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypesOfTagEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the tag type and the post type"""
type TagToPostConnection {
  """Edges for the TagToPostConnection connection"""
  edges: [TagToPostConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Post]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type TagToPostConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Post
}

"""Arguments for filtering the TagToPostConnection connection"""
input TagToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Category ID"""
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """Use Category Slug"""
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Tag Slug"""
  tag: String

  """Use Tag ID"""
  tagId: String

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagIn: [ID]

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagNotIn: [ID]

  """Array of tag slugs, used to display objects from one tag OR another"""
  tagSlugAnd: [String]

  """Array of tag slugs, used to exclude objects in specified tags"""
  tagSlugIn: [String]

  """Title of the object"""
  title: String
}

"""Connection between the tag type and the Taxonomy type"""
type TagToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""Tax class enumeration"""
enum TaxClassEnum {
  """Inherits Tax class from cart"""
  INHERIT_CART
  REDUCED_RATE

  """Standard Tax rate"""
  STANDARD
  ZERO_RATE
}

"""a tax line object"""
type TaxLine {
  """The ID of the order item in the database"""
  databaseId: Int

  """Is this a compound tax rate?"""
  isCompound: Boolean

  """Tax rate label"""
  label: String

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """The Id of the order the order item belongs to."""
  orderId: Int

  """Tax rate code/name"""
  rateCode: String

  """Tax line&#039;s shipping tax total"""
  shippingTaxTotal: String

  """Tax line&#039;s tax rate"""
  taxRate: TaxRate

  """Tax total (not including shipping taxes)"""
  taxTotal: String
}

"""A Tax rate object"""
type TaxRate implements Node {
  """City name."""
  city: [String]

  """Tax class. Default is standard."""
  class: TaxClassEnum

  """Whether or not this is a compound rate."""
  compound: Boolean

  """Country ISO 3166 code."""
  country: String

  """The ID of the customer in the database"""
  databaseId: Int

  """The globally unique identifier for the tax rate."""
  id: ID!

  """Tax rate name."""
  name: String

  """Indicates the order that will appear in queries."""
  order: Int

  """Postcode/ZIP."""
  postcode: [String]

  """Tax priority."""
  priority: Int

  """Tax rate."""
  rate: String

  """Whether or not this tax rate also gets applied to shipping."""
  shipping: Boolean

  """State code."""
  state: String
}

"""Field to order the connection by"""
enum TaxRateConnectionOrderbyEnum {
  ID
  ORDER
}

"""Options for ordering the connection"""
input TaxRateConnectionOrderbyInput {
  field: TaxRateConnectionOrderbyEnum!
  order: OrderEnum
}

"""The Type of Identifier used to fetch a single Tax rate. Default is ID."""
enum TaxRateIdTypeEnum {
  """Identify a resource by the Database ID."""
  DATABASE_ID

  """Identify a resource by the (hashed) Global ID."""
  ID
}

"""Product tax status enumeration"""
enum TaxStatusEnum {
  NONE
  SHIPPING
  TAXABLE
}

"""A taxonomy object"""
type Taxonomy implements Node {
  """List of Content Types associated with the Taxonomy"""
  connectedContentTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TaxonomyToContentTypeConnection

  """
  Description of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;description
  """
  description: String

  """The plural name of the post type within the GraphQL Schema."""
  graphqlPluralName: String

  """The singular name of the post type within the GraphQL Schema."""
  graphqlSingleName: String

  """Whether the taxonomy is hierarchical"""
  hierarchical: Boolean

  """The globally unique identifier of the taxonomy object."""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Name of the taxonomy shown in the menu. Usually plural."""
  label: String

  """
  The display name of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;label
  """
  name: String

  """Whether the taxonomy is publicly queryable"""
  public: Boolean

  """
  Name of content type to diplay in REST API &quot;wp/v2&quot; namespace.
  """
  restBase: String

  """The REST Controller class assigned to handling this content type."""
  restControllerClass: String

  """
  Whether to show the taxonomy as part of a tag cloud widget. This field is equivalent to WP_Taxonomy-&gt;show_tagcloud
  """
  showCloud: Boolean

  """
  Whether to display a column for the taxonomy on its post type listing screens.
  """
  showInAdminColumn: Boolean

  """Whether to add the post type to the GraphQL Schema."""
  showInGraphql: Boolean

  """Whether to show the taxonomy in the admin menu"""
  showInMenu: Boolean

  """Whether the taxonomy is available for selection in navigation menus."""
  showInNavMenus: Boolean

  """Whether to show the taxonomy in the quick/bulk edit panel."""
  showInQuickEdit: Boolean

  """
  Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace.
  """
  showInRest: Boolean

  """
  Whether to generate and allow a UI for managing terms in this taxonomy in the admin
  """
  showUi: Boolean
}

"""Allowed taxonomies"""
enum TaxonomyEnum {
  """Taxonomy enum category"""
  CATEGORY

  """Taxonomy enum pa_architecto"""
  PAARCHITECTO

  """Taxonomy enum pa_aspernatur"""
  PAASPERNATUR

  """Taxonomy enum pa_atque"""
  PAATQUE

  """Taxonomy enum pa_color"""
  PACOLOR

  """Taxonomy enum pa_consequatur"""
  PACONSEQUATUR

  """Taxonomy enum pa_cum"""
  PACUM

  """Taxonomy enum pa_dolor"""
  PADOLOR

  """Taxonomy enum pa_doloremque"""
  PADOLOREMQUE

  """Taxonomy enum pa_dolores"""
  PADOLORES

  """Taxonomy enum pa_dolorum"""
  PADOLORUM

  """Taxonomy enum pa_ea"""
  PAEA

  """Taxonomy enum pa_eos"""
  PAEOS

  """Taxonomy enum pa_et"""
  PAET

  """Taxonomy enum pa_excepturi"""
  PAEXCEPTURI

  """Taxonomy enum pa_explicabo"""
  PAEXPLICABO

  """Taxonomy enum pa_facere"""
  PAFACERE

  """Taxonomy enum pa_harum"""
  PAHARUM

  """Taxonomy enum pa_incidunt"""
  PAINCIDUNT

  """Taxonomy enum pa_ipsam"""
  PAIPSAM

  """Taxonomy enum pa_iusto"""
  PAIUSTO

  """Taxonomy enum pa_laudantium"""
  PALAUDANTIUM

  """Taxonomy enum pa_magnam"""
  PAMAGNAM

  """Taxonomy enum pa_magni"""
  PAMAGNI

  """Taxonomy enum pa_minima"""
  PAMINIMA

  """Taxonomy enum pa_molestiae"""
  PAMOLESTIAE

  """Taxonomy enum pa_nihil"""
  PANIHIL

  """Taxonomy enum pa_non"""
  PANON

  """Taxonomy enum pa_nulla"""
  PANULLA

  """Taxonomy enum pa_numeric-size"""
  PANUMERICSIZE

  """Taxonomy enum pa_omnis"""
  PAOMNIS

  """Taxonomy enum pa_optio"""
  PAOPTIO

  """Taxonomy enum pa_praesentium"""
  PAPRAESENTIUM

  """Taxonomy enum pa_provident"""
  PAPROVIDENT

  """Taxonomy enum pa_quae"""
  PAQUAE

  """Taxonomy enum pa_qui"""
  PAQUI

  """Taxonomy enum pa_quia"""
  PAQUIA

  """Taxonomy enum pa_quidem"""
  PAQUIDEM

  """Taxonomy enum pa_quis"""
  PAQUIS

  """Taxonomy enum pa_quo"""
  PAQUO

  """Taxonomy enum pa_repellendus"""
  PAREPELLENDUS

  """Taxonomy enum pa_reprehenderit"""
  PAREPREHENDERIT

  """Taxonomy enum pa_rerum"""
  PARERUM

  """Taxonomy enum pa_sit"""
  PASIT

  """Taxonomy enum pa_size"""
  PASIZE

  """Taxonomy enum pa_tenetur"""
  PATENETUR

  """Taxonomy enum pa_vel"""
  PAVEL

  """Taxonomy enum post_format"""
  POSTFORMAT

  """Taxonomy enum product_cat"""
  PRODUCTCATEGORY

  """Taxonomy enum product_tag"""
  PRODUCTTAG

  """Taxonomy enum product_type"""
  PRODUCTTYPE

  """Taxonomy enum product_shipping_class"""
  SHIPPINGCLASS

  """Taxonomy enum post_tag"""
  TAG

  """Taxonomy enum product_visibility"""
  VISIBLEPRODUCT
}

"""
The Type of Identifier used to fetch a single Taxonomy node. To be used along with the "id" field. Default is "ID".
"""
enum TaxonomyIdTypeEnum {
  """The globally unique ID"""
  ID

  """The name of the taxonomy"""
  NAME
}

"""Taxonomy query operators"""
enum TaxonomyOperatorEnum {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

""""""
type TaxonomySEO {
  """"""
  breadcrumbs: [SEOPostTypeBreadcrumbs]

  """"""
  canonical: String

  """"""
  cornerstone: Boolean

  """"""
  focuskw: String

  """"""
  fullHead: String

  """"""
  metaDesc: String

  """"""
  metaKeywords: String

  """"""
  metaRobotsNofollow: String

  """"""
  metaRobotsNoindex: String

  """"""
  opengraphAuthor: String

  """"""
  opengraphDescription: String

  """"""
  opengraphImage: MediaItem

  """"""
  opengraphModifiedTime: String

  """"""
  opengraphPublishedTime: String

  """"""
  opengraphPublisher: String

  """"""
  opengraphSiteName: String

  """"""
  opengraphTitle: String

  """"""
  opengraphType: String

  """"""
  opengraphUrl: String

  """"""
  schema: SEOTaxonomySchema

  """"""
  title: String

  """"""
  twitterDescription: String

  """"""
  twitterImage: MediaItem

  """"""
  twitterTitle: String
}

"""Connection between the Taxonomy type and the ContentType type"""
type TaxonomyToContentTypeConnection {
  """Edges for the TaxonomyToContentTypeConnection connection"""
  edges: [TaxonomyToContentTypeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentType]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type TaxonomyToContentTypeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentType
}

"""
Terms are nodes within a Taxonomy, used to group and relate other nodes.
"""
interface TermNode implements Node & UniformResourceIdentifiable {
  """The number of objects connected to the object"""
  count: Int

  """Identifies the primary key from the database."""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
}

"""
The Type of Identifier used to fetch a single resource. Default is "ID". To be used along with the "id" field.
"""
enum TermNodeIdTypeEnum {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the TermNode type and the EnqueuedScript type"""
type TermNodeToEnqueuedScriptConnection {
  """Edges for the TermNodeToEnqueuedScriptConnection connection"""
  edges: [TermNodeToEnqueuedScriptConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedScript]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type TermNodeToEnqueuedScriptConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedScript
}

"""Connection between the TermNode type and the EnqueuedStylesheet type"""
type TermNodeToEnqueuedStylesheetConnection {
  """Edges for the TermNodeToEnqueuedStylesheetConnection connection"""
  edges: [TermNodeToEnqueuedStylesheetConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedStylesheet]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type TermNodeToEnqueuedStylesheetConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedStylesheet
}

"""Options for ordering the connection by"""
enum TermObjectsConnectionOrderbyEnum {
  """Order the connection by item count."""
  COUNT

  """Order the connection by description."""
  DESCRIPTION

  """Order the connection by name."""
  NAME

  """Order the connection by slug."""
  SLUG

  """Order the connection by term group."""
  TERM_GROUP

  """Order the connection by term id."""
  TERM_ID

  """Order the connection by term order."""
  TERM_ORDER
}

"""A theme object"""
type Theme implements Node {
  """
  Name of the theme author(s), could also be a company name. This field is equivalent to WP_Theme-&gt;get( &quot;Author&quot; ).
  """
  author: String

  """
  URI for the author/company website. This field is equivalent to WP_Theme-&gt;get( &quot;AuthorURI&quot; ).
  """
  authorUri: String

  """
  The description of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Description&quot; ).
  """
  description: String

  """The globally unique identifier of the theme object."""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """
  Display name of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Name&quot; ).
  """
  name: String

  """
  The URL of the screenshot for the theme. The screenshot is intended to give an overview of what the theme looks like. This field is equivalent to WP_Theme-&gt;get_screenshot().
  """
  screenshot: String

  """
  The theme slug is used to internally match themes. Theme slugs can have subdirectories like: my-theme/sub-theme. This field is equivalent to WP_Theme-&gt;get_stylesheet().
  """
  slug: String

  """
  URI for the author/company website. This field is equivalent to WP_Theme-&gt;get( &quot;Tags&quot; ).
  """
  tags: [String]

  """
  A URI if the theme has a website associated with it. The Theme URI is handy for directing users to a theme site for support etc. This field is equivalent to WP_Theme-&gt;get( &quot;ThemeURI&quot; ).
  """
  themeUri: String

  """
  The current version of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Version&quot; ).
  """
  version: String
}

"""Any node that has a URI"""
interface UniformResourceIdentifiable {
  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The unique resource identifier path"""
  uri: String
}

"""Input for the UpdateCategory mutation"""
input UpdateCategoryInput {
  """The slug that the category will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the category object"""
  description: String

  """The ID of the category object to update"""
  id: ID!

  """The name of the category object to mutate"""
  name: String

  """The ID of the category that should be set as the parent"""
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateCategory mutation"""
type UpdateCategoryPayload {
  """The created category"""
  category: Category

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the updateComment mutation"""
input UpdateCommentInput {
  """The approval status of the comment."""
  approved: String

  """The name of the comment's author."""
  author: String

  """The email of the comment's author."""
  authorEmail: String

  """The url of the comment's author."""
  authorUrl: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The database ID of the post object the comment belongs to."""
  commentOn: Int

  """Content of the comment."""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """The ID of the comment being updated."""
  id: ID!

  """Parent comment ID of current comment."""
  parent: ID

  """Type of comment."""
  type: String
}

"""The payload for the updateComment mutation"""
type UpdateCommentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment that was created"""
  comment: Comment

  """
  Whether the mutation succeeded. If the comment is not approved, the server will not return the comment to a non authenticated user, but a success message can be returned if the create succeeded, and the client can optimistically add the comment to the client cache
  """
  success: Boolean
}

"""Input for the updateCoupon mutation"""
input UpdateCouponInput {
  """
  The amount of discount. Should always be numeric, even if setting a percentage.
  """
  amount: Float

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Coupon code."""
  code: String

  """The date the coupon expires, in the site's timezone."""
  dateExpires: String

  """The date the coupon expires, as GMT."""
  dateExpiresGmt: String

  """Coupon description."""
  description: String

  """Determines the type of discount that will be applied."""
  discountType: DiscountTypeEnum

  """List of email addresses that can use this coupon."""
  emailRestrictions: [String]

  """
  If true, this coupon will not be applied to items that have sale prices.
  """
  excludeSaleItems: Boolean

  """List of category IDs the coupon does not apply to."""
  excludedProductCategories: [Int]

  """List of product IDs the coupon cannot be used on."""
  excludedProductIds: [Int]

  """
  If true and if the free shipping method requires a coupon, this coupon will enable free shipping.
  """
  freeShipping: Boolean

  """Unique identifier for the object."""
  id: ID!

  """
  If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.
  """
  individualUse: Boolean

  """Max number of items in the cart the coupon can be applied to."""
  limitUsageToXItems: Int

  """Maximum order amount allowed when using the coupon."""
  maximumAmount: String

  """Meta data."""
  metaData: [MetaDataInput]

  """
  Minimum order amount that needs to be in the cart before coupon applies.
  """
  minimumAmount: String

  """List of category IDs the coupon applies to."""
  productCategories: [Int]

  """List of product IDs the coupon can be used on."""
  productIds: [Int]

  """How many times the coupon can be used in total."""
  usageLimit: Int

  """How many times the coupon can be used per customer."""
  usageLimitPerUser: Int
}

"""The payload for the updateCoupon mutation"""
type UpdateCouponPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  code: String

  """"""
  coupon: Coupon
}

"""Input for the updateCustomer mutation"""
input UpdateCustomerInput {
  """User's AOL IM account."""
  aim: String

  """Customer billing information"""
  billing: CustomerAddressInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """A string containing content about the user."""
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """A string containing the user's email address."""
  email: String

  """	The user's first name."""
  firstName: String

  """The ID of the user"""
  id: ID

  """User's Jabber account."""
  jabber: String

  """The user's last name."""
  lastName: String

  """User's locale."""
  locale: String

  """Meta data."""
  metaData: [MetaDataInput]

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """The user's nickname, defaults to the user's username."""
  nickname: String

  """A string that contains the plain text password for the user."""
  password: String

  """The date the user registered. Format is Y-m-d H:i:s."""
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """An array of roles to be assigned to the user."""
  roles: [String]

  """Customer shipping address"""
  shipping: CustomerAddressInput

  """Customer shipping is identical to billing address"""
  shippingSameAsBilling: Boolean

  """A string containing the user's URL for the user's web site."""
  websiteUrl: String

  """User's Yahoo IM account."""
  yim: String
}

"""The payload for the updateCustomer mutation"""
type UpdateCustomerPayload {
  """JWT Token that can be used in future requests for Authentication"""
  authToken: String

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  customer: Customer

  """
  A JWT token that can be used in future requests to get a refreshed jwtAuthToken. If the refresh token used in a request is revoked or otherwise invalid, a valid Auth token will NOT be issued in the response headers.
  """
  refreshToken: String
}

"""Input for the updateItemQuantities mutation"""
input UpdateItemQuantitiesInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Cart item being updated"""
  items: [CartItemQuantityInput]
}

"""The payload for the updateItemQuantities mutation"""
type UpdateItemQuantitiesPayload {
  """"""
  cart: Cart

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  items: [CartItem]

  """"""
  removed: [CartItem]

  """"""
  updated: [CartItem]
}

"""Input for the updateMediaItem mutation"""
input UpdateMediaItemInput {
  """Alternative text to display when mediaItem is not displayed"""
  altText: String

  """The userId to assign as the author of the mediaItem"""
  authorId: ID

  """The caption for the mediaItem"""
  caption: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment status for the mediaItem"""
  commentStatus: String

  """The date of the mediaItem"""
  date: String

  """The date (in GMT zone) of the mediaItem"""
  dateGmt: String

  """Description of the mediaItem"""
  description: String

  """The file name of the mediaItem"""
  filePath: String

  """The file type of the mediaItem"""
  fileType: MimeTypeEnum

  """The ID of the mediaItem object"""
  id: ID!

  """The ID of the parent object"""
  parentId: ID

  """The ping status for the mediaItem"""
  pingStatus: String

  """The slug of the mediaItem"""
  slug: String

  """The status of the mediaItem"""
  status: MediaItemStatusEnum

  """The title of the mediaItem"""
  title: String
}

"""The payload for the updateMediaItem mutation"""
type UpdateMediaItemPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The MediaItem object mutation type."""
  mediaItem: MediaItem
}

"""Input for the updateOrder mutation"""
input UpdateOrderInput {
  """Order billing address"""
  billing: CustomerAddressInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Coupons codes to be applied to order"""
  coupons: [String]

  """Currency the order was created with, in ISO format."""
  currency: String

  """Order customer ID"""
  customerId: Int

  """Note left by customer during checkout."""
  customerNote: String

  """Order shipping lines"""
  feeLines: [FeeLineInput]

  """Order global ID"""
  id: ID

  """
  Define if the order is paid. It will set the status to processing and reduce stock items.
  """
  isPaid: Boolean

  """Order line items"""
  lineItems: [LineItemInput]

  """Order meta data"""
  metaData: [MetaDataInput]

  """Order WP ID"""
  orderId: Int

  """Parent order ID."""
  parentId: Int

  """Payment method ID."""
  paymentMethod: String

  """Payment method title."""
  paymentMethodTitle: String

  """Order shipping address"""
  shipping: CustomerAddressInput

  """Order shipping lines"""
  shippingLines: [ShippingLineInput]

  """Order status"""
  status: OrderStatusEnum

  """Order transaction ID"""
  transactionId: String
}

"""The payload for the updateOrder mutation"""
type UpdateOrderPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """"""
  order: Order
}

"""Input for the UpdatePaArchitecto mutation"""
input UpdatePaArchitectoInput {
  """The slug that the pa_architecto will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_architecto object"""
  description: String

  """The ID of the paArchitecto object to update"""
  id: ID!

  """The name of the pa_architecto object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaArchitecto mutation"""
type UpdatePaArchitectoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_architecto"""
  paArchitecto: PaArchitecto
}

"""Input for the UpdatePaAspernatur mutation"""
input UpdatePaAspernaturInput {
  """The slug that the pa_aspernatur will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_aspernatur object"""
  description: String

  """The ID of the paAspernatur object to update"""
  id: ID!

  """The name of the pa_aspernatur object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaAspernatur mutation"""
type UpdatePaAspernaturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_aspernatur"""
  paAspernatur: PaAspernatur
}

"""Input for the UpdatePaAtque mutation"""
input UpdatePaAtqueInput {
  """The slug that the pa_atque will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_atque object"""
  description: String

  """The ID of the paAtque object to update"""
  id: ID!

  """The name of the pa_atque object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaAtque mutation"""
type UpdatePaAtquePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_atque"""
  paAtque: PaAtque
}

"""Input for the UpdatePaColor mutation"""
input UpdatePaColorInput {
  """The slug that the pa_color will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_color object"""
  description: String

  """The ID of the paColor object to update"""
  id: ID!

  """The name of the pa_color object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaColor mutation"""
type UpdatePaColorPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_color"""
  paColor: PaColor
}

"""Input for the UpdatePaConsequatur mutation"""
input UpdatePaConsequaturInput {
  """The slug that the pa_consequatur will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_consequatur object"""
  description: String

  """The ID of the paConsequatur object to update"""
  id: ID!

  """The name of the pa_consequatur object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaConsequatur mutation"""
type UpdatePaConsequaturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_consequatur"""
  paConsequatur: PaConsequatur
}

"""Input for the UpdatePaCum mutation"""
input UpdatePaCumInput {
  """The slug that the pa_cum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_cum object"""
  description: String

  """The ID of the paCum object to update"""
  id: ID!

  """The name of the pa_cum object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaCum mutation"""
type UpdatePaCumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_cum"""
  paCum: PaCum
}

"""Input for the UpdatePaDolor mutation"""
input UpdatePaDolorInput {
  """The slug that the pa_dolor will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_dolor object"""
  description: String

  """The ID of the paDolor object to update"""
  id: ID!

  """The name of the pa_dolor object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaDolor mutation"""
type UpdatePaDolorPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_dolor"""
  paDolor: PaDolor
}

"""Input for the UpdatePaDoloremque mutation"""
input UpdatePaDoloremqueInput {
  """The slug that the pa_doloremque will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_doloremque object"""
  description: String

  """The ID of the paDoloremque object to update"""
  id: ID!

  """The name of the pa_doloremque object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaDoloremque mutation"""
type UpdatePaDoloremquePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_doloremque"""
  paDoloremque: PaDoloremque
}

"""Input for the UpdatePaDolores mutation"""
input UpdatePaDoloresInput {
  """The slug that the pa_dolores will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_dolores object"""
  description: String

  """The ID of the paDolores object to update"""
  id: ID!

  """The name of the pa_dolores object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaDolores mutation"""
type UpdatePaDoloresPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_dolores"""
  paDolores: PaDolores
}

"""Input for the UpdatePaDolorum mutation"""
input UpdatePaDolorumInput {
  """The slug that the pa_dolorum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_dolorum object"""
  description: String

  """The ID of the paDolorum object to update"""
  id: ID!

  """The name of the pa_dolorum object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaDolorum mutation"""
type UpdatePaDolorumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_dolorum"""
  paDolorum: PaDolorum
}

"""Input for the UpdatePaEa mutation"""
input UpdatePaEaInput {
  """The slug that the pa_ea will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_ea object"""
  description: String

  """The ID of the paEa object to update"""
  id: ID!

  """The name of the pa_ea object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaEa mutation"""
type UpdatePaEaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_ea"""
  paEa: PaEa
}

"""Input for the UpdatePaEos mutation"""
input UpdatePaEosInput {
  """The slug that the pa_eos will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_eos object"""
  description: String

  """The ID of the paEos object to update"""
  id: ID!

  """The name of the pa_eos object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaEos mutation"""
type UpdatePaEosPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_eos"""
  paEos: PaEos
}

"""Input for the UpdatePaEt mutation"""
input UpdatePaEtInput {
  """The slug that the pa_et will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_et object"""
  description: String

  """The ID of the paEt object to update"""
  id: ID!

  """The name of the pa_et object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaEt mutation"""
type UpdatePaEtPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_et"""
  paEt: PaEt
}

"""Input for the UpdatePaExcepturi mutation"""
input UpdatePaExcepturiInput {
  """The slug that the pa_excepturi will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_excepturi object"""
  description: String

  """The ID of the paExcepturi object to update"""
  id: ID!

  """The name of the pa_excepturi object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaExcepturi mutation"""
type UpdatePaExcepturiPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_excepturi"""
  paExcepturi: PaExcepturi
}

"""Input for the UpdatePaExplicabo mutation"""
input UpdatePaExplicaboInput {
  """The slug that the pa_explicabo will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_explicabo object"""
  description: String

  """The ID of the paExplicabo object to update"""
  id: ID!

  """The name of the pa_explicabo object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaExplicabo mutation"""
type UpdatePaExplicaboPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_explicabo"""
  paExplicabo: PaExplicabo
}

"""Input for the UpdatePaFacere mutation"""
input UpdatePaFacereInput {
  """The slug that the pa_facere will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_facere object"""
  description: String

  """The ID of the paFacere object to update"""
  id: ID!

  """The name of the pa_facere object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaFacere mutation"""
type UpdatePaFacerePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_facere"""
  paFacere: PaFacere
}

"""Input for the UpdatePaHarum mutation"""
input UpdatePaHarumInput {
  """The slug that the pa_harum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_harum object"""
  description: String

  """The ID of the paHarum object to update"""
  id: ID!

  """The name of the pa_harum object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaHarum mutation"""
type UpdatePaHarumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_harum"""
  paHarum: PaHarum
}

"""Input for the UpdatePaIncidunt mutation"""
input UpdatePaInciduntInput {
  """The slug that the pa_incidunt will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_incidunt object"""
  description: String

  """The ID of the paIncidunt object to update"""
  id: ID!

  """The name of the pa_incidunt object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaIncidunt mutation"""
type UpdatePaInciduntPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_incidunt"""
  paIncidunt: PaIncidunt
}

"""Input for the UpdatePaIpsam mutation"""
input UpdatePaIpsamInput {
  """The slug that the pa_ipsam will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_ipsam object"""
  description: String

  """The ID of the paIpsam object to update"""
  id: ID!

  """The name of the pa_ipsam object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaIpsam mutation"""
type UpdatePaIpsamPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_ipsam"""
  paIpsam: PaIpsam
}

"""Input for the UpdatePaIusto mutation"""
input UpdatePaIustoInput {
  """The slug that the pa_iusto will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_iusto object"""
  description: String

  """The ID of the paIusto object to update"""
  id: ID!

  """The name of the pa_iusto object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaIusto mutation"""
type UpdatePaIustoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_iusto"""
  paIusto: PaIusto
}

"""Input for the UpdatePaLaudantium mutation"""
input UpdatePaLaudantiumInput {
  """The slug that the pa_laudantium will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_laudantium object"""
  description: String

  """The ID of the paLaudantium object to update"""
  id: ID!

  """The name of the pa_laudantium object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaLaudantium mutation"""
type UpdatePaLaudantiumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_laudantium"""
  paLaudantium: PaLaudantium
}

"""Input for the UpdatePaMagnam mutation"""
input UpdatePaMagnamInput {
  """The slug that the pa_magnam will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_magnam object"""
  description: String

  """The ID of the paMagnam object to update"""
  id: ID!

  """The name of the pa_magnam object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaMagnam mutation"""
type UpdatePaMagnamPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_magnam"""
  paMagnam: PaMagnam
}

"""Input for the UpdatePaMagni mutation"""
input UpdatePaMagniInput {
  """The slug that the pa_magni will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_magni object"""
  description: String

  """The ID of the paMagni object to update"""
  id: ID!

  """The name of the pa_magni object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaMagni mutation"""
type UpdatePaMagniPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_magni"""
  paMagni: PaMagni
}

"""Input for the UpdatePaMinima mutation"""
input UpdatePaMinimaInput {
  """The slug that the pa_minima will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_minima object"""
  description: String

  """The ID of the paMinima object to update"""
  id: ID!

  """The name of the pa_minima object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaMinima mutation"""
type UpdatePaMinimaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_minima"""
  paMinima: PaMinima
}

"""Input for the UpdatePaMolestiae mutation"""
input UpdatePaMolestiaeInput {
  """The slug that the pa_molestiae will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_molestiae object"""
  description: String

  """The ID of the paMolestiae object to update"""
  id: ID!

  """The name of the pa_molestiae object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaMolestiae mutation"""
type UpdatePaMolestiaePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_molestiae"""
  paMolestiae: PaMolestiae
}

"""Input for the UpdatePaNihil mutation"""
input UpdatePaNihilInput {
  """The slug that the pa_nihil will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_nihil object"""
  description: String

  """The ID of the paNihil object to update"""
  id: ID!

  """The name of the pa_nihil object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaNihil mutation"""
type UpdatePaNihilPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_nihil"""
  paNihil: PaNihil
}

"""Input for the UpdatePaNon mutation"""
input UpdatePaNonInput {
  """The slug that the pa_non will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_non object"""
  description: String

  """The ID of the paNon object to update"""
  id: ID!

  """The name of the pa_non object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaNon mutation"""
type UpdatePaNonPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_non"""
  paNon: PaNon
}

"""Input for the UpdatePaNulla mutation"""
input UpdatePaNullaInput {
  """The slug that the pa_nulla will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_nulla object"""
  description: String

  """The ID of the paNulla object to update"""
  id: ID!

  """The name of the pa_nulla object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaNulla mutation"""
type UpdatePaNullaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_nulla"""
  paNulla: PaNulla
}

"""Input for the UpdatePaNumericSize mutation"""
input UpdatePaNumericSizeInput {
  """The slug that the pa_numeric-size will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_numeric-size object"""
  description: String

  """The ID of the paNumericSize object to update"""
  id: ID!

  """The name of the pa_numeric-size object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaNumericSize mutation"""
type UpdatePaNumericSizePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_numeric-size"""
  paNumericSize: PaNumericSize
}

"""Input for the UpdatePaOmnis mutation"""
input UpdatePaOmnisInput {
  """The slug that the pa_omnis will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_omnis object"""
  description: String

  """The ID of the paOmnis object to update"""
  id: ID!

  """The name of the pa_omnis object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaOmnis mutation"""
type UpdatePaOmnisPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_omnis"""
  paOmnis: PaOmnis
}

"""Input for the UpdatePaOptio mutation"""
input UpdatePaOptioInput {
  """The slug that the pa_optio will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_optio object"""
  description: String

  """The ID of the paOptio object to update"""
  id: ID!

  """The name of the pa_optio object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaOptio mutation"""
type UpdatePaOptioPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_optio"""
  paOptio: PaOptio
}

"""Input for the UpdatePaPraesentium mutation"""
input UpdatePaPraesentiumInput {
  """The slug that the pa_praesentium will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_praesentium object"""
  description: String

  """The ID of the paPraesentium object to update"""
  id: ID!

  """The name of the pa_praesentium object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaPraesentium mutation"""
type UpdatePaPraesentiumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_praesentium"""
  paPraesentium: PaPraesentium
}

"""Input for the UpdatePaProvident mutation"""
input UpdatePaProvidentInput {
  """The slug that the pa_provident will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_provident object"""
  description: String

  """The ID of the paProvident object to update"""
  id: ID!

  """The name of the pa_provident object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaProvident mutation"""
type UpdatePaProvidentPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_provident"""
  paProvident: PaProvident
}

"""Input for the UpdatePaQuae mutation"""
input UpdatePaQuaeInput {
  """The slug that the pa_quae will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quae object"""
  description: String

  """The ID of the paQuae object to update"""
  id: ID!

  """The name of the pa_quae object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaQuae mutation"""
type UpdatePaQuaePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quae"""
  paQuae: PaQuae
}

"""Input for the UpdatePaQui mutation"""
input UpdatePaQuiInput {
  """The slug that the pa_qui will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_qui object"""
  description: String

  """The ID of the paQui object to update"""
  id: ID!

  """The name of the pa_qui object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaQui mutation"""
type UpdatePaQuiPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_qui"""
  paQui: PaQui
}

"""Input for the UpdatePaQuia mutation"""
input UpdatePaQuiaInput {
  """The slug that the pa_quia will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quia object"""
  description: String

  """The ID of the paQuia object to update"""
  id: ID!

  """The name of the pa_quia object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaQuia mutation"""
type UpdatePaQuiaPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quia"""
  paQuia: PaQuia
}

"""Input for the UpdatePaQuidem mutation"""
input UpdatePaQuidemInput {
  """The slug that the pa_quidem will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quidem object"""
  description: String

  """The ID of the paQuidem object to update"""
  id: ID!

  """The name of the pa_quidem object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaQuidem mutation"""
type UpdatePaQuidemPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quidem"""
  paQuidem: PaQuidem
}

"""Input for the UpdatePaQuis mutation"""
input UpdatePaQuisInput {
  """The slug that the pa_quis will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quis object"""
  description: String

  """The ID of the paQuis object to update"""
  id: ID!

  """The name of the pa_quis object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaQuis mutation"""
type UpdatePaQuisPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quis"""
  paQuis: PaQuis
}

"""Input for the UpdatePaQuo mutation"""
input UpdatePaQuoInput {
  """The slug that the pa_quo will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_quo object"""
  description: String

  """The ID of the paQuo object to update"""
  id: ID!

  """The name of the pa_quo object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaQuo mutation"""
type UpdatePaQuoPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_quo"""
  paQuo: PaQuo
}

"""Input for the UpdatePaRepellendus mutation"""
input UpdatePaRepellendusInput {
  """The slug that the pa_repellendus will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_repellendus object"""
  description: String

  """The ID of the paRepellendus object to update"""
  id: ID!

  """The name of the pa_repellendus object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaRepellendus mutation"""
type UpdatePaRepellendusPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_repellendus"""
  paRepellendus: PaRepellendus
}

"""Input for the UpdatePaReprehenderit mutation"""
input UpdatePaReprehenderitInput {
  """The slug that the pa_reprehenderit will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_reprehenderit object"""
  description: String

  """The ID of the paReprehenderit object to update"""
  id: ID!

  """The name of the pa_reprehenderit object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaReprehenderit mutation"""
type UpdatePaReprehenderitPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_reprehenderit"""
  paReprehenderit: PaReprehenderit
}

"""Input for the UpdatePaRerum mutation"""
input UpdatePaRerumInput {
  """The slug that the pa_rerum will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_rerum object"""
  description: String

  """The ID of the paRerum object to update"""
  id: ID!

  """The name of the pa_rerum object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaRerum mutation"""
type UpdatePaRerumPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_rerum"""
  paRerum: PaRerum
}

"""Input for the UpdatePaSit mutation"""
input UpdatePaSitInput {
  """The slug that the pa_sit will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_sit object"""
  description: String

  """The ID of the paSit object to update"""
  id: ID!

  """The name of the pa_sit object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaSit mutation"""
type UpdatePaSitPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_sit"""
  paSit: PaSit
}

"""Input for the UpdatePaSize mutation"""
input UpdatePaSizeInput {
  """The slug that the pa_size will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_size object"""
  description: String

  """The ID of the paSize object to update"""
  id: ID!

  """The name of the pa_size object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaSize mutation"""
type UpdatePaSizePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_size"""
  paSize: PaSize
}

"""Input for the UpdatePaTenetur mutation"""
input UpdatePaTeneturInput {
  """The slug that the pa_tenetur will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_tenetur object"""
  description: String

  """The ID of the paTenetur object to update"""
  id: ID!

  """The name of the pa_tenetur object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaTenetur mutation"""
type UpdatePaTeneturPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_tenetur"""
  paTenetur: PaTenetur
}

"""Input for the UpdatePaVel mutation"""
input UpdatePaVelInput {
  """The slug that the pa_vel will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the pa_vel object"""
  description: String

  """The ID of the paVel object to update"""
  id: ID!

  """The name of the pa_vel object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePaVel mutation"""
type UpdatePaVelPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created pa_vel"""
  paVel: PaVel
}

"""Input for the updatePage mutation"""
input UpdatePageInput {
  """The userId to assign as the author of the object"""
  authorId: ID

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment status for the object"""
  commentStatus: String

  """The content of the object"""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """The ID of the page object"""
  id: ID!

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """The ID of the parent object"""
  parentId: ID

  """The password used to protect the content of the object"""
  password: String

  """The slug of the object"""
  slug: String

  """The status of the object"""
  status: PostStatusEnum

  """The title of the object"""
  title: String
}

"""The payload for the updatePage mutation"""
type UpdatePagePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The Post object mutation type."""
  page: Page
}

"""Input for the UpdatePostFormat mutation"""
input UpdatePostFormatInput {
  """The slug that the post_format will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the post_format object"""
  description: String

  """The ID of the postFormat object to update"""
  id: ID!

  """The name of the post_format object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdatePostFormat mutation"""
type UpdatePostFormatPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created post_format"""
  postFormat: PostFormat
}

"""Input for the updatePost mutation"""
input UpdatePostInput {
  """The userId to assign as the author of the object"""
  authorId: ID

  """Set connections between the post and categories"""
  categories: PostCategoriesInput

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The comment status for the object"""
  commentStatus: String

  """The content of the object"""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """The excerpt of the object"""
  excerpt: String

  """The ID of the post object"""
  id: ID!

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """The password used to protect the content of the object"""
  password: String

  """The ping status for the object"""
  pingStatus: String

  """URLs that have been pinged."""
  pinged: [String]

  """Set connections between the post and postFormats"""
  postFormats: PostPostFormatsInput

  """The slug of the object"""
  slug: String

  """The status of the object"""
  status: PostStatusEnum

  """Set connections between the post and tags"""
  tags: PostTagsInput

  """The title of the object"""
  title: String

  """URLs queued to be pinged."""
  toPing: [String]
}

"""The payload for the updatePost mutation"""
type UpdatePostPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The Post object mutation type."""
  post: Post
}

"""Input for the UpdateProductCategory mutation"""
input UpdateProductCategoryInput {
  """The slug that the product_cat will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_cat object"""
  description: String

  """The ID of the productCategory object to update"""
  id: ID!

  """The name of the product_cat object to mutate"""
  name: String

  """The ID of the product_cat that should be set as the parent"""
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateProductCategory mutation"""
type UpdateProductCategoryPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_cat"""
  productCategory: ProductCategory
}

"""Input for the UpdateProductTag mutation"""
input UpdateProductTagInput {
  """The slug that the product_tag will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_tag object"""
  description: String

  """The ID of the productTag object to update"""
  id: ID!

  """The name of the product_tag object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateProductTag mutation"""
type UpdateProductTagPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_tag"""
  productTag: ProductTag
}

"""Input for the UpdateProductType mutation"""
input UpdateProductTypeInput {
  """The slug that the product_type will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_type object"""
  description: String

  """The ID of the productType object to update"""
  id: ID!

  """The name of the product_type object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateProductType mutation"""
type UpdateProductTypePayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_type"""
  productType: ProductType
}

"""Input for the updateReusableBlock mutation"""
input UpdateReusableBlockInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The content of the object"""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """The ID of the ReusableBlock object"""
  id: ID!

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """The password used to protect the content of the object"""
  password: String

  """The slug of the object"""
  slug: String

  """The status of the object"""
  status: PostStatusEnum

  """The title of the object"""
  title: String
}

"""The payload for the updateReusableBlock mutation"""
type UpdateReusableBlockPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The Post object mutation type."""
  reusableBlock: ReusableBlock
}

"""Input for the updateReview mutation"""
input UpdateReviewInput {
  """The approval status of the comment."""
  approved: String

  """The name of the comment's author."""
  author: String

  """The email of the comment's author."""
  authorEmail: String

  """The url of the comment's author."""
  authorUrl: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The database ID of the post object the comment belongs to."""
  commentOn: Int

  """Content of the comment."""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """The ID of the review being updated."""
  id: ID!

  """Parent comment ID of current comment."""
  parent: ID

  """Product rating"""
  rating: Int!
}

"""The payload for the updateReview mutation"""
type UpdateReviewPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The product rating of the review that was created"""
  rating: Float

  """The product review that was created"""
  review: Comment
}

"""Input for the updateSettings mutation"""
input UpdateSettingsInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Allow people to submit comments on new posts."""
  discussionSettingsDefaultCommentStatus: String

  """
  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.
  """
  discussionSettingsDefaultPingStatus: String

  """A date format for all date strings."""
  generalSettingsDateFormat: String

  """Site tagline."""
  generalSettingsDescription: String

  """This address is used for admin purposes, like new user notification."""
  generalSettingsEmail: String

  """WordPress locale code."""
  generalSettingsLanguage: String

  """A day number of the week that the week should start on."""
  generalSettingsStartOfWeek: Int

  """A time format for all time strings."""
  generalSettingsTimeFormat: String

  """A city in the same timezone as you."""
  generalSettingsTimezone: String

  """Site title."""
  generalSettingsTitle: String

  """Site URL."""
  generalSettingsUrl: String

  """The ID of the page that should display the latest posts"""
  readingSettingsPageForPosts: Int

  """The ID of the page that should be displayed on the front page"""
  readingSettingsPageOnFront: Int

  """Blog pages show at most."""
  readingSettingsPostsPerPage: Int

  """What to show on the front page"""
  readingSettingsShowOnFront: String

  """Default post category."""
  writingSettingsDefaultCategory: Int

  """Default post format."""
  writingSettingsDefaultPostFormat: String

  """Convert emoticons like :-) and :-P to graphics on display."""
  writingSettingsUseSmilies: Boolean
}

"""The payload for the updateSettings mutation"""
type UpdateSettingsPayload {
  """Update all settings."""
  allSettings: Settings

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """Update the DiscussionSettings setting."""
  discussionSettings: DiscussionSettings

  """Update the GeneralSettings setting."""
  generalSettings: GeneralSettings

  """Update the ReadingSettings setting."""
  readingSettings: ReadingSettings

  """Update the WritingSettings setting."""
  writingSettings: WritingSettings
}

"""Input for the UpdateShippingClass mutation"""
input UpdateShippingClassInput {
  """The slug that the product_shipping_class will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_shipping_class object"""
  description: String

  """The ID of the shippingClass object to update"""
  id: ID!

  """The name of the product_shipping_class object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateShippingClass mutation"""
type UpdateShippingClassPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_shipping_class"""
  shippingClass: ShippingClass
}

"""Input for the updateShippingMethod mutation"""
input UpdateShippingMethodInput {
  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
  shippingMethods: [String]
}

"""The payload for the updateShippingMethod mutation"""
type UpdateShippingMethodPayload {
  """"""
  cart: Cart

  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String
}

"""Input for the UpdateTag mutation"""
input UpdateTagInput {
  """The slug that the post_tag will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the post_tag object"""
  description: String

  """The ID of the tag object to update"""
  id: ID!

  """The name of the post_tag object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateTag mutation"""
type UpdateTagPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created post_tag"""
  tag: Tag
}

"""Input for the updateUser mutation"""
input UpdateUserInput {
  """User's AOL IM account."""
  aim: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """A string containing content about the user."""
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """A string containing the user's email address."""
  email: String

  """	The user's first name."""
  firstName: String

  """The ID of the user"""
  id: ID!

  """User's Jabber account."""
  jabber: String

  """The user's last name."""
  lastName: String

  """User's locale."""
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """The user's nickname, defaults to the user's username."""
  nickname: String

  """A string that contains the plain text password for the user."""
  password: String

  """If true, this will refresh the users JWT secret."""
  refreshJwtUserSecret: Boolean

  """The date the user registered. Format is Y-m-d H:i:s."""
  registered: String

  """
  If true, this will revoke the users JWT secret. If false, this will unrevoke the JWT secret AND issue a new one. To revoke, the user must have proper capabilities to edit users JWT secrets.
  """
  revokeJwtUserSecret: Boolean

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """An array of roles to be assigned to the user."""
  roles: [String]

  """A string containing the user's URL for the user's web site."""
  websiteUrl: String

  """User's Yahoo IM account."""
  yim: String
}

"""The payload for the updateUser mutation"""
type UpdateUserPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The User object mutation type."""
  user: User
}

"""Input for the UpdateVisibleProduct mutation"""
input UpdateVisibleProductInput {
  """The slug that the product_visibility will be an alias of"""
  aliasOf: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The description of the product_visibility object"""
  description: String

  """The ID of the visibleProduct object to update"""
  id: ID!

  """The name of the product_visibility object to mutate"""
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""The payload for the UpdateVisibleProduct mutation"""
type UpdateVisibleProductPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The created product_visibility"""
  visibleProduct: VisibleProduct
}

"""A User object"""
type User implements Commenter & DatabaseIdentifier & Node & UniformResourceIdentifiable {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar(
    """
    Whether to always show the default image, never the Gravatar. Default false
    """
    forceDefault: Boolean

    """The rating level of the avatar."""
    rating: AvatarRatingEnum

    """
    The size attribute of the avatar field can be used to fetch avatars of different sizes. The value corresponds to the dimension in pixels to fetch. The default is 96 pixels.
    """
    size: Int = 96
  ): Avatar

  """Connection between the User type and the BlockEditorPreview type"""
  blockEditorPreviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: UserToBlockEditorPreviewConnectionWhereArgs
  ): UserToBlockEditorPreviewConnection

  """
  User metadata option name. Usually it will be &quot;wp_capabilities&quot;.
  """
  capKey: String

  """A list of capabilities (permissions) granted to the user"""
  capabilities: [String]

  """Connection between the User type and the Comment type"""
  comments(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: UserToCommentConnectionWhereArgs
  ): UserToCommentConnection

  """Identifies the primary key from the database."""
  databaseId: Int!

  """Description of the user."""
  description: String

  """
  Email address of the user. This is equivalent to the WP_User-&gt;user_email property.
  """
  email: String

  """Connection between the User type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): UserToEnqueuedScriptConnection

  """Connection between the User type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): UserToEnqueuedStylesheetConnection

  """
  A complete list of capabilities including capabilities inherited from a role. This is equivalent to the array keys of WP_User-&gt;allcaps.
  """
  extraCapabilities: [String]

  """
  First name of the user. This is equivalent to the WP_User-&gt;user_first_name property.
  """
  firstName: String

  """The globally unique identifier for the user object."""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """
  Whether the JWT User secret has been revoked. If the secret has been revoked, auth tokens will not be issued until an admin, or user with proper capabilities re-issues a secret for the user.
  """
  isJwtAuthSecretRevoked: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """
  The expiration for the JWT Token for the user. If not set custom for the user, it will use the default sitewide expiration setting
  """
  jwtAuthExpiration: String

  """
  A JWT token that can be used in future requests for authentication/authorization
  """
  jwtAuthToken: String

  """
  A JWT token that can be used in future requests to get a refreshed jwtAuthToken. If the refresh token used in a request is revoked or otherwise invalid, a valid Auth token will NOT be issued in the response headers.
  """
  jwtRefreshToken: String

  """
  A unique secret tied to the users JWT token that can be revoked or refreshed. Revoking the secret prevents JWT tokens from being issued to the user. Refreshing the token invalidates previously issued tokens, but allows new tokens to be issued.
  """
  jwtUserSecret: String

  """
  Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property.
  """
  lastName: String

  """
  The preferred language locale set for the user. Value derived from get_user_locale().
  """
  locale: String

  """Connection between the User type and the mediaItem type"""
  mediaItems(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: UserToMediaItemConnectionWhereArgs
  ): UserToMediaItemConnection

  """
  Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property.
  """
  name: String

  """
  The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename
  """
  nicename: String

  """Nickname of the user."""
  nickname: String

  """Connection between the User type and the page type"""
  pages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: UserToPageConnectionWhereArgs
  ): UserToPageConnection

  """Connection between the User type and the post type"""
  posts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: UserToPostConnectionWhereArgs
  ): UserToPostConnection

  """
  The date the user registered or was created. The field follows a full ISO8601 date string format.
  """
  registeredDate: String

  """Connection between the User and Revisions authored by the user"""
  revisions(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: UserToContentRevisionUnionConnectionWhereArgs
  ): UserToContentRevisionUnionConnection

  """Connection between the User type and the UserRole type"""
  roles(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): UserToUserRoleConnection

  """The Yoast SEO data of a user"""
  seo: SEOUser

  """
  The slug for the user. This field is equivalent to WP_User-&gt;user_nicename
  """
  slug: String

  """The unique resource identifier path"""
  uri: String

  """A website url that is associated with the user."""
  url: String

  """The Id of the user. Equivalent to WP_User-&gt;ID"""
  userId: Int @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  Username for the user. This field is equivalent to WP_User-&gt;user_login.
  """
  username: String

  """
  A JWT token that can be used in future requests to for WooCommerce session identification
  """
  wooSessionToken: String
}

"""
The Type of Identifier used to fetch a single User node. To be used along with the "id" field. Default is "ID".
"""
enum UserNodeIdTypeEnum {
  """The Database ID for the node"""
  DATABASE_ID

  """The Email of the User"""
  EMAIL

  """The hashed Global ID"""
  ID

  """The slug of the User"""
  SLUG

  """The URI for the node"""
  URI

  """The username the User uses to login with"""
  USERNAME
}

"""A user role object"""
type UserRole implements Node {
  """The capabilities that belong to this role"""
  capabilities: [String]

  """The display name of the role"""
  displayName: String

  """The globally unique identifier for the user role object."""
  id: ID!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """The registered name of the role"""
  name: String
}

"""Names of available user roles"""
enum UserRoleEnum {
  """User role with specific capabilities"""
  AUTHOR

  """User role with specific capabilities"""
  CONTRIBUTOR

  """User role with specific capabilities"""
  CUSTOMER

  """User role with specific capabilities"""
  EDITOR

  """User role with specific capabilities"""
  SEO_EDITOR

  """User role with specific capabilities"""
  SEO_MANAGER

  """User role with specific capabilities"""
  SHOP_MANAGER

  """User role with specific capabilities"""
  SUBSCRIBER
}

"""Connection between the User type and the BlockEditorPreview type"""
type UserToBlockEditorPreviewConnection {
  """Edges for the UserToBlockEditorPreviewConnection connection"""
  edges: [UserToBlockEditorPreviewConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [BlockEditorPreview]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToBlockEditorPreviewConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: BlockEditorPreview
}

"""
Arguments for filtering the UserToBlockEditorPreviewConnection connection
"""
input UserToBlockEditorPreviewConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the User type and the Comment type"""
type UserToCommentConnection {
  """Edges for the UserToCommentConnection connection"""
  edges: [UserToCommentConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Comment]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToCommentConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Comment
}

"""Arguments for filtering the UserToCommentConnection connection"""
input UserToCommentConnectionWhereArgs {
  """Comment author email address."""
  authorEmail: String

  """Array of author IDs to include comments for."""
  authorIn: [ID]

  """Array of author IDs to exclude comments for."""
  authorNotIn: [ID]

  """Comment author URL."""
  authorUrl: String

  """Array of comment IDs to include."""
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """Include comments of a given type."""
  commentType: String

  """Include comments from a given array of comment types."""
  commentTypeIn: [String]

  """Exclude comments from a given array of comment types."""
  commentTypeNotIn: String

  """Content object author ID to limit results by."""
  contentAuthor: [ID]

  """Array of author IDs to retrieve comments for."""
  contentAuthorIn: [ID]

  """Array of author IDs *not* to retrieve comments for."""
  contentAuthorNotIn: [ID]

  """Limit results to those affiliated with a given content object ID."""
  contentId: ID

  """Array of content object IDs to include affiliated comments for."""
  contentIdIn: [ID]

  """Array of content object IDs to exclude affiliated comments for."""
  contentIdNotIn: [ID]

  """Content object name to retrieve affiliated comments for."""
  contentName: String

  """Content Object parent ID to retrieve affiliated comments for."""
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """Karma score to retrieve matching comments for."""
  karma: Int

  """The cardinality of the order of the connection"""
  order: OrderEnum

  """Field to order the comments by."""
  orderby: CommentsConnectionOrderbyEnum

  """Parent ID of comment to retrieve children of."""
  parent: Int

  """Array of parent IDs of comments to retrieve children for."""
  parentIn: [ID]

  """Array of parent IDs of comments *not* to retrieve children for."""
  parentNotIn: [ID]

  """Search term(s) to retrieve matching comments for."""
  search: String

  """Comment status to limit results by."""
  status: String

  """Include comments for a specific user ID."""
  userId: ID
}

"""Connection between the User type and the ContentRevisionUnion type"""
type UserToContentRevisionUnionConnection {
  """Edges for the UserToContentRevisionUnionConnection connection"""
  edges: [UserToContentRevisionUnionConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentRevisionUnion]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToContentRevisionUnionConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentRevisionUnion
}

"""
Arguments for filtering the UserToContentRevisionUnionConnection connection
"""
input UserToContentRevisionUnionConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [ContentTypeEnum]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the User type and the EnqueuedScript type"""
type UserToEnqueuedScriptConnection {
  """Edges for the UserToEnqueuedScriptConnection connection"""
  edges: [UserToEnqueuedScriptConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedScript]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToEnqueuedScriptConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedScript
}

"""Connection between the User type and the EnqueuedStylesheet type"""
type UserToEnqueuedStylesheetConnection {
  """Edges for the UserToEnqueuedStylesheetConnection connection"""
  edges: [UserToEnqueuedStylesheetConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [EnqueuedStylesheet]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToEnqueuedStylesheetConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: EnqueuedStylesheet
}

"""Connection between the User type and the mediaItem type"""
type UserToMediaItemConnection {
  """Edges for the UserToMediaItemConnection connection"""
  edges: [UserToMediaItemConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [MediaItem]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToMediaItemConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: MediaItem
}

"""Arguments for filtering the UserToMediaItemConnection connection"""
input UserToMediaItemConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the User type and the page type"""
type UserToPageConnection {
  """Edges for the UserToPageConnection connection"""
  edges: [UserToPageConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Page]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToPageConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Page
}

"""Arguments for filtering the UserToPageConnection connection"""
input UserToPageConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the User type and the post type"""
type UserToPostConnection {
  """Edges for the UserToPostConnection connection"""
  edges: [UserToPostConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Post]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToPostConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Post
}

"""Arguments for filtering the UserToPostConnection connection"""
input UserToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """Find objects connected to author(s) in the array of author's userIds"""
  authorIn: [ID]

  """Find objects connected to the author by the author's nicename"""
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """Category ID"""
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """Use Category Slug"""
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Tag Slug"""
  tag: String

  """Use Tag ID"""
  tagId: String

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagIn: [ID]

  """Array of tag IDs, used to display objects from one tag OR another"""
  tagNotIn: [ID]

  """Array of tag slugs, used to display objects from one tag OR another"""
  tagSlugAnd: [String]

  """Array of tag slugs, used to exclude objects in specified tags"""
  tagSlugIn: [String]

  """Title of the object"""
  title: String
}

"""Connection between the User type and the UserRole type"""
type UserToUserRoleConnection {
  """Edges for the UserToUserRoleConnection connection"""
  edges: [UserToUserRoleConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [UserRole]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type UserToUserRoleConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: UserRole
}

"""Field to order the connection by"""
enum UsersConnectionOrderbyEnum {
  """Order by display name"""
  DISPLAY_NAME

  """Order by email address"""
  EMAIL

  """Order by login"""
  LOGIN

  """Preserve the login order given in the LOGIN_IN array"""
  LOGIN_IN

  """Order by nice name"""
  NICE_NAME

  """Preserve the nice name order given in the NICE_NAME_IN array"""
  NICE_NAME_IN

  """Order by registration date"""
  REGISTERED

  """Order by URL"""
  URL
}

"""Options for ordering the connection"""
input UsersConnectionOrderbyInput {
  """The field name used to sort the results."""
  field: UsersConnectionOrderbyEnum!

  """The cardinality of the order of the connection"""
  order: OrderEnum
}

"""Column used for searching for users."""
enum UsersConnectionSearchColumnEnum {
  """The user's email address."""
  EMAIL

  """The globally unique ID."""
  ID

  """The username the User uses to login with."""
  LOGIN

  """A URL-friendly name for the user. The default is the user's username."""
  NICENAME

  """The URL of the user\s website."""
  URL
}

"""A variable product object"""
type VariableProduct implements ContentNode & DatabaseIdentifier & Node & NodeWithComments & NodeWithContentEditor & NodeWithFeaturedImage & Product & UniformResourceIdentifiable {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Slider / SwiperJS&quot; was set to Show in GraphQL.
  """
  acfBlockSliderSwiperJS: VariableProduct_Acfblocksliderswiperjs

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Block: Staff&quot; was set to Show in GraphQL.
  """
  acfBlockStaff: VariableProduct_Acfblockstaff

  """Connection between the Product type and the paArchitecto type"""
  allPaArchitecto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaArchitectoConnectionWhereArgs
  ): ProductToPaArchitectoConnection

  """Connection between the Product type and the paAspernatur type"""
  allPaAspernatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAspernaturConnectionWhereArgs
  ): ProductToPaAspernaturConnection

  """Connection between the Product type and the paAtque type"""
  allPaAtque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaAtqueConnectionWhereArgs
  ): ProductToPaAtqueConnection

  """Connection between the Product type and the paColor type"""
  allPaColor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaColorConnectionWhereArgs
  ): ProductToPaColorConnection

  """Connection between the Product type and the paConsequatur type"""
  allPaConsequatur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaConsequaturConnectionWhereArgs
  ): ProductToPaConsequaturConnection

  """Connection between the Product type and the paCum type"""
  allPaCum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaCumConnectionWhereArgs
  ): ProductToPaCumConnection

  """Connection between the Product type and the paDolor type"""
  allPaDolor(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorConnectionWhereArgs
  ): ProductToPaDolorConnection

  """Connection between the Product type and the paDoloremque type"""
  allPaDoloremque(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloremqueConnectionWhereArgs
  ): ProductToPaDoloremqueConnection

  """Connection between the Product type and the paDolores type"""
  allPaDolores(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDoloresConnectionWhereArgs
  ): ProductToPaDoloresConnection

  """Connection between the Product type and the paDolorum type"""
  allPaDolorum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaDolorumConnectionWhereArgs
  ): ProductToPaDolorumConnection

  """Connection between the Product type and the paEa type"""
  allPaEa(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEaConnectionWhereArgs
  ): ProductToPaEaConnection

  """Connection between the Product type and the paEos type"""
  allPaEos(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEosConnectionWhereArgs
  ): ProductToPaEosConnection

  """Connection between the Product type and the paEt type"""
  allPaEt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaEtConnectionWhereArgs
  ): ProductToPaEtConnection

  """Connection between the Product type and the paExcepturi type"""
  allPaExcepturi(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExcepturiConnectionWhereArgs
  ): ProductToPaExcepturiConnection

  """Connection between the Product type and the paExplicabo type"""
  allPaExplicabo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaExplicaboConnectionWhereArgs
  ): ProductToPaExplicaboConnection

  """Connection between the Product type and the paFacere type"""
  allPaFacere(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaFacereConnectionWhereArgs
  ): ProductToPaFacereConnection

  """Connection between the Product type and the paHarum type"""
  allPaHarum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaHarumConnectionWhereArgs
  ): ProductToPaHarumConnection

  """Connection between the Product type and the paIncidunt type"""
  allPaIncidunt(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaInciduntConnectionWhereArgs
  ): ProductToPaInciduntConnection

  """Connection between the Product type and the paIpsam type"""
  allPaIpsam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIpsamConnectionWhereArgs
  ): ProductToPaIpsamConnection

  """Connection between the Product type and the paIusto type"""
  allPaIusto(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaIustoConnectionWhereArgs
  ): ProductToPaIustoConnection

  """Connection between the Product type and the paLaudantium type"""
  allPaLaudantium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaLaudantiumConnectionWhereArgs
  ): ProductToPaLaudantiumConnection

  """Connection between the Product type and the paMagnam type"""
  allPaMagnam(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagnamConnectionWhereArgs
  ): ProductToPaMagnamConnection

  """Connection between the Product type and the paMagni type"""
  allPaMagni(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMagniConnectionWhereArgs
  ): ProductToPaMagniConnection

  """Connection between the Product type and the paMinima type"""
  allPaMinima(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMinimaConnectionWhereArgs
  ): ProductToPaMinimaConnection

  """Connection between the Product type and the paMolestiae type"""
  allPaMolestiae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaMolestiaeConnectionWhereArgs
  ): ProductToPaMolestiaeConnection

  """Connection between the Product type and the paNihil type"""
  allPaNihil(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNihilConnectionWhereArgs
  ): ProductToPaNihilConnection

  """Connection between the Product type and the paNon type"""
  allPaNon(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNonConnectionWhereArgs
  ): ProductToPaNonConnection

  """Connection between the Product type and the paNulla type"""
  allPaNulla(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNullaConnectionWhereArgs
  ): ProductToPaNullaConnection

  """Connection between the Product type and the paNumericSize type"""
  allPaNumericSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaNumericSizeConnectionWhereArgs
  ): ProductToPaNumericSizeConnection

  """Connection between the Product type and the paOmnis type"""
  allPaOmnis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOmnisConnectionWhereArgs
  ): ProductToPaOmnisConnection

  """Connection between the Product type and the paOptio type"""
  allPaOptio(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaOptioConnectionWhereArgs
  ): ProductToPaOptioConnection

  """Connection between the Product type and the paPraesentium type"""
  allPaPraesentium(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaPraesentiumConnectionWhereArgs
  ): ProductToPaPraesentiumConnection

  """Connection between the Product type and the paProvident type"""
  allPaProvident(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaProvidentConnectionWhereArgs
  ): ProductToPaProvidentConnection

  """Connection between the Product type and the paQuae type"""
  allPaQuae(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuaeConnectionWhereArgs
  ): ProductToPaQuaeConnection

  """Connection between the Product type and the paQui type"""
  allPaQui(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiConnectionWhereArgs
  ): ProductToPaQuiConnection

  """Connection between the Product type and the paQuia type"""
  allPaQuia(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuiaConnectionWhereArgs
  ): ProductToPaQuiaConnection

  """Connection between the Product type and the paQuidem type"""
  allPaQuidem(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuidemConnectionWhereArgs
  ): ProductToPaQuidemConnection

  """Connection between the Product type and the paQuis type"""
  allPaQuis(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuisConnectionWhereArgs
  ): ProductToPaQuisConnection

  """Connection between the Product type and the paQuo type"""
  allPaQuo(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaQuoConnectionWhereArgs
  ): ProductToPaQuoConnection

  """Connection between the Product type and the paRepellendus type"""
  allPaRepellendus(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRepellendusConnectionWhereArgs
  ): ProductToPaRepellendusConnection

  """Connection between the Product type and the paReprehenderit type"""
  allPaReprehenderit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaReprehenderitConnectionWhereArgs
  ): ProductToPaReprehenderitConnection

  """Connection between the Product type and the paRerum type"""
  allPaRerum(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaRerumConnectionWhereArgs
  ): ProductToPaRerumConnection

  """Connection between the Product type and the paSit type"""
  allPaSit(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSitConnectionWhereArgs
  ): ProductToPaSitConnection

  """Connection between the Product type and the paSize type"""
  allPaSize(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaSizeConnectionWhereArgs
  ): ProductToPaSizeConnection

  """Connection between the Product type and the paTenetur type"""
  allPaTenetur(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaTeneturConnectionWhereArgs
  ): ProductToPaTeneturConnection

  """Connection between the Product type and the paVel type"""
  allPaVel(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToPaVelConnectionWhereArgs
  ): ProductToPaVelConnection

  """Connection between the Product type and the ProductAttribute type"""
  attributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection

  """Product average count"""
  averageRating: Float

  """Product backorders status"""
  backorders: BackordersEnum

  """Can product be backordered?"""
  backordersAllowed: Boolean

  """Catalog visibility"""
  catalogVisibility: CatalogVisibilityEnum

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """The content of the post."""
  content(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: ContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """Connection between the VariableProduct type and the Product type"""
  crossSell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: VariableProductToProductConnectionWhereArgs
  ): VariableProductToProductConnection

  """The ID of the product in the database"""
  databaseId: Int!

  """Date product created"""
  date: String

  """The publishing date set in GMT."""
  dateGmt: String

  """Date on sale from"""
  dateOnSaleFrom: String

  """Date on sale to"""
  dateOnSaleTo: String

  """
  Connection between the VariableProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): VariableProductToVariationAttributeConnection

  """Product description"""
  description(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """The desired slug of the post"""
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """The RSS enclosure for the object"""
  enclosure: String

  """Connection between the ContentNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): ContentNodeToEnqueuedStylesheetConnection

  """If the product is featured"""
  featured: Boolean

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """Connection between the Product type and the MediaItem type"""
  galleryImages(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String

  """Product&#039;s height"""
  height: String

  """The globally unique identifier for the product"""
  id: ID!

  """Main image"""
  image: MediaItem

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is a node in the preview state"""
  isPreview: Boolean

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """Product&#039;s length"""
  length: String

  """The permalink of the post"""
  link: String

  """Connection between the Product type and the LocalProductAttribute type"""
  localAttributes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection

  """If product manage stock"""
  manageStock: Boolean

  """Menu order"""
  menuOrder: Int

  """Object meta data"""
  metaData(
    """Retrieve meta by key"""
    key: String

    """Retrieve multiple metas by key"""
    keysIn: [String]

    """Retrieve meta with matching keys"""
    multiple: Boolean
  ): [MetaData]

  """Date product last updated"""
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """Product name"""
  name: String

  """Is product on sale?"""
  onSale: Boolean

  """Parent product"""
  parent: Product

  """The database id of the preview node"""
  previewRevisionDatabaseId: Int

  """Whether the object is a node in the preview state"""
  previewRevisionId: ID

  """Product&#039;s active price"""
  price(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Product type and the productCategory type"""
  productCategories(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection

  """Product Currency"""
  productCurrency: String

  """Connection between the Product type and the productTag type"""
  productTags(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection

  """Connection between the Product type and the productType type"""
  productTypes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection

  """Can product be purchased?"""
  purchasable: Boolean

  """Purchase note"""
  purchaseNote: String

  """Product&#039;s regular price"""
  regularPrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """Connection between the Product type and the Product type"""
  related(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """Product review count"""
  reviewCount: Int

  """Connection between the Product type and the Comment type"""
  reviews(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection

  """If reviews are allowed"""
  reviewsAllowed: Boolean

  """Product&#039;s sale price"""
  salePrice(
    """Format of the price"""
    format: PricingFieldFormatEnum
  ): String

  """The Yoast SEO data of the ContentNode"""
  seo: PostTypeSEO

  """shipping class ID"""
  shippingClassId: Int

  """Connection between the Product type and the shippingClass type"""
  shippingClasses(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection

  """Does product need to be shipped?"""
  shippingRequired: Boolean

  """Is product shipping taxable?"""
  shippingTaxable: Boolean

  """Product short description"""
  shortDescription(
    """Format of the field output"""
    format: PostObjectFieldFormatEnum
  ): String

  """Product SKU"""
  sku: String

  """Product slug"""
  slug: String

  """If should be sold individually"""
  soldIndividually: Boolean

  """Product status"""
  status: String

  """Number of items available for sale"""
  stockQuantity: Int

  """Product stock status"""
  stockStatus: StockStatusEnum

  """Tax class"""
  taxClass: TaxClassEnum

  """Tax status"""
  taxStatus: TaxStatusEnum

  """The template assigned to a node of content"""
  template: ContentTemplate

  """Number total of sales"""
  totalSales: Int

  """Product type"""
  type: ProductTypesEnum

  """Connection between the Product type and the Product type"""
  upsell(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToUpsellConnectionWhereArgs
  ): ProductToUpsellConnection

  """The unique resource identifier path"""
  uri: String

  """
  Connection between the VariableProduct type and the ProductVariation type
  """
  variations(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: VariableProductToProductVariationConnectionWhereArgs
  ): VariableProductToProductVariationConnection

  """Connection between the Product type and the visibleProduct type"""
  visibleProducts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection

  """Product&#039;s weight"""
  weight: String

  """Product&#039;s width"""
  width: String
}

"""Connection between the VariableProduct type and the Product type"""
type VariableProductToProductConnection {
  """Edges for the VariableProductToProductConnection connection"""
  edges: [VariableProductToProductConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [Product]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type VariableProductToProductConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: Product
}

"""
Arguments for filtering the VariableProductToProductConnection connection
"""
input VariableProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the VariableProduct type and the ProductVariation type
"""
type VariableProductToProductVariationConnection {
  """Edges for the VariableProductToProductVariationConnection connection"""
  edges: [VariableProductToProductVariationConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ProductVariation]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type VariableProductToProductVariationConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ProductVariation
}

"""
Arguments for filtering the VariableProductToProductVariationConnection connection
"""
input VariableProductToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """Limit result set to products assigned a specific category name."""
  category: String

  """Limit result set to products assigned a specific category name."""
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """Filter the connection based on dates."""
  dateQuery: DateQueryInput

  """Ensure result set excludes specific IDs."""
  exclude: [Int]

  """Limit result set to featured products."""
  featured: Boolean

  """Limit result set to specific ids."""
  include: [Int]

  """Limit result set to products based on a maximum price."""
  maxPrice: Float

  """Limit result set to products based on a minimum price."""
  minPrice: Float

  """Limit result set to products on sale."""
  onSale: Boolean

  """What paramater to use to order the objects by."""
  orderby: [ProductsOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items."""
  parent: Int

  """Specify objects whose parent is in an array."""
  parentIn: [Int]

  """Specify objects whose parent is not in an array."""
  parentNotIn: [Int]

  """Limit result set to products based on a keyword search."""
  search: String

  """Limit result set to products assigned a specific shipping class ID."""
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """Limit result set to products with specific slugs."""
  slugIn: [String]

  """Limit result set to products assigned a specific status."""
  status: String

  """Limit result set to products in stock or out of stock."""
  stockStatus: [StockStatusEnum]

  """Limit result types to types supported by WooGraphQL."""
  supportedTypesOnly: Boolean

  """Limit result set to products assigned a specific tag name."""
  tag: String

  """Limit result set to products assigned a specific tag ID."""
  tagId: Int

  """Limit result set to products assigned to a specific group of tag IDs."""
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """Limit result set with complex set of taxonomy filters."""
  taxonomyFilter: ProductTaxonomyInput

  """Limit result set to products assigned a specific type."""
  type: ProductTypesEnum

  """Limit result set to products assigned to a group of specific types."""
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """Limit result set to products with a specific visibility level."""
  visibility: CatalogVisibilityEnum
}

"""
Connection between the VariableProduct type and the VariationAttribute type
"""
type VariableProductToVariationAttributeConnection {
  """Edges for the VariableProductToVariationAttributeConnection connection"""
  edges: [VariableProductToVariationAttributeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [VariationAttribute]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type VariableProductToVariationAttributeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: VariationAttribute
}

"""Field Group"""
type VariableProduct_Acfblocksliderswiperjs implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  slides: [VariableProduct_Acfblocksliderswiperjs_slides]
}

"""Field Group"""
type VariableProduct_Acfblocksliderswiperjs_slides implements AcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem
}

"""Field Group"""
type VariableProduct_Acfblockstaff implements AcfFieldGroup {
  """"""
  email: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """"""
  image: MediaItem

  """"""
  name: String

  """"""
  phone1: String

  """"""
  phone2: String

  """"""
  title: String
}

"""A product variation attribute object"""
type VariationAttribute implements Attribute {
  """The Database ID of the attribute."""
  attributeId: Int

  """The Global ID of the attribute."""
  id: ID!

  """Label of attribute"""
  label: String

  """Name of attribute"""
  name: String

  """Selected value of attribute"""
  value: String
}

"""The visibleProduct type"""
type VisibleProduct implements DatabaseIdentifier & Node & TermNode & UniformResourceIdentifiable {
  """Connection between the visibleProduct type and the ContentNode type"""
  contentNodes(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int

    """Arguments for filtering the connection"""
    where: VisibleProductToContentNodeConnectionWhereArgs
  ): VisibleProductToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the TermNode type and the EnqueuedScript type"""
  enqueuedScripts(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedScriptConnection

  """Connection between the TermNode type and the EnqueuedStylesheet type"""
  enqueuedStylesheets(
    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """The number of items to return after the referenced "after" cursor"""
    first: Int

    """The number of items to return before the referenced "before" cursor"""
    last: Int
  ): TermNodeToEnqueuedStylesheetConnection

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the object is restricted from the current viewer"""
  isRestricted: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """The Yoast SEO data of the Product visibility taxonomy."""
  seo: TaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the visibleProduct type and the Taxonomy type"""
  taxonomy: VisibleProductToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String

  """The id field matches the WP_Post-&gt;ID field."""
  visibleProductId: Int @deprecated(reason: "Deprecated in favor of databaseId")
}

"""The Type of Identifier used to fetch a single resource. Default is ID."""
enum VisibleProductIdType {
  """The Database ID for the node"""
  DATABASE_ID

  """The hashed Global ID"""
  ID

  """The name of the node"""
  NAME

  """Url friendly name of the node"""
  SLUG

  """The URI for the node"""
  URI
}

"""Connection between the visibleProduct type and the ContentNode type"""
type VisibleProductToContentNodeConnection {
  """Edges for the VisibleProductToContentNodeConnection connection"""
  edges: [VisibleProductToContentNodeConnectionEdge]

  """The nodes of the connection, without the edges"""
  nodes: [ContentNode]

  """Information about pagination in a connection."""
  pageInfo: WPPageInfo
}

"""An edge in a connection"""
type VisibleProductToContentNodeConnectionEdge {
  """A cursor for use in pagination"""
  cursor: String

  """The item at the end of the edge"""
  node: ContentNode
}

"""
Arguments for filtering the VisibleProductToContentNodeConnection connection
"""
input VisibleProductToContentNodeConnectionWhereArgs {
  """The Types of content to filter"""
  contentTypes: [String]

  """Filter the connection based on dates"""
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """Specific database ID of the object"""
  id: Int

  """Array of IDs for the objects to retrieve"""
  in: [ID]

  """Get objects with a specific mimeType property"""
  mimeType: MimeTypeEnum

  """Slug / post_name of the object"""
  name: String

  """Specify objects to retrieve. Use slugs"""
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """What paramater to use to order the objects by."""
  orderby: [PostObjectsConnectionOrderbyInput]

  """Use ID to return only children. Use 0 to return only top-level items"""
  parent: ID

  """Specify objects whose parent is in an array"""
  parentIn: [ID]

  """Specify posts whose parent is not in an array"""
  parentNotIn: [ID]

  """Show posts with a specific password."""
  password: String

  """Show Posts based on a keyword search"""
  search: String

  """Retrieve posts where post status is in an array."""
  stati: [PostStatusEnum]

  """Show posts with a specific status."""
  status: PostStatusEnum

  """Title of the object"""
  title: String
}

"""Connection between the visibleProduct type and the Taxonomy type"""
type VisibleProductToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: Taxonomy
}

"""Information about pagination in a connection."""
type WPPageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """
  Get information about the offset pagination state in the current connection
  """
  offsetPagination: OffsetPaginationPageInfo

  """Raw schema for page"""
  seo: SEOPostTypePageInfo

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

""""""
type WishlistProduct {
  """"""
  buttonText: String

  """"""
  databaseId: Int

  """"""
  image: WishlistProductImage

  """"""
  name: String

  """"""
  priceHtml: String

  """"""
  productUrl: String

  """"""
  slug: String

  """"""
  stockQuantity: Int

  """"""
  stockStatus: String

  """"""
  typename: String
}

""""""
type WishlistProductImage {
  """"""
  alt: String

  """"""
  attachmentId: Int

  """"""
  src: String
}

"""States Type"""
type WishlistProducts {
  """"""
  error: String

  """"""
  productIds: [Int]

  """"""
  products: [WishlistProduct]
}

"""Countries Type"""
type WooCountries {
  """"""
  billingCountries: [WooCountry]

  """"""
  shippingCountries: [WooCountry]
}

""""""
type WooCountry {
  """"""
  countryCode: String

  """"""
  countryName: String
}

""""""
type WooState {
  """"""
  stateCode: String

  """"""
  stateName: String
}

"""States Type"""
type WooStates {
  """"""
  states: [WooState]
}

"""woocommerce/active-filters block"""
type WoocommerceActiveFiltersBlock implements Block {
  """"""
  attributes: WoocommerceActiveFiltersBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceActiveFiltersBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  displayStyle: String!

  """"""
  heading: String!

  """"""
  headingLevel: Float!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/all-products block"""
type WoocommerceAllProductsBlock implements Block {
  """"""
  attributes: WoocommerceAllProductsBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceAllProductsBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean

  """"""
  className: String

  """"""
  columns: Float

  """"""
  contentVisibility: BlockAttributesObject

  """"""
  isPreview: Boolean!

  """"""
  layoutConfig: BlockAttributesArray

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String

  """"""
  rows: Float
}

union WoocommerceAllProductsBlockAttributesUnion = WoocommerceAllProductsBlockAttributes | WoocommerceAllProductsBlockDeprecatedV1Attributes

""""""
type WoocommerceAllProductsBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean

  """"""
  className: String

  """"""
  columns: Float

  """"""
  contentVisibility: BlockAttributesObject

  """"""
  isPreview: Boolean!

  """"""
  layoutConfig: BlockAttributesArray

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String

  """"""
  rows: Float
}

"""woocommerce/all-reviews block"""
type WoocommerceAllReviewsBlock implements Block {
  """"""
  attributes: WoocommerceAllReviewsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceAllReviewsBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  editMode: Boolean!

  """"""
  fontSize: String

  """"""
  imageType: String!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  previewReviews: BlockAttributesArray

  """"""
  reviewsOnLoadMore: Float!

  """"""
  reviewsOnPageLoad: Float!

  """"""
  showLoadMore: Boolean!

  """"""
  showOrderby: Boolean!

  """"""
  showProductName: Boolean!

  """"""
  showReviewContent: Boolean!

  """"""
  showReviewDate: Boolean!

  """"""
  showReviewImage: Boolean!

  """"""
  showReviewRating: Boolean!

  """"""
  showReviewerName: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/attribute-filter block"""
type WoocommerceAttributeFilterBlock implements Block {
  """"""
  attributes: WoocommerceAttributeFilterBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceAttributeFilterBlockAttributes {
  """"""
  attributeId: Float!

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  displayStyle: String!

  """"""
  heading: String!

  """"""
  headingLevel: Float!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  queryType: String!

  """"""
  selectType: String!

  """"""
  showCounts: Boolean!

  """"""
  showFilterButton: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/cart-accepted-payment-methods-block block"""
type WoocommerceCartAcceptedPaymentMethodsBlock implements Block {
  """"""
  attributes: WoocommerceCartAcceptedPaymentMethodsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartAcceptedPaymentMethodsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject
}

"""woocommerce/cart block"""
type WoocommerceCartBlock implements Block {
  """"""
  attributes: WoocommerceCartBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartBlockAttributes {
  """"""
  align: String

  """"""
  checkoutPageId: Float!

  """"""
  className: String

  """"""
  hasDarkControls: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  isShippingCalculatorEnabled: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showRateAfterTaxName: Boolean!
}

union WoocommerceCartBlockAttributesUnion = WoocommerceCartBlockAttributes | WoocommerceCartBlockDeprecatedV1Attributes

""""""
type WoocommerceCartBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  checkoutPageId: Float!

  """"""
  className: String

  """"""
  hasDarkControls: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  isShippingCalculatorEnabled: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showRateAfterTaxName: Boolean!
}

"""woocommerce/cart-express-payment-block block"""
type WoocommerceCartExpressPaymentBlock implements Block {
  """"""
  attributes: WoocommerceCartExpressPaymentBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartExpressPaymentBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-items-block block"""
type WoocommerceCartItemsBlock implements Block {
  """"""
  attributes: WoocommerceCartItemsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartItemsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-line-items-block block"""
type WoocommerceCartLineItemsBlock implements Block {
  """"""
  attributes: WoocommerceCartLineItemsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartLineItemsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-block block"""
type WoocommerceCartOrderSummaryBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-coupon-form-block block"""
type WoocommerceCartOrderSummaryCouponFormBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryCouponFormBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryCouponFormBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-discount-block block"""
type WoocommerceCartOrderSummaryDiscountBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryDiscountBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryDiscountBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-fee-block block"""
type WoocommerceCartOrderSummaryFeeBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryFeeBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryFeeBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-heading-block block"""
type WoocommerceCartOrderSummaryHeadingBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryHeadingBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryHeadingBlockAttributes {
  """"""
  className: String

  """"""
  content: String!

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-shipping-block block"""
type WoocommerceCartOrderSummaryShippingBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryShippingBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryShippingBlockAttributes {
  """"""
  className: String

  """"""
  isShippingCalculatorEnabled: Boolean!

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-subtotal-block block"""
type WoocommerceCartOrderSummarySubtotalBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummarySubtotalBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummarySubtotalBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/cart-order-summary-taxes-block block"""
type WoocommerceCartOrderSummaryTaxesBlock implements Block {
  """"""
  attributes: WoocommerceCartOrderSummaryTaxesBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartOrderSummaryTaxesBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!

  """"""
  showRateAfterTaxName: Boolean!
}

"""woocommerce/cart-totals-block block"""
type WoocommerceCartTotalsBlock implements Block {
  """"""
  attributes: WoocommerceCartTotalsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCartTotalsBlockAttributes {
  """"""
  checkbox: Boolean!

  """"""
  className: String

  """"""
  lock: BlockAttributesObject!

  """"""
  text: String
}

"""woocommerce/checkout-actions-block block"""
type WoocommerceCheckoutActionsBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutActionsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutActionsBlockAttributes {
  """"""
  cartPageId: Float!

  """"""
  className: String

  """"""
  lock: BlockAttributesObject!

  """"""
  showReturnToCart: Boolean!
}

"""woocommerce/checkout-billing-address-block block"""
type WoocommerceCheckoutBillingAddressBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutBillingAddressBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutBillingAddressBlockAttributes {
  """"""
  className: String

  """"""
  description: String!

  """"""
  lock: BlockAttributesObject!

  """"""
  showStepNumber: Boolean!

  """"""
  title: String!
}

"""woocommerce/checkout block"""
type WoocommerceCheckoutBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutBlockAttributes {
  """"""
  align: String

  """"""
  allowCreateAccount: Boolean!

  """"""
  cartPageId: Float!

  """"""
  className: String

  """"""
  hasDarkControls: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  requireCompanyField: Boolean!

  """"""
  requirePhoneField: Boolean!

  """"""
  showApartmentField: Boolean!

  """"""
  showCompanyField: Boolean!

  """"""
  showOrderNotes: Boolean!

  """"""
  showPhoneField: Boolean!

  """"""
  showPolicyLinks: Boolean!

  """"""
  showRateAfterTaxName: Boolean!

  """"""
  showReturnToCart: Boolean!
}

union WoocommerceCheckoutBlockAttributesUnion = WoocommerceCheckoutBlockAttributes | WoocommerceCheckoutBlockDeprecatedV1Attributes

""""""
type WoocommerceCheckoutBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  allowCreateAccount: Boolean!

  """"""
  cartPageId: Float!

  """"""
  className: String

  """"""
  hasDarkControls: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  requireCompanyField: Boolean!

  """"""
  requirePhoneField: Boolean!

  """"""
  showApartmentField: Boolean!

  """"""
  showCompanyField: Boolean!

  """"""
  showOrderNotes: Boolean!

  """"""
  showPhoneField: Boolean!

  """"""
  showPolicyLinks: Boolean!

  """"""
  showRateAfterTaxName: Boolean!

  """"""
  showReturnToCart: Boolean!
}

"""woocommerce/checkout-contact-information-block block"""
type WoocommerceCheckoutContactInformationBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutContactInformationBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutContactInformationBlockAttributes {
  """"""
  className: String

  """"""
  description: String!

  """"""
  lock: BlockAttributesObject!

  """"""
  showStepNumber: Boolean!

  """"""
  title: String!
}

"""woocommerce/checkout-express-payment-block block"""
type WoocommerceCheckoutExpressPaymentBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutExpressPaymentBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutExpressPaymentBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-fields-block block"""
type WoocommerceCheckoutFieldsBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutFieldsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutFieldsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-note-block block"""
type WoocommerceCheckoutOrderNoteBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderNoteBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderNoteBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-block block"""
type WoocommerceCheckoutOrderSummaryBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-cart-items-block block"""
type WoocommerceCheckoutOrderSummaryCartItemsBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryCartItemsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryCartItemsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-coupon-form-block block"""
type WoocommerceCheckoutOrderSummaryCouponFormBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryCouponFormBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryCouponFormBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-discount-block block"""
type WoocommerceCheckoutOrderSummaryDiscountBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryDiscountBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryDiscountBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-fee-block block"""
type WoocommerceCheckoutOrderSummaryFeeBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryFeeBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryFeeBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-shipping-block block"""
type WoocommerceCheckoutOrderSummaryShippingBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryShippingBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryShippingBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-subtotal-block block"""
type WoocommerceCheckoutOrderSummarySubtotalBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummarySubtotalBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummarySubtotalBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/checkout-order-summary-taxes-block block"""
type WoocommerceCheckoutOrderSummaryTaxesBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutOrderSummaryTaxesBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutOrderSummaryTaxesBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!

  """"""
  showRateAfterTaxName: Boolean!
}

"""woocommerce/checkout-payment-block block"""
type WoocommerceCheckoutPaymentBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutPaymentBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutPaymentBlockAttributes {
  """"""
  className: String

  """"""
  description: String!

  """"""
  lock: BlockAttributesObject!

  """"""
  showStepNumber: Boolean!

  """"""
  title: String!
}

"""woocommerce/checkout-shipping-address-block block"""
type WoocommerceCheckoutShippingAddressBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutShippingAddressBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutShippingAddressBlockAttributes {
  """"""
  className: String

  """"""
  description: String!

  """"""
  lock: BlockAttributesObject!

  """"""
  showStepNumber: Boolean!

  """"""
  title: String!
}

"""woocommerce/checkout-shipping-methods-block block"""
type WoocommerceCheckoutShippingMethodsBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutShippingMethodsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutShippingMethodsBlockAttributes {
  """"""
  allowCreateAccount: Boolean!

  """"""
  className: String

  """"""
  description: String!

  """"""
  lock: BlockAttributesObject!

  """"""
  showStepNumber: Boolean!

  """"""
  title: String!
}

"""woocommerce/checkout-terms-block block"""
type WoocommerceCheckoutTermsBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutTermsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutTermsBlockAttributes {
  """"""
  checkbox: Boolean!

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  text: String
}

"""woocommerce/checkout-totals-block block"""
type WoocommerceCheckoutTotalsBlock implements Block {
  """"""
  attributes: WoocommerceCheckoutTotalsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceCheckoutTotalsBlockAttributes {
  """"""
  checkbox: Boolean!

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  text: String
}

"""woocommerce/empty-cart-block block"""
type WoocommerceEmptyCartBlock implements Block {
  """"""
  attributes: WoocommerceEmptyCartBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceEmptyCartBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/empty-mini-cart-contents-block block"""
type WoocommerceEmptyMiniCartContentsBlock implements Block {
  """"""
  attributes: WoocommerceEmptyMiniCartContentsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceEmptyMiniCartContentsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/featured-category block"""
type WoocommerceFeaturedCategoryBlock implements Block {
  """"""
  attributes: WoocommerceFeaturedCategoryBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceFeaturedCategoryBlockAttributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  categoryId: Float

  """"""
  className: String

  """"""
  contentAlign: String!

  """"""
  dimRatio: Float!

  """"""
  editMode: Boolean!

  """"""
  focalPoint: BlockAttributesObject!

  """"""
  hasParallax: Boolean!

  """"""
  imageFit: String!

  """"""
  isRepeated: Boolean!

  """"""
  linkText: String

  """"""
  lock: BlockAttributesObject

  """"""
  mediaId: Float!

  """"""
  mediaSrc: String!

  """"""
  minHeight: Float!

  """"""
  overlayColor: String!

  """"""
  overlayGradient: String

  """"""
  previewCategory: BlockAttributesObject

  """"""
  showDesc: Boolean!

  """"""
  style: BlockAttributesObject!

  """"""
  textColor: String
}

"""woocommerce/featured-product block"""
type WoocommerceFeaturedProductBlock implements Block {
  """"""
  attributes: WoocommerceFeaturedProductBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceFeaturedProductBlockAttributes {
  """"""
  align: String

  """"""
  alt: String!

  """"""
  backgroundColor: String

  """"""
  borderColor: String

  """"""
  className: String

  """"""
  contentAlign: String!

  """"""
  dimRatio: Float!

  """"""
  editMode: Boolean!

  """"""
  focalPoint: BlockAttributesObject!

  """"""
  hasParallax: Boolean!

  """"""
  imageFit: String!

  """"""
  isRepeated: Boolean!

  """"""
  linkText: String!

  """"""
  lock: BlockAttributesObject

  """"""
  mediaId: Float!

  """"""
  mediaSrc: String!

  """"""
  minHeight: Float!

  """"""
  overlayColor: String!

  """"""
  overlayGradient: String

  """"""
  previewProduct: BlockAttributesObject

  """"""
  productId: Float

  """"""
  showDesc: Boolean!

  """"""
  showPrice: Boolean!

  """"""
  style: BlockAttributesObject!

  """"""
  textColor: String
}

"""woocommerce/filled-cart-block block"""
type WoocommerceFilledCartBlock implements Block {
  """"""
  attributes: WoocommerceFilledCartBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceFilledCartBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/filled-mini-cart-contents-block block"""
type WoocommerceFilledMiniCartContentsBlock implements Block {
  """"""
  attributes: WoocommerceFilledMiniCartContentsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceFilledMiniCartContentsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/handpicked-products block"""
type WoocommerceHandpickedProductsBlock implements Block {
  """"""
  attributes: WoocommerceHandpickedProductsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceHandpickedProductsBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  products: BlockAttributesArray!
}

"""woocommerce/mini-cart block"""
type WoocommerceMiniCartBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartBlockAttributes {
  """"""
  addToCartBehaviour: String!

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  hasHiddenPrice: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/mini-cart-contents block"""
type WoocommerceMiniCartContentsBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartContentsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartContentsBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/mini-cart-footer-block block"""
type WoocommerceMiniCartFooterBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartFooterBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartFooterBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/mini-cart-items-block block"""
type WoocommerceMiniCartItemsBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartItemsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartItemsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/mini-cart-products-table-block block"""
type WoocommerceMiniCartProductsTableBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartProductsTableBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartProductsTableBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/mini-cart-shopping-button-block block"""
type WoocommerceMiniCartShoppingButtonBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartShoppingButtonBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartShoppingButtonBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/mini-cart-title-block block"""
type WoocommerceMiniCartTitleBlock implements Block {
  """"""
  attributes: WoocommerceMiniCartTitleBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceMiniCartTitleBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/price-filter block"""
type WoocommercePriceFilterBlock implements Block {
  """"""
  attributes: WoocommercePriceFilterBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommercePriceFilterBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  heading: String!

  """"""
  headingLevel: Float!

  """"""
  inlineInput: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showFilterButton: Boolean!

  """"""
  showInputFields: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/proceed-to-checkout-block block"""
type WoocommerceProceedToCheckoutBlock implements Block {
  """"""
  attributes: WoocommerceProceedToCheckoutBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProceedToCheckoutBlockAttributes {
  """"""
  checkoutPageId: Float!

  """"""
  className: String

  """"""
  lock: BlockAttributesObject!
}

"""woocommerce/product-best-sellers block"""
type WoocommerceProductBestSellersBlock implements Block {
  """"""
  attributes: WoocommerceProductBestSellersBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductBestSellersBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  catOperator: String!

  """"""
  categories: BlockAttributesArray!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  editMode: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray
}

"""woocommerce/product-button block"""
type WoocommerceProductButtonBlock implements Block {
  """"""
  attributes: WoocommerceProductButtonBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductButtonBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

union WoocommerceProductButtonBlockAttributesUnion = WoocommerceProductButtonBlockAttributes | WoocommerceProductButtonBlockDeprecatedV1Attributes

""""""
type WoocommerceProductButtonBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

"""woocommerce/product-categories block"""
type WoocommerceProductCategoriesBlock implements Block {
  """"""
  attributes: WoocommerceProductCategoriesBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductCategoriesBlockAttributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  hasCount: Boolean!

  """"""
  hasEmpty: Boolean!

  """"""
  hasImage: Boolean!

  """"""
  isDropdown: Boolean!

  """"""
  isHierarchical: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

union WoocommerceProductCategoriesBlockAttributesUnion = WoocommerceProductCategoriesBlockAttributes | WoocommerceProductCategoriesBlockDeprecatedV1Attributes

""""""
type WoocommerceProductCategoriesBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  fontSize: String

  """"""
  hasCount: Boolean!

  """"""
  hasEmpty: Boolean!

  """"""
  hasImage: Boolean!

  """"""
  isDropdown: Boolean!

  """"""
  isHierarchical: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/product-category block"""
type WoocommerceProductCategoryBlock implements Block {
  """"""
  attributes: WoocommerceProductCategoryBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductCategoryBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  catOperator: String!

  """"""
  categories: BlockAttributesArray!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  editMode: Boolean!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray!
}

"""woocommerce/product-image block"""
type WoocommerceProductImageBlock implements Block {
  """"""
  attributes: WoocommerceProductImageBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductImageBlockAttributes {
  """"""
  className: String

  """"""
  imageSizing: String!

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!

  """"""
  saleBadgeAlign: String!

  """"""
  showProductLink: Boolean!

  """"""
  showSaleBadge: Boolean!
}

union WoocommerceProductImageBlockAttributesUnion = WoocommerceProductImageBlockAttributes | WoocommerceProductImageBlockDeprecatedV1Attributes

""""""
type WoocommerceProductImageBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  imageSizing: String!

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!

  """"""
  saleBadgeAlign: String!

  """"""
  showProductLink: Boolean!

  """"""
  showSaleBadge: Boolean!
}

"""woocommerce/product-new block"""
type WoocommerceProductNewBlock implements Block {
  """"""
  attributes: WoocommerceProductNewBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductNewBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  catOperator: String!

  """"""
  categories: BlockAttributesArray!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray!
}

"""woocommerce/product-on-sale block"""
type WoocommerceProductOnSaleBlock implements Block {
  """"""
  attributes: WoocommerceProductOnSaleBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductOnSaleBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  catOperator: String!

  """"""
  categories: BlockAttributesArray!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray!
}

"""woocommerce/product-price block"""
type WoocommerceProductPriceBlock implements Block {
  """"""
  attributes: WoocommerceProductPriceBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductPriceBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

union WoocommerceProductPriceBlockAttributesUnion = WoocommerceProductPriceBlockAttributes | WoocommerceProductPriceBlockDeprecatedV1Attributes

""""""
type WoocommerceProductPriceBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

"""woocommerce/product-rating block"""
type WoocommerceProductRatingBlock implements Block {
  """"""
  attributes: WoocommerceProductRatingBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductRatingBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

union WoocommerceProductRatingBlockAttributesUnion = WoocommerceProductRatingBlockAttributes | WoocommerceProductRatingBlockDeprecatedV1Attributes

""""""
type WoocommerceProductRatingBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

"""woocommerce/product-sale-badge block"""
type WoocommerceProductSaleBadgeBlock implements Block {
  """"""
  attributes: WoocommerceProductSaleBadgeBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductSaleBadgeBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

union WoocommerceProductSaleBadgeBlockAttributesUnion = WoocommerceProductSaleBadgeBlockAttributes | WoocommerceProductSaleBadgeBlockDeprecatedV1Attributes

""""""
type WoocommerceProductSaleBadgeBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

"""woocommerce/product-search block"""
type WoocommerceProductSearchBlock implements Block {
  """"""
  attributes: WoocommerceProductSearchBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductSearchBlockAttributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  formId: String!

  """"""
  hasLabel: Boolean!

  """"""
  label: String!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String!
}

union WoocommerceProductSearchBlockAttributesUnion = WoocommerceProductSearchBlockAttributes | WoocommerceProductSearchBlockDeprecatedV1Attributes

""""""
type WoocommerceProductSearchBlockDeprecatedV1Attributes {
  """"""
  align: String

  """"""
  className: String

  """"""
  formId: String!

  """"""
  hasLabel: Boolean!

  """"""
  label: String!

  """"""
  lock: BlockAttributesObject

  """"""
  placeholder: String!
}

"""woocommerce/product-summary block"""
type WoocommerceProductSummaryBlock implements Block {
  """"""
  attributes: WoocommerceProductSummaryBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductSummaryBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

union WoocommerceProductSummaryBlockAttributesUnion = WoocommerceProductSummaryBlockAttributes | WoocommerceProductSummaryBlockDeprecatedV1Attributes

""""""
type WoocommerceProductSummaryBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!
}

"""woocommerce/product-tag block"""
type WoocommerceProductTagBlock implements Block {
  """"""
  attributes: WoocommerceProductTagBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductTagBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray!

  """"""
  tagOperator: String!

  """"""
  tags: BlockAttributesArray!
}

"""woocommerce/product-title block"""
type WoocommerceProductTitleBlock implements Block {
  """"""
  attributes: WoocommerceProductTitleBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductTitleBlockAttributes {
  """"""
  className: String

  """"""
  headingLevel: Float!

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!

  """"""
  showProductLink: Boolean!
}

union WoocommerceProductTitleBlockAttributesUnion = WoocommerceProductTitleBlockAttributes | WoocommerceProductTitleBlockDeprecatedV1Attributes

""""""
type WoocommerceProductTitleBlockDeprecatedV1Attributes {
  """"""
  className: String

  """"""
  headingLevel: Float!

  """"""
  linkTarget: String

  """"""
  lock: BlockAttributesObject

  """"""
  productId: Float!

  """"""
  showProductLink: Boolean!
}

"""woocommerce/product-top-rated block"""
type WoocommerceProductTopRatedBlock implements Block {
  """"""
  attributes: WoocommerceProductTopRatedBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductTopRatedBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  catOperator: String!

  """"""
  categories: BlockAttributesArray!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray!
}

"""woocommerce/products-by-attribute block"""
type WoocommerceProductsByAttributeBlock implements Block {
  """"""
  attributes: WoocommerceProductsByAttributeBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceProductsByAttributeBlockAttributes {
  """"""
  align: String

  """"""
  alignButtons: Boolean!

  """"""
  attrOperator: String!

  """"""
  attributes: BlockAttributesArray!

  """"""
  className: String

  """"""
  columns: Float!

  """"""
  contentVisibility: BlockAttributesObject!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  rows: Float!

  """"""
  stockStatus: BlockAttributesArray!
}

"""woocommerce/reviews-by-category block"""
type WoocommerceReviewsByCategoryBlock implements Block {
  """"""
  attributes: WoocommerceReviewsByCategoryBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceReviewsByCategoryBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  categoryIds: BlockAttributesArray!

  """"""
  className: String

  """"""
  editMode: Boolean!

  """"""
  fontSize: String

  """"""
  imageType: String!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  previewReviews: BlockAttributesArray

  """"""
  reviewsOnLoadMore: Float!

  """"""
  reviewsOnPageLoad: Float!

  """"""
  showLoadMore: Boolean!

  """"""
  showOrderby: Boolean!

  """"""
  showProductName: Boolean!

  """"""
  showReviewContent: Boolean!

  """"""
  showReviewDate: Boolean!

  """"""
  showReviewImage: Boolean!

  """"""
  showReviewRating: Boolean!

  """"""
  showReviewerName: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/reviews-by-product block"""
type WoocommerceReviewsByProductBlock implements Block {
  """"""
  attributes: WoocommerceReviewsByProductBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceReviewsByProductBlockAttributes {
  """"""
  backgroundColor: String

  """"""
  className: String

  """"""
  editMode: Boolean!

  """"""
  fontSize: String

  """"""
  imageType: String!

  """"""
  lock: BlockAttributesObject

  """"""
  orderby: String!

  """"""
  previewReviews: BlockAttributesArray

  """"""
  productId: Float

  """"""
  reviewsOnLoadMore: Float!

  """"""
  reviewsOnPageLoad: Float!

  """"""
  showLoadMore: Boolean!

  """"""
  showOrderby: Boolean!

  """"""
  showReviewContent: Boolean!

  """"""
  showReviewDate: Boolean!

  """"""
  showReviewImage: Boolean!

  """"""
  showReviewRating: Boolean!

  """"""
  showReviewerName: Boolean!

  """"""
  style: BlockAttributesObject

  """"""
  textColor: String
}

"""woocommerce/stock-filter block"""
type WoocommerceStockFilterBlock implements Block {
  """"""
  attributes: WoocommerceStockFilterBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type WoocommerceStockFilterBlockAttributes {
  """"""
  className: String

  """"""
  heading: String!

  """"""
  headingLevel: Float!

  """"""
  isPreview: Boolean!

  """"""
  lock: BlockAttributesObject

  """"""
  showCounts: Boolean!

  """"""
  showFilterButton: Boolean!
}

"""Input for the writeReview mutation"""
input WriteReviewInput {
  """The approval status of the comment."""
  approved: String

  """The name of the comment's author."""
  author: String

  """The email of the comment's author."""
  authorEmail: String

  """The url of the comment's author."""
  authorUrl: String

  """
  This is an ID that can be passed to a mutation by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The database ID of the post object the comment belongs to."""
  commentOn: Int

  """Content of the comment."""
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17 
  """
  date: String

  """Parent comment ID of current comment."""
  parent: ID

  """Product rating"""
  rating: Int!
}

"""The payload for the writeReview mutation"""
type WriteReviewPayload {
  """
  If a &#039;clientMutationId&#039; input is provided to the mutation, it will be returned as output on the mutation. This ID can be used by the client to track the progress of mutations and catch possible duplicate mutation submissions.
  """
  clientMutationId: String

  """The product rating of the review that was created"""
  rating: Float

  """The product review that was created"""
  review: Comment
}

"""The writing setting type"""
type WritingSettings {
  """Default post category."""
  defaultCategory: Int

  """Default post format."""
  defaultPostFormat: String

  """Convert emoticons like :-) and :-P to graphics on display."""
  useSmilies: Boolean
}

"""yoast/faq-block block"""
type YoastFaqBlock implements Block {
  """"""
  attributes: YoastFaqBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type YoastFaqBlockAttributes {
  """"""
  additionalListCssClasses: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  questions: BlockAttributesArray
}

union YoastFaqBlockAttributesUnion = YoastFaqBlockAttributes | YoastFaqBlockDeprecatedV1Attributes

""""""
type YoastFaqBlockDeprecatedV1Attributes {
  """"""
  additionalListCssClasses: String

  """"""
  className: String

  """"""
  lock: BlockAttributesObject

  """"""
  questions: BlockAttributesArray
}

"""yoast/how-to-block block"""
type YoastHowToBlock implements Block {
  """"""
  attributes: YoastHowToBlockAttributesUnion

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type YoastHowToBlockAttributes {
  """"""
  additionalListCssClasses: String

  """"""
  className: String

  """"""
  days: String

  """"""
  defaultDurationText: String

  """"""
  description: BlockAttributesArray

  """"""
  durationText: String

  """"""
  hasDuration: Boolean

  """"""
  hours: String

  """"""
  jsonDescription: String

  """"""
  lock: BlockAttributesObject

  """"""
  minutes: String

  """"""
  steps: BlockAttributesArray

  """"""
  unorderedList: Boolean
}

union YoastHowToBlockAttributesUnion = YoastHowToBlockAttributes | YoastHowToBlockDeprecatedV1Attributes | YoastHowToBlockDeprecatedV2Attributes

""""""
type YoastHowToBlockDeprecatedV1Attributes {
  """"""
  additionalListCssClasses: String

  """"""
  className: String

  """"""
  days: String

  """"""
  defaultDurationText: String

  """"""
  description: BlockAttributesArray

  """"""
  durationText: String

  """"""
  hasDuration: Boolean

  """"""
  hours: String

  """"""
  jsonDescription: String

  """"""
  lock: BlockAttributesObject

  """"""
  minutes: String

  """"""
  steps: BlockAttributesArray

  """"""
  unorderedList: Boolean
}

""""""
type YoastHowToBlockDeprecatedV2Attributes {
  """"""
  additionalListCssClasses: String

  """"""
  className: String

  """"""
  days: String

  """"""
  defaultDurationText: String

  """"""
  description: BlockAttributesArray

  """"""
  durationText: String

  """"""
  hasDuration: Boolean

  """"""
  hours: String

  """"""
  jsonDescription: String

  """"""
  lock: BlockAttributesObject

  """"""
  minutes: String

  """"""
  steps: BlockAttributesArray

  """"""
  unorderedList: Boolean
}

"""yoast-seo/breadcrumbs block"""
type YoastSeoBreadcrumbsBlock implements Block {
  """"""
  attributes: YoastSeoBreadcrumbsBlockAttributes

  """Block attributes, JSON encoded"""
  attributesJSON: String

  """Server side rendered content."""
  dynamicContent: String

  """Gutenberg blocks"""
  innerBlocks: [Block!]

  """Is block rendered server side."""
  isDynamic: Boolean!

  """Name of the block."""
  name: String!

  """"""
  order: Int!

  """Original HTML content."""
  originalContent: String

  """Parent post."""
  parentNode: Node!

  """Parent post id."""
  parentNodeDatabaseId: Int!

  """Original HTML content with inner blocks."""
  saveContent: String
}

""""""
type YoastSeoBreadcrumbsBlockAttributes {
  """"""
  className: String

  """"""
  lock: BlockAttributesObject
}
